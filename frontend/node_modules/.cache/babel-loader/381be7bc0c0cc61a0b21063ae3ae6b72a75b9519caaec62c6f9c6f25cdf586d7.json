{"ast":null,"code":"import _toConsumableArray from\"/Users/jasonramirez/Desktop/fitness-app/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"/Users/jasonramirez/Desktop/fitness-app/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/jasonramirez/Desktop/fitness-app/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/jasonramirez/Desktop/fitness-app/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect,useRef}from'react';import{useUserValue}from'../UserContext';import{Chart,registerables}from'chart.js';import'chartjs-plugin-annotation';import workoutServices from'../services/workouts';import'./UserProgressChart.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var UserProgressChart=function UserProgressChart(_ref){var targetMuscles=_ref.targetMuscles;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),userExercises=_useState2[0],setUserExercises=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),filteredUserExercises=_useState4[0],setFilteredUserExercises=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),userExerciseClusters=_useState6[0],setUserExerciseClusters=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),currentExercise=_useState8[0],setCurrentExercise=_useState8[1];var chartCanvasRef=useRef(null);var chartInstanceRef=useRef(null);useEffect(function(){var fetchUserWorkouts=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var userExercisesTemp,userExerciseClustersTemp;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return workoutServices.getUserWorkoutExercises();case 2:userExercisesTemp=_context.sent;setUserExercises(userExercisesTemp);setFilteredUserExercises(userExercisesTemp);_context.next=7;return workoutServices.getUserClusters(userExercisesTemp[0].toLowerCase());case 7:userExerciseClustersTemp=_context.sent;setCurrentExercise(userExercisesTemp[0]);setUserExerciseClusters(userExerciseClustersTemp);case 10:case\"end\":return _context.stop();}},_callee);}));return function fetchUserWorkouts(){return _ref2.apply(this,arguments);};}();fetchUserWorkouts();},[]);useEffect(function(){var renderExerciseChart=function renderExerciseChart(){if(chartInstanceRef.current){// Destroy the existing chart instance if it exists\nchartInstanceRef.current.destroy();}Chart.register.apply(Chart,_toConsumableArray(registerables));var ctx=chartCanvasRef.current.getContext('2d');var chart=new Chart(ctx,{type:'line',data:{labels:userExerciseClusters.map(function(cluster){return new Date(cluster.createdAt).toLocaleDateString();}),datasets:[{label:'Reps',data:userExerciseClusters.map(function(cluster){return cluster.cluster.reps;}),backgroundColor:'rgba(75, 192, 192, 0.2)',borderColor:'rgba(75, 192, 192, 1)',borderWidth:1}]},options:{responsive:true,maintainAspectRatio:false,scales:{y:{type:'linear',beginAtZero:true}}}});chartInstanceRef.current=chart;};renderExerciseChart();},[userExerciseClusters]);var includesIgnoreCase=function includesIgnoreCase(array,searchItem){return array.some(function(item){return item.toLowerCase()===searchItem.toLowerCase();});};var handleExerciseInputChange=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(event){var userExerciseInputValue,filteredUserExercisesTemp,userExerciseClustersTemp;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:userExerciseInputValue=event.target.value.toLowerCase();filteredUserExercisesTemp=userExercises.filter(function(exercise){return exercise.toLowerCase().startsWith(userExerciseInputValue);});setFilteredUserExercises(filteredUserExercisesTemp);if(!includesIgnoreCase(userExercises,userExerciseInputValue)){_context2.next=9;break;}_context2.next=6;return workoutServices.getUserClusters(userExerciseInputValue);case 6:userExerciseClustersTemp=_context2.sent;setUserExerciseClusters(userExerciseClustersTemp);setCurrentExercise(userExerciseClustersTemp[0].cluster.exercise.name);case 9:case\"end\":return _context2.stop();}},_callee2);}));return function handleExerciseInputChange(_x){return _ref3.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"user-progress\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"\",children:\"Exercise: \"}),/*#__PURE__*/_jsx(\"input\",{list:\"exercises-list\",id:\"exercises\",placeholder:\"Choose an exercise...\",onChange:handleExerciseInputChange}),/*#__PURE__*/_jsx(\"datalist\",{id:\"exercises-list\",children:filteredUserExercises.map(function(exercise,index){return/*#__PURE__*/_jsxs(\"option\",{children:[\" \",exercise,\" \"]},index);})}),/*#__PURE__*/_jsxs(\"label\",{children:[\" \",\"Current Exercise: \".concat(currentExercise)]}),/*#__PURE__*/_jsx(\"div\",{className:\"user-progress-chart\",children:/*#__PURE__*/_jsx(\"canvas\",{id:\"exerciseProgressChart\",ref:chartCanvasRef})})]});};export default UserProgressChart;","map":{"version":3,"names":["useState","useEffect","useRef","useUserValue","Chart","registerables","workoutServices","jsx","_jsx","jsxs","_jsxs","UserProgressChart","_ref","targetMuscles","_useState","_useState2","_slicedToArray","userExercises","setUserExercises","_useState3","_useState4","filteredUserExercises","setFilteredUserExercises","_useState5","_useState6","userExerciseClusters","setUserExerciseClusters","_useState7","_useState8","currentExercise","setCurrentExercise","chartCanvasRef","chartInstanceRef","fetchUserWorkouts","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userExercisesTemp","userExerciseClustersTemp","wrap","_callee$","_context","prev","next","getUserWorkoutExercises","sent","getUserClusters","toLowerCase","stop","apply","arguments","renderExerciseChart","current","destroy","register","_toConsumableArray","ctx","getContext","chart","type","data","labels","map","cluster","Date","createdAt","toLocaleDateString","datasets","label","reps","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio","scales","y","beginAtZero","includesIgnoreCase","array","searchItem","some","item","handleExerciseInputChange","_ref3","_callee2","event","userExerciseInputValue","filteredUserExercisesTemp","_callee2$","_context2","target","value","filter","exercise","startsWith","name","_x","className","children","htmlFor","list","id","placeholder","onChange","index","concat","ref"],"sources":["/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/UserProgressChart.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react'\nimport { useUserValue } from '../UserContext'\nimport { Chart, registerables } from 'chart.js'\nimport 'chartjs-plugin-annotation';\nimport workoutServices from '../services/workouts'\nimport './UserProgressChart.css'\n\nconst UserProgressChart = ( {targetMuscles} ) => {\n    const [userExercises, setUserExercises] = useState([])\n    const [filteredUserExercises, setFilteredUserExercises] = useState([])\n    const [userExerciseClusters, setUserExerciseClusters] = useState([])\n    const [currentExercise, setCurrentExercise] = useState('')\n    const chartCanvasRef = useRef(null)\n    const chartInstanceRef = useRef(null);\n\n    useEffect(() => {\n        const fetchUserWorkouts = async () => {\n            const userExercisesTemp = await workoutServices.getUserWorkoutExercises()\n            setUserExercises(userExercisesTemp)\n            setFilteredUserExercises(userExercisesTemp)\n\n            const userExerciseClustersTemp =  await workoutServices.getUserClusters(userExercisesTemp[0].toLowerCase())\n            setCurrentExercise(userExercisesTemp[0])\n            setUserExerciseClusters(userExerciseClustersTemp)\n        }\n        fetchUserWorkouts()\n\n    }, [])\n\n    useEffect(() => {\n        const renderExerciseChart = () => {\n            if (chartInstanceRef.current) {\n                // Destroy the existing chart instance if it exists\n                chartInstanceRef.current.destroy();\n              }\n            Chart.register(...registerables);\n            const ctx = chartCanvasRef.current.getContext('2d')\n            const chart = new Chart(ctx, {\n                type: 'line',\n                data: {\n                    labels: userExerciseClusters.map( cluster => new Date(cluster.createdAt).toLocaleDateString() ),\n                    datasets: [\n                        {\n                            label: 'Reps',\n                            data: userExerciseClusters.map(cluster => cluster.cluster.reps),\n                            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n                            borderColor: 'rgba(75, 192, 192, 1)',\n                            borderWidth: 1,\n                        }\n                    ]\n                },\n                options: {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    scales: {\n                        y: {\n                            type: 'linear',\n                            beginAtZero: true,\n                        },\n                    }\n                }\n            })\n            chartInstanceRef.current = chart;\n        }\n\n        renderExerciseChart()\n    }, [userExerciseClusters])\n\n    const includesIgnoreCase = (array, searchItem) => {\n        return array.some((item) => item.toLowerCase() === searchItem.toLowerCase())\n    }\n\n    const handleExerciseInputChange = async (event) => {        \n        const userExerciseInputValue = event.target.value.toLowerCase()\n        const filteredUserExercisesTemp = userExercises.filter( exercise => \n            exercise.toLowerCase().startsWith(userExerciseInputValue)\n        )\n        setFilteredUserExercises(filteredUserExercisesTemp)\n        if (includesIgnoreCase(userExercises, userExerciseInputValue)) {\n            const userExerciseClustersTemp = await workoutServices.getUserClusters(userExerciseInputValue)\n            setUserExerciseClusters(userExerciseClustersTemp)\n            setCurrentExercise(userExerciseClustersTemp[0].cluster.exercise.name)\n        }\n    }\n    \n    return (\n        <div className=\"user-progress\" >\n            <label htmlFor=\"\">Exercise: </label>\n            <input list=\"exercises-list\"\n                    id=\"exercises\" \n                    placeholder='Choose an exercise...' \n                    onChange={handleExerciseInputChange}\n            />\n            <datalist id=\"exercises-list\">\n                {filteredUserExercises.map( (exercise, index) => (\n                    <option key={index}> {exercise} </option>\n                ))}\n            </datalist>\n            <label> {`Current Exercise: ${currentExercise}`}</label>\n            <div className=\"user-progress-chart\">\n                <canvas id=\"exerciseProgressChart\" ref={chartCanvasRef}></canvas>\n            </div>\n        </div>\n    )\n}\n\nexport default UserProgressChart"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}