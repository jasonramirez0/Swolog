{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jasonramirez/Desktop/fitness-app/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/jasonramirez/Desktop/fitness-app/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/jasonramirez/Desktop/fitness-app/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';import exerciseServices from'../services/exercises';import Table from'react-bootstrap/Table';import'./ExercisePopularityTable.css';//Creates a table that displays the 10 most popular exercises based on muscle groups or generally\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ExercisePopularityTable=function ExercisePopularityTable(_ref){var targetMuscles=_ref.targetMuscles;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),exercises=_useState2[0],setExercises=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),mostPopularExercises=_useState4[0],setMostPopularExercises=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),filteredTargetMuscles=_useState6[0],setFilteredTargetMuscles=_useState6[1];useEffect(function(){setFilteredTargetMuscles(targetMuscles);// Sets exercises state variable\nvar fetchExercises=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var exercisesTemp;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return exerciseServices.getAll();case 3:exercisesTemp=_context.sent;setExercises(exercisesTemp);_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.log('Error fetching exercises',_context.t0);case 10:case\"end\":return _context.stop();}},_callee,null,[[0,7]]);}));return function fetchExercises(){return _ref2.apply(this,arguments);};}();//Sets mostPopularExercises state variable\nvar fetchMostPopularExercises=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var currentMostPopularExercises;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return exerciseServices.getMostPopular();case 3:currentMostPopularExercises=_context2.sent;setMostPopularExercises(currentMostPopularExercises);_context2.next=10;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](0);console.log('Error fetching most popular exercises',_context2.t0);case 10:case\"end\":return _context2.stop();}},_callee2,null,[[0,7]]);}));return function fetchMostPopularExercises(){return _ref3.apply(this,arguments);};}();fetchExercises();fetchMostPopularExercises();},[]);var handleTargetMuscleInputChange=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(event){var userInputValue,filteredTargetMusclesTemp,mostPopularExercisesMG;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:userInputValue=event.target.value.toLowerCase();filteredTargetMusclesTemp=targetMuscles.filter(function(targetMuscle){return targetMuscle.toLowerCase().startsWith(userInputValue);});setFilteredTargetMuscles(filteredTargetMusclesTemp);if(!targetMuscles.includes(userInputValue)){_context3.next=14;break;}_context3.prev=4;_context3.next=7;return exerciseServices.getMostPopular(userInputValue);case 7:mostPopularExercisesMG=_context3.sent;setMostPopularExercises(mostPopularExercisesMG);_context3.next=14;break;case 11:_context3.prev=11;_context3.t0=_context3[\"catch\"](4);console.log(\"Error getting most popular exercises for \".concat(userInputValue));case 14:case\"end\":return _context3.stop();}},_callee3,null,[[4,11]]);}));return function handleTargetMuscleInputChange(_x){return _ref4.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"exercise-popularity-table\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"target-muscle\",children:\"Target Muscle: \"}),/*#__PURE__*/_jsx(\"input\",{list:\"target-muscles-list\",id:\"target-muscles\",placeholder:\"Choose a target muscle...\",onChange:handleTargetMuscleInputChange}),/*#__PURE__*/_jsx(\"datalist\",{id:\"target-muscles-list\",children:filteredTargetMuscles.map(function(targetMuscle,index){return/*#__PURE__*/_jsx(\"option\",{value:targetMuscle},index);})})]}),/*#__PURE__*/_jsxs(Table,{striped:true,children:[/*#__PURE__*/_jsxs(\"thead\",{children:[/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"th\",{colSpan:3,children:\"Most Popular Exercises\"})}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Rank\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Exercise Name\"})]})]}),/*#__PURE__*/_jsx(\"tbody\",{children:mostPopularExercises.map(function(exercise,index){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[\" \",index+1,\" \"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\" \",exercise,\" \"]},index)]});})})]})]});};export default ExercisePopularityTable;","map":{"version":3,"names":["useState","useEffect","exerciseServices","Table","jsx","_jsx","jsxs","_jsxs","ExercisePopularityTable","_ref","targetMuscles","_useState","_useState2","_slicedToArray","exercises","setExercises","_useState3","_useState4","mostPopularExercises","setMostPopularExercises","_useState5","_useState6","filteredTargetMuscles","setFilteredTargetMuscles","fetchExercises","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","exercisesTemp","wrap","_callee$","_context","prev","next","getAll","sent","t0","console","log","stop","apply","arguments","fetchMostPopularExercises","_ref3","_callee2","currentMostPopularExercises","_callee2$","_context2","getMostPopular","handleTargetMuscleInputChange","_ref4","_callee3","event","userInputValue","filteredTargetMusclesTemp","mostPopularExercisesMG","_callee3$","_context3","target","value","toLowerCase","filter","targetMuscle","startsWith","includes","concat","_x","className","children","htmlFor","list","id","placeholder","onChange","map","index","striped","colSpan","exercise"],"sources":["/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/ExercisePopularityTable.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport exerciseServices from '../services/exercises'\nimport Table from 'react-bootstrap/Table'\nimport './ExercisePopularityTable.css'\n\n//Creates a table that displays the 10 most popular exercises based on muscle groups or generally\nconst ExercisePopularityTable = ({ targetMuscles }) => {\n    const [exercises, setExercises] = useState([])\n    const [mostPopularExercises, setMostPopularExercises] = useState([])\n    const [filteredTargetMuscles, setFilteredTargetMuscles] = useState([])\n\n    useEffect(() => {\n        setFilteredTargetMuscles(targetMuscles)\n        // Sets exercises state variable\n        const fetchExercises = async () => {\n            try {\n                const exercisesTemp = await exerciseServices.getAll()\n                setExercises(exercisesTemp)\n            } catch (error) {\n                console.log('Error fetching exercises', error)\n            }\n        }\n       \n        //Sets mostPopularExercises state variable\n        const fetchMostPopularExercises = async () => {\n            try {\n                const currentMostPopularExercises = await exerciseServices.getMostPopular()\n                setMostPopularExercises(currentMostPopularExercises) \n            } catch (error) {\n                console.log('Error fetching most popular exercises', error)\n            }\n        }\n\n        fetchExercises()\n        fetchMostPopularExercises()\n    }, [])\n\n    const handleTargetMuscleInputChange = async (event) => {\n        const userInputValue = event.target.value.toLowerCase()\n        const filteredTargetMusclesTemp = targetMuscles.filter(targetMuscle =>\n            targetMuscle.toLowerCase().startsWith(userInputValue)\n        )\n        setFilteredTargetMuscles(filteredTargetMusclesTemp)\n\n        if (targetMuscles.includes(userInputValue)) {\n            try {\n                const mostPopularExercisesMG = await exerciseServices.getMostPopular(userInputValue)\n                setMostPopularExercises(mostPopularExercisesMG)\n            } catch (error) {\n                console.log(`Error getting most popular exercises for ${userInputValue}`)\n            }\n        }\n    }\n\n    return (\n        <div className=\"exercise-popularity-table\">\n            <div>\n                <label htmlFor='target-muscle'>Target Muscle: </label>\n                <input list=\"target-muscles-list\" id=\"target-muscles\" \n                placeholder=\"Choose a target muscle...\" onChange={handleTargetMuscleInputChange}/>\n                <datalist id=\"target-muscles-list\">\n                    {filteredTargetMuscles.map( (targetMuscle, index) => (\n                        <option key={index} value={targetMuscle}/>\n                    ))}\n                </datalist>\n            </div>\n            <Table striped>\n                <thead>\n                    <tr>\n                        <th colSpan={3}>\n                            Most Popular Exercises\n                        </th>\n                    </tr>\n                    <tr>\n                        <th>Rank</th>\n                        <th>Exercise Name</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {mostPopularExercises.map((exercise, index) => {\n                        return (\n                            <tr> \n                                <td> {index+ 1} </td> \n                                <td key={index}> {exercise} </td> \n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </Table>\n        </div>\n    )\n}\n\nexport default ExercisePopularityTable"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}