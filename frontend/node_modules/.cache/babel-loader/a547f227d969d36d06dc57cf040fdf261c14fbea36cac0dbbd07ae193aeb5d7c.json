{"ast":null,"code":"var _jsxFileName = \"/Users/jasonramirez/Desktop/fitness-app/frontend/src/App.js\",\n  _s2 = $RefreshSig$();\nimport axios from 'axios';\nimport { BrowserRouter as Router, Routes, Route, Link, Navigate } from 'react-router-dom';\nimport { ProSidebarProvider } from 'react-pro-sidebar';\nimport './index.css';\nimport { useState, useEffect } from 'react';\nimport exerciseServices from './services/exercises';\nimport workoutServices from './services/workouts';\nimport Home from './components/Home';\nimport LoginForm from './components/LoginForm';\nimport UserSidebar from './components/UserSidebar';\nimport RegistrationPage from './components/RegistrationPage';\nimport WorkoutHistoryPage from './components/WorkoutHistoryPage';\nimport Header from './components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  /* App state variables and updater functions */\n  const [errorMessage, setErrorMessage] = useState([]);\n  const [username, setUsername, password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  /* Gets logged-in user and token from localStorage if available */\n  useEffect(() => {\n    /*window.localStorage.clear()*/\n    const loggedUserJSON = window.localStorage.getItem('loggedFitnessAppUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      workoutServices.setToken(user.token);\n    }\n  }, []);\n\n  /* Error notification */\n  const Notification = _ref => {\n    let {\n      message\n    } = _ref;\n    if (message === null) {\n      return null;\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\" \", message, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }, this);\n  };\n  const UserPage = _ref2 => {\n    _s();\n    let {\n      loggedIn,\n      setLoggedIn\n    } = _ref2;\n    /* UserPage state variables and updater functions */\n    const [exercises, setExercises] = useState([]);\n    const [workout, setWorkout] = useState({});\n    const [currSets, setCurrSets] = useState(0);\n    const [currReps, setCurrReps] = useState(0);\n    const [openDropdown, setOpenDropdown] = useState(false);\n\n    /* Gets and sets all of the exercises from the backend */\n    useEffect(() => {\n      exerciseServices.getAll().then(exercises => {\n        setExercises(exercises);\n      });\n    }, []);\n    const handleSetChange = event => {\n      setCurrSets(event.target.value);\n    };\n    const handleRepChange = event => {\n      setCurrReps(event.target.value);\n    };\n    const addCluster = event => {\n      event.preventDefault();\n      const [exercise, sets, reps] = [event.target.elements.exercises.value, event.target.elements.sets.value, event.target.elements.reps.value];\n      const newCluster = {\n        'exercise': exercise,\n        'sets': sets,\n        'reps': reps\n      };\n\n      /* Creates new workout with this cluster if first cluster of the workout */\n      if (Object.keys(workout).length === 0) {\n        workoutServices.create(newCluster).then(createdWorkout => {\n          setWorkout({\n            ...createdWorkout\n          });\n          console.log(workout.clusters);\n        });\n      } else {\n        /* Adds cluster to previously existing workout */\n        const updatedWorkout = {\n          ...workout,\n          clusters: workout.clusters.concat(newCluster)\n        };\n        workoutServices.update(workout.id, updatedWorkout).then(updatedWorkout => {\n          setWorkout(updatedWorkout);\n        });\n      }\n    };\n    const ClustersList = () => {\n      console.log(`list clusters ${workout}`);\n      if (Object.keys(workout).length === 0) {\n        console.log('empty');\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"noClustersPrompt\",\n          children: \" Add your first exercise for this workout! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 10\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Exercise \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Sets \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \" Reps \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 3\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 3\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: workout.clusters.map(cluster => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", cluster.exercise.name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", cluster.sets, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", cluster.reps, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 7\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 3\n        }, this);\n      }\n    };\n    const [filteredExercises, setFilteredExercises] = useState([]);\n    /*const [exercisesInput, setExerciseInput] = useState('')*/\n\n    const handleExerciseInputChange = event => {\n      const userInputValue = event.target.value.toLowerCase();\n      const filteredExercisesTemp = exercises.filter(exercise => exercise.name.toLowerCase().startsWith(userInputValue));\n      setFilteredExercises(filteredExercisesTemp);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-main\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-log\",\n        children: [/*#__PURE__*/_jsxDEV(Notification, {\n          message: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" Current Workout  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: addCluster,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"exercise\",\n              children: \" Exercise \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              list: \"exercise-list\",\n              id: \"exercises\",\n              placeholder: \"Type to search...\",\n              onChange: handleExerciseInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 4\n            }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n              id: \"exercise-list\",\n              children: filteredExercises.map(exercise => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: exercise.name\n              }, exercise.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 6\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 4\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"sets\",\n              children: \" Sets \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"sets\",\n              type: \"text\",\n              value: currSets,\n              onChange: handleSetChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"reps\",\n              children: \" Reps \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"reps\",\n              type: \"text\",\n              value: currReps,\n              onChange: handleRepChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 4\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \" Add \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(ClustersList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 4\n    }, this);\n  };\n  _s(UserPage, \"Nr5ejU16Zsv8EayyPUbW/oCbQEg=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: !loggedIn ? /*#__PURE__*/_jsxDEV(Home, {\n            loggedIn: loggedIn,\n            setLoggedIn: setLoggedIn,\n            user: user,\n            setUser: setUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 20\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            replace: true,\n            to: \"/user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user\",\n          element: /*#__PURE__*/_jsxDEV(ProSidebarProvider, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(UserPage, {\n              setLoggedIn: setLoggedIn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 28\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(RegistrationPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/workout-history\",\n          element: /*#__PURE__*/_jsxDEV(ProSidebarProvider, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(WorkoutHistoryPage, {\n              setLoggedIn: setLoggedIn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 28\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 2\n  }, this);\n};\n_s2(App, \"H7mbBZA1qYEV49SqPiDYV8U4smg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","BrowserRouter","Router","Routes","Route","Link","Navigate","ProSidebarProvider","useState","useEffect","exerciseServices","workoutServices","Home","LoginForm","UserSidebar","RegistrationPage","WorkoutHistoryPage","Header","jsxDEV","_jsxDEV","App","_s2","_s","$RefreshSig$","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","loggedIn","setLoggedIn","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","Notification","_ref","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","UserPage","_ref2","exercises","setExercises","workout","setWorkout","currSets","setCurrSets","currReps","setCurrReps","openDropdown","setOpenDropdown","getAll","then","handleSetChange","event","target","value","handleRepChange","addCluster","preventDefault","exercise","sets","reps","elements","newCluster","Object","keys","length","create","createdWorkout","console","log","clusters","updatedWorkout","concat","update","id","ClustersList","htmlFor","map","cluster","name","filteredExercises","setFilteredExercises","handleExerciseInputChange","userInputValue","toLowerCase","filteredExercisesTemp","filter","startsWith","onSubmit","list","placeholder","onChange","type","exact","path","element","replace","to","_c","$RefreshReg$"],"sources":["/Users/jasonramirez/Desktop/fitness-app/frontend/src/App.js"],"sourcesContent":["import axios from 'axios'\nimport {\n    BrowserRouter as Router,\n    Routes, Route, Link, Navigate\n} from 'react-router-dom'\nimport { ProSidebarProvider } from 'react-pro-sidebar'\nimport './index.css'\nimport { useState, useEffect } from 'react'\n\nimport exerciseServices from './services/exercises'\nimport workoutServices from './services/workouts'\n\nimport Home from './components/Home'\nimport LoginForm from './components/LoginForm'\nimport UserSidebar from './components/UserSidebar'\nimport RegistrationPage from './components/RegistrationPage'\nimport WorkoutHistoryPage from './components/WorkoutHistoryPage'\nimport Header from './components/Header'\n\nconst App = () => {\n    /* App state variables and updater functions */\n    const [errorMessage, setErrorMessage] = useState([])    \n    const [username, setUsername, password, setPassword] = useState('')\n    const [user, setUser] = useState(null)\n    const [loggedIn, setLoggedIn] = useState(false)\n\n    /* Gets logged-in user and token from localStorage if available */\n  useEffect(() => {\n      /*window.localStorage.clear()*/\n      const loggedUserJSON = window.localStorage.getItem('loggedFitnessAppUser')\n\tif (loggedUserJSON) {\n\t    const user = JSON.parse(loggedUserJSON)\n\t    setUser(user)\n\t    workoutServices.setToken(user.token)\n\t}\n    }, [])\n    \n    /* Error notification */\n    const Notification = ({message}) => {\n\tif (message === null) {\n\t    return null\n\t}\n\treturn (\n\t\t<div className='error'> {message} </div>\n\t)\n    }\n\n    const UserPage = ({loggedIn, setLoggedIn}) => {\t\n\t/* UserPage state variables and updater functions */\n\tconst [exercises, setExercises] = useState([])\n\tconst [workout, setWorkout] = useState({})\n\tconst [currSets, setCurrSets] = useState(0)\n\tconst [currReps, setCurrReps] = useState(0)\n\tconst [openDropdown, setOpenDropdown] = useState(false)\n\n\t/* Gets and sets all of the exercises from the backend */\n\tuseEffect(() => {\n\t    exerciseServices\n\t\t.getAll()\n\t\t.then(exercises => {\n\t\t    setExercises(exercises)\n\t\t})\n        }, [])\n\n        const handleSetChange = (event) => {\t\n\t    setCurrSets(event.target.value)\n        }\n\n        const handleRepChange = (event) => {\n\t    setCurrReps(event.target.value)\n        }\n\n\tconst addCluster = (event) => {\n\t    event.preventDefault()\t    \n\t    const [exercise, sets, reps] = [\n\t\tevent.target.elements.exercises.value,\n\t\tevent.target.elements.sets.value,\n\t\tevent.target.elements.reps.value\n\t    ]\n\t    const newCluster = {'exercise': exercise, 'sets': sets, 'reps': reps}\n\n\t    /* Creates new workout with this cluster if first cluster of the workout */ \n\t    if (Object.keys(workout).length === 0) {\n\t\tworkoutServices\n\t\t    .create(newCluster)\n\t\t    .then(createdWorkout => {\t\t\t\n\t\t\tsetWorkout({...createdWorkout})\n\t\t\tconsole.log(workout.clusters)\n\t \t    })\t    \n\t    } else {\n\t\t/* Adds cluster to previously existing workout */\t\t\n\t\tconst updatedWorkout = {...workout, clusters: workout.clusters.concat(newCluster)}\n\t\tworkoutServices\n\t\t    .update(workout.id, updatedWorkout)\n\t\t    .then(updatedWorkout => {\t\t\t\n\t\t\tsetWorkout(updatedWorkout)\n\t\t    })\n\t    }\n\t}\n\t\n\tconst ClustersList = () => {\n\t    console.log(`list clusters ${workout}`)\t    \n\t    if (Object.keys(workout).length === 0) {\n\t\tconsole.log('empty')\n\t\treturn <label htmlFor=\"noClustersPrompt\"> Add your first exercise for this workout! </label>\n\t    } else {\n\t      return (\n\t\t<table>\n\t\t<thead>\n\t\t<tr>\n\t\t<th> Exercise </th>\n\t\t<th> Sets </th>\n\t\t<th> Reps </th>\n\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t{workout.clusters.map(cluster =>\n\t\t    <tr>\n\t\t    <td> {cluster.exercise.name} </td>\n\t\t    <td> {cluster.sets} </td>\n\t\t    <td> {cluster.reps} </td>\n\t\t  </tr>\n\t\t  )}\n\t\t  </tbody>\n\t\t  </table>\n\t\t)\n\t    }\n\t}\n\n      const [filteredExercises, setFilteredExercises] = useState([])\n      /*const [exercisesInput, setExerciseInput] = useState('')*/\n      \n      const handleExerciseInputChange = (event) => {\n\tconst userInputValue = event.target.value.toLowerCase()\n\tconst filteredExercisesTemp = exercises.filter( exercise =>\n\t  exercise.name.toLowerCase().startsWith(userInputValue)\n\t)\n\tsetFilteredExercises(filteredExercisesTemp)\n      }\n      \n\treturn (\n\t  <div className=\"user-main\">\n\t  <Header />\n\t\t{/*<UserSidebar setLoggedIn={setLoggedIn}/>*/}\n\t\t<div className=\"user-log\">\n\t\t<Notification message={errorMessage}/>\n\t\t<div>\n\t        <h2> Current Workout  </h2>\t\n\t\t\n\t\t</div>\n\t<form onSubmit={addCluster}>\t\t\n\t  <div>\n\t            <label htmlFor=\"exercise\"> Exercise </label>\n\t  <input list=\"exercise-list\" id=\"exercises\"  placeholder=\"Type to search...\" onChange={handleExerciseInputChange}/>\n\t  <datalist id=\"exercise-list\">\n\t  {filteredExercises.map( exercise => (\n\t    <option key={exercise.id} value={exercise.name} />\n\t  ))}\n\t  </datalist>\n\t  {/*<select name=\"exercises\" id=\"exercises\">\n\t                {filteredExerecises.map(exercise => <option value={exercise.name}>{exercise.name}</option>)}\n\t            </select>*/}\t\n\t  </div>\n\t  <div>\n\t\t    <label htmlFor=\"sets\"> Sets </label>\n\t\t    <input id=\"sets\" type=\"text\" value={currSets} onChange={handleSetChange}/>\n\t  </div>\n\t  <div>\n\t\t    <label htmlFor=\"reps\"> Reps </label>\n\t  <input id=\"reps\" type=\"text\" value={currReps} onChange={handleRepChange} />\n\t  </div>\n\t\t    <button type=\"submit\"> Add </button>\n\t  </form>\n\t  <ClustersList />\n\t  </div>\t       \n\t\t</div>\n        )\t\n    }\n    \n    return (\n\t<div>\n\t    <Router>\t        \n\t    <Routes>\n\t        <Route exact path=\"/\" element={\n\t\t    !loggedIn ? (<Home loggedIn={loggedIn} setLoggedIn={setLoggedIn}\n\t\t    user={user} setUser={setUser} />) : (\n\t            <Navigate replace to={\"/user\"} />\n\t            )\n                }\n                /> \n\t    <Route path=\"/user\" element={\n\t\t    <ProSidebarProvider> <UserPage setLoggedIn={setLoggedIn} /> </ProSidebarProvider>\n\t    }/>\n\t    <Route path=\"/register\" element={<RegistrationPage />}/>\n\t    <Route path=\"/workout-history\" element={\n\t\t    <ProSidebarProvider> <WorkoutHistoryPage setLoggedIn={setLoggedIn} /> </ProSidebarProvider>\n\t    }/>\n\t    </Routes>\n\t    </Router>\n\t    </div>\n    )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}