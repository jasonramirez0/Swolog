{"ast":null,"code":"var _jsxFileName = \"/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/WorkoutHistoryPage.js\",\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport UserSidebar from '../components/UserSidebar';\nimport workoutServices from '../services/workouts';\nimport './WorkoutHistoryPage.css';\nimport maleHumanBodyImage from '../maleHumanBodyImage.png';\nimport maleHumanBodyMap from '../maleHumanBody.map';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WorkoutHistoryPage = _ref => {\n  _s2();\n  var _s = $RefreshSig$();\n  let {\n    setLoggedIn\n  } = _ref;\n  const [openDropdown, setOpenDropdown] = useState(false);\n  const [prevWorkouts, setPrevWorkouts] = useState([]);\n  const [selectedWorkout, setSelectedWorkout] = useState(null);\n  const handleDropdownClick = () => {\n    setOpenDropdown(!openDropdown);\n    workoutServices.get().then(userWorkouts => {\n      console.log(userWorkouts);\n      setPrevWorkouts(userWorkouts);\n    });\n    console.log(prevWorkouts);\n  };\n  const handleSelectedWorkoutChange = event => {\n    console.log(`event ${event.target.value}`);\n    setSelectedWorkout(prevWorkouts.at(event.target.value.toString()));\n  };\n  const Dropdown = _ref2 => {\n    let {\n      open,\n      trigger\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [trigger, open ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"previous-workouts\",\n          id: \"previous-workouts\",\n          value: selectedWorkout,\n          onChange: handleSelectedWorkoutChange,\n          children: prevWorkouts.map((workout, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: index,\n            children: [\" \", workout.createdAt, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 9\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this) : null]\n    }, void 0, true);\n  };\n  const HumanBody = () => {\n    _s();\n    const [imageMap, setImageMap] = useState([]);\n    useEffect(() => {\n      fetch(maleHumanBodyMap).then(response => response.text()).then(mapData => {\n        const mapJson = convertMapFileToJson(mapData);\n        setImageMap(mapJson);\n      }).catch(error => {\n        console.error('Error loading map file:', error);\n      });\n    }, []);\n    const convertMapFileToJson = mapData => {\n      const shapeRegex = /<area[^>]+>/g;\n      const coordsRegex = /coords=\"([^\"]+)\"/;\n      const hrefRegex = /href=\"([^\"]+)\"/;\n      const shapes = mapData.match(shapeRegex);\n      const imageMapData = shapes.map(shape => {\n        const coordsMatch = shape.match(coordsRegex);\n        const hrefMatch = shape.match(hrefRegex);\n        const coords = coordsMatch ? coordsMatch[1].split(',') : [];\n        const href = hrefMatch ? hrefMatch[1] : '';\n        return {\n          shape: 'poly',\n          // Specify the shape type here (rect, circle, poly, etc.)\n          coords: coords.map(Number),\n          href\n        };\n      });\n      return imageMapData;\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: maleHumanBodyImage,\n        alt: \"Male Human Body\",\n        useMap: \"#body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"map\", {\n        name: \"body\",\n        id: \"body\",\n        children: /*#__PURE__*/_jsxDEV(\"area\", {\n          style: {\n            display: 'inline-block'\n          },\n          shape: \"rect\",\n          coords: \"100,100,1000,1000\",\n          className: \"muscle-group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true);\n  };\n  _s(HumanBody, \"0wZnaDG9Nyrvyp8LfMt+Fhoa35s=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(HumanBody, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 6\n  }, this);\n};\n_s2(WorkoutHistoryPage, \"5uhtRZbDm8BCW4g41TOFegHT5m4=\");\n_c = WorkoutHistoryPage;\nexport default WorkoutHistoryPage;\nvar _c;\n$RefreshReg$(_c, \"WorkoutHistoryPage\");","map":{"version":3,"names":["useState","useEffect","UserSidebar","workoutServices","maleHumanBodyImage","maleHumanBodyMap","jsxDEV","_jsxDEV","Fragment","_Fragment","WorkoutHistoryPage","_ref","_s2","_s","$RefreshSig$","setLoggedIn","openDropdown","setOpenDropdown","prevWorkouts","setPrevWorkouts","selectedWorkout","setSelectedWorkout","handleDropdownClick","get","then","userWorkouts","console","log","handleSelectedWorkoutChange","event","target","value","at","toString","Dropdown","_ref2","open","trigger","children","name","id","onChange","map","workout","index","createdAt","fileName","_jsxFileName","lineNumber","columnNumber","HumanBody","imageMap","setImageMap","fetch","response","text","mapData","mapJson","convertMapFileToJson","catch","error","shapeRegex","coordsRegex","hrefRegex","shapes","match","imageMapData","shape","coordsMatch","hrefMatch","coords","split","href","Number","src","alt","useMap","style","display","className","_c","$RefreshReg$"],"sources":["/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/WorkoutHistoryPage.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport UserSidebar from '../components/UserSidebar'\nimport workoutServices from '../services/workouts'\nimport './WorkoutHistoryPage.css'\n\nimport maleHumanBodyImage from '../maleHumanBodyImage.png'\nimport maleHumanBodyMap from '../maleHumanBody.map'\n\nconst WorkoutHistoryPage = ({setLoggedIn}) => {\n    \n    const [openDropdown, setOpenDropdown] = useState(false)\n    const [prevWorkouts, setPrevWorkouts] = useState([])\n    const [selectedWorkout, setSelectedWorkout] = useState(null)\n    \n    const handleDropdownClick = () => {\n\tsetOpenDropdown(!openDropdown)\n\tworkoutServices.get().then(userWorkouts => {\t\t\n\t    console.log(userWorkouts)\n\t    setPrevWorkouts(userWorkouts)\n\t})\n\tconsole.log(prevWorkouts)\t    \n    }\n\n    const handleSelectedWorkoutChange = (event) => {\n\tconsole.log(`event ${event.target.value}`)\n\tsetSelectedWorkout(prevWorkouts.at(event.target.value.toString()))\n    }\n\n    const Dropdown = ({open, trigger}) => {\n\treturn (\n\t        <>\n\t\t    {trigger}\n\t            {open ? (\n\t\t    <ul>\n\t\t\t    <select name=\"previous-workouts\" id=\"previous-workouts\" value={selectedWorkout} onChange={handleSelectedWorkoutChange}>\n\t\t\t    {prevWorkouts.map((workout, index) =>\n\t\t\t\t    <option value={index}> {workout.createdAt} </option>)}\n\t\t        </select>\n\t\t    </ul>\n\t            ) : null}\n\t        </>\n\t    )\n    }\n\n    const HumanBody = () => {\n\tconst [imageMap, setImageMap] = useState([])\n\n\t useEffect(() => {\n\t     fetch(maleHumanBodyMap)\n\t\t .then((response) => response.text())\n\t\t .then((mapData) => {\n\t\t     const mapJson = convertMapFileToJson(mapData);\n\t\t     setImageMap(mapJson);\n\t\t })\n\t\t .catch((error) => {\n\t\t     console.error('Error loading map file:', error);\n\t\t });\n\t }, []);\n\n\t const convertMapFileToJson = (mapData) => {\n\t     const shapeRegex = /<area[^>]+>/g;\n\t     const coordsRegex = /coords=\"([^\"]+)\"/;\n\t     const hrefRegex = /href=\"([^\"]+)\"/;\n\n\t     const shapes = mapData.match(shapeRegex);\n\t     const imageMapData = shapes.map((shape) => {\n\t\t const coordsMatch = shape.match(coordsRegex);\n\t\t const hrefMatch = shape.match(hrefRegex);\n\n\t\t const coords = coordsMatch ? coordsMatch[1].split(',') : [];\n\t\t const href = hrefMatch ? hrefMatch[1] : '';\n\n\t\t return {\n\t\t     shape: 'poly', // Specify the shape type here (rect, circle, poly, etc.)\n\t\t     coords: coords.map(Number),\n\t\t     href,\n\t\t };\n\t     });\n\n\t     return imageMapData;\n\t };\n\n\t\n\treturn (\n\t\t<>\n\t\t<img src={maleHumanBodyImage} alt=\"Male Human Body\" useMap=\"#body\" />\n\t\t<map name=\"body\" id=\"body\">\n\t\t<area style={{ display: 'inline-block' }} shape=\"rect\" coords=\"100,100,1000,1000\" className=\"muscle-group\" />\n\t\t{/*imageMap.map((area, index) => (\n\t\t\t<area key={index} shape={area.shape}\n\t\t    coords={area.coords.join(',')} href={area.href} className=\"muscle-group\"/>\n\t\t))*/}\n\t        </map>\n\t\t</>\n\t)\n    }\n    \n    return (\n\t    <div>\n\t    <HumanBody />\n\t    \t{/*<div className=\"wh-main\">\n\t    <HumanBody />\n\t    <UserSidebar setLoggedIn={setLoggedIn}/>\n\t    <div className=\"prev-workouts\">\n\t    <Dropdown\n\t        open={openDropdown}\n\t        trigger={<button onClick={handleDropdownClick}> Previous Workouts </button>}\n\t    />\n\t    {selectedWorkout === null ? <label> Choose a workout  </label> :\n\t     <ul>\n\t     <li className=\"labels\">\n\t     <span className=\"label\"> Exercise </span>\n\t     <span className=\"label\"> Sets </span>\n\t     <span className=\"label\"> Reps </span>\n\t     </li>\n\t     {selectedWorkout.clusters.map(cluster =>\n\t\t     <li className=\"labels\">\n\t\t     <span className=\"label\"> {cluster.exercise} </span>\n\t\t     <span className=\"label\"> {cluster.sets} </span>\n\t\t     <span className=\"label\"> {cluster.reps} </span>\n\t\t     </li>\n\t     )\n\t     }\n\t     </ul>\n\t     }\n\t    </div>\n\t    </div>\n\t\t */}\n\t</div>\n\t   )\n}\n\nexport default WorkoutHistoryPage\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}