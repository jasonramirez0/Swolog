{"ast":null,"code":"import _objectSpread from \"/Users/jasonramirez/Desktop/fitness-app/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _assertThisInitialized from \"/Users/jasonramirez/Desktop/fitness-app/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/jasonramirez/Desktop/fitness-app/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/jasonramirez/Desktop/fitness-app/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/jasonramirez/Desktop/fitness-app/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/jasonramirez/Desktop/fitness-app/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _slicedToArray from \"/Users/jasonramirez/Desktop/fitness-app/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"/Users/jasonramirez/Desktop/fitness-app/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _createForOfIteratorHelper from \"/Users/jasonramirez/Desktop/fitness-app/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/Users/jasonramirez/Desktop/fitness-app/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/jasonramirez/Desktop/fitness-app/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/jasonramirez/Desktop/fitness-app/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/*!\n * Chart.js v3.7.0\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as _color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as getRelativePosition$1, z as _isPointInArea, A as _rlookupByKey, B as getAngleFromPoint, C as toPadding, D as each, E as _getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as _isDomSupported, L as log10, M as _factorize, N as finiteOrDefault, O as callback, Q as _addGrace, R as toDegrees, S as _measureText, U as _int16Range, V as _alignPixel, W as clipArea, X as renderText, Y as unclipArea, Z as toFont, $ as _toLeftRightCenter, a0 as _alignStartEnd, a1 as overrides, a2 as merge, a3 as _capitalize, a4 as descriptors, a5 as isFunction, a6 as _attachContext, a7 as _createResolver, a8 as _descriptors, a9 as mergeIf, aa as uid, ab as debounce, ac as retinaScale, ad as clearCanvas, ae as setsEqual, af as _elementsEqual, ag as _isClickEvent, ah as _isBetween, ai as _readValueToProps, aj as _updateBezierControlPoints, ak as _computeSegments, al as _boundSegments, am as _steppedInterpolation, an as _bezierInterpolation, ao as _pointInLine, ap as _steppedLineTo, aq as _bezierCurveTo, ar as drawPoint, as as addRoundedRectPath, at as toTRBL, au as toTRBLCorners, av as _boundSegment, aw as _normalizeAngle, ax as getRtlAdapter, ay as overrideTextDirection, az as _textX, aA as restoreTextDirection, aB as noop, aC as distanceBetweenPoints, aD as _setMinAndMaxByKey, aE as niceNum, aF as almostWhole, aG as almostEquals, aH as _decimalPlaces, aI as _longestText, aJ as _filterBetween, aK as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\nvar Animator = /*#__PURE__*/function () {\n  function Animator() {\n    _classCallCheck(this, Animator);\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _createClass(Animator, [{\n    key: \"_notify\",\n    value: function _notify(chart, anims, date, type) {\n      var callbacks = anims.listeners[type];\n      var numSteps = anims.duration;\n      callbacks.forEach(function (fn) {\n        return fn({\n          chart: chart,\n          initial: anims.initial,\n          numSteps: numSteps,\n          currentStep: Math.min(date - anims.start, numSteps)\n        });\n      });\n    }\n  }, {\n    key: \"_refresh\",\n    value: function _refresh() {\n      var _this = this;\n      if (this._request) {\n        return;\n      }\n      this._running = true;\n      this._request = requestAnimFrame.call(window, function () {\n        _this._update();\n        _this._request = null;\n        if (_this._running) {\n          _this._refresh();\n        }\n      });\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      var _this2 = this;\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n      var remaining = 0;\n      this._charts.forEach(function (anims, chart) {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n        var items = anims.items;\n        var i = items.length - 1;\n        var draw = false;\n        var item;\n        for (; i >= 0; --i) {\n          item = items[i];\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n        if (draw) {\n          chart.draw();\n          _this2._notify(chart, anims, date, 'progress');\n        }\n        if (!items.length) {\n          anims.running = false;\n          _this2._notify(chart, anims, date, 'complete');\n          anims.initial = false;\n        }\n        remaining += items.length;\n      });\n      this._lastDate = date;\n      if (remaining === 0) {\n        this._running = false;\n      }\n    }\n  }, {\n    key: \"_getAnims\",\n    value: function _getAnims(chart) {\n      var charts = this._charts;\n      var anims = charts.get(chart);\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n      return anims;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n  }, {\n    key: \"add\",\n    value: function add(chart, items) {\n      var _this$_getAnims$items;\n      if (!items || !items.length) {\n        return;\n      }\n      (_this$_getAnims$items = this._getAnims(chart).items).push.apply(_this$_getAnims$items, _toConsumableArray(items));\n    }\n  }, {\n    key: \"has\",\n    value: function has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n  }, {\n    key: \"start\",\n    value: function start(chart) {\n      var anims = this._charts.get(chart);\n      if (!anims) {\n        return;\n      }\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce(function (acc, cur) {\n        return Math.max(acc, cur._duration);\n      }, 0);\n      this._refresh();\n    }\n  }, {\n    key: \"running\",\n    value: function running(chart) {\n      if (!this._running) {\n        return false;\n      }\n      var anims = this._charts.get(chart);\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(chart) {\n      var anims = this._charts.get(chart);\n      if (!anims || !anims.items.length) {\n        return;\n      }\n      var items = anims.items;\n      var i = items.length - 1;\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n      anims.items = [];\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(chart) {\n      return this._charts.delete(chart);\n    }\n  }]);\n  return Animator;\n}();\nvar animator = new Animator();\nvar transparent = 'transparent';\nvar interpolators = {\n  boolean: function boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color: function color(from, to, factor) {\n    var c0 = _color(from || transparent);\n    var c1 = c0.valid && _color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number: function number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nvar Animation = /*#__PURE__*/function () {\n  function Animation(cfg, target, prop, to) {\n    _classCallCheck(this, Animation);\n    var currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    var from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  _createClass(Animation, [{\n    key: \"active\",\n    value: function active() {\n      return this._active;\n    }\n  }, {\n    key: \"update\",\n    value: function update(cfg, to, date) {\n      if (this._active) {\n        this._notify(false);\n        var currentValue = this._target[this._prop];\n        var elapsed = date - this._start;\n        var remain = this._duration - elapsed;\n        this._start = date;\n        this._duration = Math.floor(Math.max(remain, cfg.duration));\n        this._total += elapsed;\n        this._loop = !!cfg.loop;\n        this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n        this._from = resolve([cfg.from, currentValue, to]);\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      if (this._active) {\n        this.tick(Date.now());\n        this._active = false;\n        this._notify(false);\n      }\n    }\n  }, {\n    key: \"tick\",\n    value: function tick(date) {\n      var elapsed = date - this._start;\n      var duration = this._duration;\n      var prop = this._prop;\n      var from = this._from;\n      var loop = this._loop;\n      var to = this._to;\n      var factor;\n      this._active = from !== to && (loop || elapsed < duration);\n      if (!this._active) {\n        this._target[prop] = to;\n        this._notify(true);\n        return;\n      }\n      if (elapsed < 0) {\n        this._target[prop] = from;\n        return;\n      }\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = this._easing(Math.min(1, Math.max(0, factor)));\n      this._target[prop] = this._fn(from, to, factor);\n    }\n  }, {\n    key: \"wait\",\n    value: function wait() {\n      var promises = this._promises || (this._promises = []);\n      return new Promise(function (res, rej) {\n        promises.push({\n          res: res,\n          rej: rej\n        });\n      });\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(resolved) {\n      var method = resolved ? 'res' : 'rej';\n      var promises = this._promises || [];\n      for (var i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n  }]);\n  return Animation;\n}();\nvar numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nvar colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nvar animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: function _scriptable(name) {\n    return name !== 'onProgress' && name !== 'onComplete' && name !== 'fn';\n  }\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: function fn(v) {\n          return v | 0;\n        }\n      }\n    }\n  }\n});\nvar Animations = /*#__PURE__*/function () {\n  function Animations(chart, config) {\n    _classCallCheck(this, Animations);\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  _createClass(Animations, [{\n    key: \"configure\",\n    value: function configure(config) {\n      if (!isObject(config)) {\n        return;\n      }\n      var animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(function (key) {\n        var cfg = config[key];\n        if (!isObject(cfg)) {\n          return;\n        }\n        var resolved = {};\n        for (var _i = 0, _animationOptions = animationOptions; _i < _animationOptions.length; _i++) {\n          var option = _animationOptions[_i];\n          resolved[option] = cfg[option];\n        }\n        (isArray(cfg.properties) && cfg.properties || [key]).forEach(function (prop) {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_animateOptions\",\n    value: function _animateOptions(target, values) {\n      var newOptions = values.options;\n      var options = resolveTargetOptions(target, newOptions);\n      if (!options) {\n        return [];\n      }\n      var animations = this._createAnimations(options, newOptions);\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(function () {\n          target.options = newOptions;\n        }, function () {});\n      }\n      return animations;\n    }\n  }, {\n    key: \"_createAnimations\",\n    value: function _createAnimations(target, values) {\n      var animatedProps = this._properties;\n      var animations = [];\n      var running = target.$animations || (target.$animations = {});\n      var props = Object.keys(values);\n      var date = Date.now();\n      var i;\n      for (i = props.length - 1; i >= 0; --i) {\n        var prop = props[i];\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n        if (prop === 'options') {\n          animations.push.apply(animations, _toConsumableArray(this._animateOptions(target, values)));\n          continue;\n        }\n        var value = values[prop];\n        var animation = running[prop];\n        var cfg = animatedProps.get(prop);\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n      return animations;\n    }\n  }, {\n    key: \"update\",\n    value: function update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n      var animations = this._createAnimations(target, values);\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n  }]);\n  return Animations;\n}();\nfunction awaitAll(animations, properties) {\n  var running = [];\n  var keys = Object.keys(properties);\n  for (var i = 0; i < keys.length; i++) {\n    var anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  var options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n  return options;\n}\nfunction scaleClip(scale, allowedOverflow) {\n  var opts = scale && scale.options || {};\n  var reverse = opts.reverse;\n  var min = opts.min === undefined ? allowedOverflow : 0;\n  var max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  var x = scaleClip(xScale, allowedOverflow);\n  var y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  var t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  var keys = [];\n  var metasets = chart._getSortedDatasetMetas(filterVisible);\n  var i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction _applyStack(stack, value, dsIndex) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var keys = stack.keys;\n  var singleMode = options.mode === 'single';\n  var i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  var keys = Object.keys(data);\n  var adata = new Array(keys.length);\n  var i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  var stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return \"\".concat(indexScale.id, \".\").concat(valueScale.id, \".\").concat(meta.stack || meta.type);\n}\nfunction getUserBounds(scale) {\n  var _scale$getUserBounds = scale.getUserBounds(),\n    min = _scale$getUserBounds.min,\n    max = _scale$getUserBounds.max,\n    minDefined = _scale$getUserBounds.minDefined,\n    maxDefined = _scale$getUserBounds.maxDefined;\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  var subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  var _iterator = _createForOfIteratorHelper(vScale.getMatchingVisibleMetas(type).reverse()),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var meta = _step.value;\n      var value = stack[meta.index];\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  var chart = controller.chart,\n    meta = controller._cachedMeta;\n  var stacks = chart._stacks || (chart._stacks = {});\n  var iScale = meta.iScale,\n    vScale = meta.vScale,\n    datasetIndex = meta.index;\n  var iAxis = iScale.axis;\n  var vAxis = vScale.axis;\n  var key = getStackKey(iScale, vScale, meta);\n  var ilen = parsed.length;\n  var stack;\n  for (var i = 0; i < ilen; ++i) {\n    var item = parsed[i];\n    var index = item[iAxis],\n      value = item[vAxis];\n    var itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  var scales = chart.scales;\n  return Object.keys(scales).filter(function (key) {\n    return scales[key].axis === axis;\n  }).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index: index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element: element,\n    index: index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  var datasetIndex = meta.controller.index;\n  var axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  var _iterator2 = _createForOfIteratorHelper(items),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var parsed = _step2.value;\n      var stacks = parsed._stacks;\n      if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n        return;\n      }\n      delete stacks[axis][datasetIndex];\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n}\nvar isDirectUpdateMode = function isDirectUpdateMode(mode) {\n  return mode === 'reset' || mode === 'none';\n};\nvar cloneIfNotShared = function cloneIfNotShared(cached, shared) {\n  return shared ? cached : Object.assign({}, cached);\n};\nvar createStack = function createStack(canStack, meta, chart) {\n  return canStack && !meta.hidden && meta._stacked && {\n    keys: getSortedDatasetIndices(chart, true),\n    values: null\n  };\n};\nvar DatasetController = /*#__PURE__*/function () {\n  function DatasetController(chart, datasetIndex) {\n    _classCallCheck(this, DatasetController);\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  _createClass(DatasetController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var meta = this._cachedMeta;\n      this.configure();\n      this.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      this.addElements();\n    }\n  }, {\n    key: \"updateIndex\",\n    value: function updateIndex(datasetIndex) {\n      if (this.index !== datasetIndex) {\n        clearStacks(this._cachedMeta);\n      }\n      this.index = datasetIndex;\n    }\n  }, {\n    key: \"linkScales\",\n    value: function linkScales() {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n      var chooseId = function chooseId(axis, x, y, r) {\n        return axis === 'x' ? x : axis === 'r' ? r : y;\n      };\n      var xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      var yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      var rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      var indexAxis = meta.indexAxis;\n      var iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      var vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = this.getScaleForId(xid);\n      meta.yScale = this.getScaleForId(yid);\n      meta.rScale = this.getScaleForId(rid);\n      meta.iScale = this.getScaleForId(iid);\n      meta.vScale = this.getScaleForId(vid);\n    }\n  }, {\n    key: \"getDataset\",\n    value: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n  }, {\n    key: \"getScaleForId\",\n    value: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n  }, {\n    key: \"_getOtherScale\",\n    value: function _getOtherScale(scale) {\n      var meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._update('reset');\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      var meta = this._cachedMeta;\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n  }, {\n    key: \"_dataCheck\",\n    value: function _dataCheck() {\n      var dataset = this.getDataset();\n      var data = dataset.data || (dataset.data = []);\n      var _data = this._data;\n      if (isObject(data)) {\n        this._data = convertObjectDataToArray(data);\n      } else if (_data !== data) {\n        if (_data) {\n          unlistenArrayEvents(_data, this);\n          var meta = this._cachedMeta;\n          clearStacks(meta);\n          meta._parsed = [];\n        }\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, this);\n        }\n        this._syncList = [];\n        this._data = data;\n      }\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var meta = this._cachedMeta;\n      this._dataCheck();\n      if (this.datasetElementType) {\n        meta.dataset = new this.datasetElementType();\n      }\n    }\n  }, {\n    key: \"buildOrUpdateElements\",\n    value: function buildOrUpdateElements(resetNewElements) {\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n      var stackChanged = false;\n      this._dataCheck();\n      var oldStacked = meta._stacked;\n      meta._stacked = isStacked(meta.vScale, meta);\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n      this._resyncElements(resetNewElements);\n      if (stackChanged || oldStacked !== meta._stacked) {\n        updateStacks(this, meta._parsed);\n      }\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var config = this.chart.config;\n      var scopeKeys = config.datasetScopeKeys(this._type);\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n      this.options = config.createResolver(scopes, this.getContext());\n      this._parsing = this.options.parsing;\n      this._cachedDataOpts = {};\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var meta = this._cachedMeta,\n        data = this._data;\n      var iScale = meta.iScale,\n        _stacked = meta._stacked;\n      var iAxis = iScale.axis;\n      var sorted = start === 0 && count === data.length ? true : meta._sorted;\n      var prev = start > 0 && meta._parsed[start - 1];\n      var i, cur, parsed;\n      if (this._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if (isArray(data[start])) {\n          parsed = this.parseArrayData(meta, data, start, count);\n        } else if (isObject(data[start])) {\n          parsed = this.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = this.parsePrimitiveData(meta, data, start, count);\n        }\n        var isNotInOrderComparedToPrev = function isNotInOrderComparedToPrev() {\n          return cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n        };\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n            prev = cur;\n          }\n        }\n        meta._sorted = sorted;\n      }\n      if (_stacked) {\n        updateStacks(this, parsed);\n      }\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var labels = iScale.getLabels();\n      var singleScale = iScale === vScale;\n      var parsed = new Array(count);\n      var i, ilen, index;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        var _parsed$i;\n        index = i + start;\n        parsed[i] = (_parsed$i = {}, _defineProperty(_parsed$i, iAxis, singleScale || iScale.parse(labels[index], index)), _defineProperty(_parsed$i, vAxis, vScale.parse(data[index], index)), _parsed$i);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var _this$_parsing = this._parsing,\n        _this$_parsing$xAxisK = _this$_parsing.xAxisKey,\n        xAxisKey = _this$_parsing$xAxisK === void 0 ? 'x' : _this$_parsing$xAxisK,\n        _this$_parsing$yAxisK = _this$_parsing.yAxisKey,\n        yAxisKey = _this$_parsing$yAxisK === void 0 ? 'y' : _this$_parsing$yAxisK;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n        };\n      }\n      return parsed;\n    }\n  }, {\n    key: \"getParsed\",\n    value: function getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n  }, {\n    key: \"getDataElement\",\n    value: function getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n  }, {\n    key: \"applyStack\",\n    value: function applyStack(scale, parsed, mode) {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var value = parsed[scale.axis];\n      var stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]\n      };\n      return _applyStack(stack, value, meta.index, {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      var parsedValue = parsed[scale.axis];\n      var value = parsedValue === null ? NaN : parsedValue;\n      var values = stack && parsed._stacks[scale.axis];\n      if (stack && values) {\n        stack.values = values;\n        value = _applyStack(stack, parsedValue, this._cachedMeta.index);\n      }\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(scale, canStack) {\n      var meta = this._cachedMeta;\n      var _parsed = meta._parsed;\n      var sorted = meta._sorted && scale === meta.iScale;\n      var ilen = _parsed.length;\n      var otherScale = this._getOtherScale(scale);\n      var stack = createStack(canStack, meta, this.chart);\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      var _getUserBounds = getUserBounds(otherScale),\n        otherMin = _getUserBounds.min,\n        otherMax = _getUserBounds.max;\n      var i, parsed;\n      function _skip() {\n        parsed = _parsed[i];\n        var otherValue = parsed[otherScale.axis];\n        return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n      }\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        if (sorted) {\n          break;\n        }\n      }\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n          this.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n      return range;\n    }\n  }, {\n    key: \"getAllParsedValues\",\n    value: function getAllParsedValues(scale) {\n      var parsed = this._cachedMeta._parsed;\n      var values = [];\n      var i, ilen, value;\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n        if (isNumberFinite(value)) {\n          values.push(value);\n        }\n      }\n      return values;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return false;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(mode) {\n      var meta = this._cachedMeta;\n      this.update(mode || 'default');\n      meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {}\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this._ctx;\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var elements = meta.data || [];\n      var area = chart.chartArea;\n      var active = [];\n      var start = this._drawStart || 0;\n      var count = this._drawCount || elements.length - start;\n      var drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n      var i;\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n      for (i = start; i < start + count; ++i) {\n        var element = elements[i];\n        if (element.hidden) {\n          continue;\n        }\n        if (element.active && drawActiveElementsOnTop) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(index, active) {\n      var mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index, active, mode) {\n      var dataset = this.getDataset();\n      var context;\n      if (index >= 0 && index < this._cachedMeta.data.length) {\n        var element = this._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n        context.parsed = this.getParsed(index);\n        context.raw = dataset.data[index];\n        context.index = context.dataIndex = index;\n      } else {\n        context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n        context.dataset = dataset;\n        context.index = context.datasetIndex = this.index;\n      }\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n  }, {\n    key: \"resolveDatasetElementOptions\",\n    value: function resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n  }, {\n    key: \"_resolveElementOptions\",\n    value: function _resolveElementOptions(elementType) {\n      var _this3 = this;\n      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n      var index = arguments.length > 2 ? arguments[2] : undefined;\n      var active = mode === 'active';\n      var cache = this._cachedDataOpts;\n      var cacheKey = elementType + '-' + mode;\n      var cached = cache[cacheKey];\n      var sharing = this.enableOptionSharing && defined(index);\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n      var config = this.chart.config;\n      var scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n      var prefixes = active ? [\"\".concat(elementType, \"Hover\"), 'hover', elementType, ''] : [elementType, ''];\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      var names = Object.keys(defaults.elements[elementType]);\n      var context = function context() {\n        return _this3.getContext(index, active);\n      };\n      var values = config.resolveNamedOptions(scopes, names, context, prefixes);\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n      return values;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations(index, transition, active) {\n      var chart = this.chart;\n      var cache = this._cachedDataOpts;\n      var cacheKey = \"animation-\".concat(transition);\n      var cached = cache[cacheKey];\n      if (cached) {\n        return cached;\n      }\n      var options;\n      if (chart.options.animation !== false) {\n        var config = this.chart.config;\n        var scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n        var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, this.getContext(index, active, transition));\n      }\n      var animations = new Animations(chart, options && options.animations);\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n      return animations;\n    }\n  }, {\n    key: \"getSharedOptions\",\n    value: function getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n  }, {\n    key: \"includeOptions\",\n    value: function includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n  }, {\n    key: \"updateElement\",\n    value: function updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n  }, {\n    key: \"updateSharedOptions\",\n    value: function updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n  }, {\n    key: \"_setStyle\",\n    value: function _setStyle(element, index, mode, active) {\n      element.active = active;\n      var options = this.getStyle(index, active);\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n  }, {\n    key: \"removeHoverStyle\",\n    value: function removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n  }, {\n    key: \"setHoverStyle\",\n    value: function setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n  }, {\n    key: \"_removeDatasetHoverStyle\",\n    value: function _removeDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n  }, {\n    key: \"_setDatasetHoverStyle\",\n    value: function _setDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n  }, {\n    key: \"_resyncElements\",\n    value: function _resyncElements(resetNewElements) {\n      var data = this._data;\n      var elements = this._cachedMeta.data;\n      var _iterator3 = _createForOfIteratorHelper(this._syncList),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _step3$value = _slicedToArray(_step3.value, 3),\n            method = _step3$value[0],\n            arg1 = _step3$value[1],\n            arg2 = _step3$value[2];\n          this[method](arg1, arg2);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      this._syncList = [];\n      var numMeta = elements.length;\n      var numData = data.length;\n      var count = Math.min(numData, numMeta);\n      if (count) {\n        this.parse(0, count);\n      }\n      if (numData > numMeta) {\n        this._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        this._removeElements(numData, numMeta - numData);\n      }\n    }\n  }, {\n    key: \"_insertElements\",\n    value: function _insertElements(start, count) {\n      var resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var meta = this._cachedMeta;\n      var data = meta.data;\n      var end = start + count;\n      var i;\n      var move = function move(arr) {\n        arr.length += count;\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n      move(data);\n      for (i = start; i < end; ++i) {\n        data[i] = new this.dataElementType();\n      }\n      if (this._parsing) {\n        move(meta._parsed);\n      }\n      this.parse(start, count);\n      if (resetNewElements) {\n        this.updateElements(data, start, count, 'reset');\n      }\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(element, start, count, mode) {}\n  }, {\n    key: \"_removeElements\",\n    value: function _removeElements(start, count) {\n      var meta = this._cachedMeta;\n      if (this._parsing) {\n        var removed = meta._parsed.splice(start, count);\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n      meta.data.splice(start, count);\n    }\n  }, {\n    key: \"_sync\",\n    value: function _sync(args) {\n      if (this._parsing) {\n        this._syncList.push(args);\n      } else {\n        var _args2 = _slicedToArray(args, 3),\n          method = _args2[0],\n          arg1 = _args2[1],\n          arg2 = _args2[2];\n        this[method](arg1, arg2);\n      }\n      this.chart._dataChanges.push([this.index].concat(_toConsumableArray(args)));\n    }\n  }, {\n    key: \"_onDataPush\",\n    value: function _onDataPush() {\n      var count = arguments.length;\n      this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n    }\n  }, {\n    key: \"_onDataPop\",\n    value: function _onDataPop() {\n      this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n    }\n  }, {\n    key: \"_onDataShift\",\n    value: function _onDataShift() {\n      this._sync(['_removeElements', 0, 1]);\n    }\n  }, {\n    key: \"_onDataSplice\",\n    value: function _onDataSplice(start, count) {\n      if (count) {\n        this._sync(['_removeElements', start, count]);\n      }\n      var newCount = arguments.length - 2;\n      if (newCount) {\n        this._sync(['_insertElements', start, newCount]);\n      }\n    }\n  }, {\n    key: \"_onDataUnshift\",\n    value: function _onDataUnshift() {\n      this._sync(['_insertElements', 0, arguments.length]);\n    }\n  }]);\n  return DatasetController;\n}();\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    var visibleMetas = scale.getMatchingVisibleMetas(type);\n    var values = [];\n    for (var i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort(function (a, b) {\n      return a - b;\n    }));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  var scale = meta.iScale;\n  var values = getAllScaleValues(scale, meta.type);\n  var min = scale._length;\n  var i, ilen, curr, prev;\n  var updateMinAndPrev = function updateMinAndPrev() {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  var thickness = options.barThickness;\n  var size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio: ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  var start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  var size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  var startValue = vScale.parse(entry[0], i);\n  var endValue = vScale.parse(entry[1], i);\n  var min = Math.min(startValue, endValue);\n  var max = Math.max(startValue, endValue);\n  var barStart = min;\n  var barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart: barStart,\n    barEnd: barEnd,\n    start: startValue,\n    end: endValue,\n    min: min,\n    max: max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  var iScale = meta.iScale;\n  var vScale = meta.vScale;\n  var labels = iScale.getLabels();\n  var singleScale = iScale === vScale;\n  var parsed = [];\n  var i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  var reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {\n    start: start,\n    end: end,\n    reverse: reverse,\n    top: top,\n    bottom: bottom\n  };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  var edge = options.borderSkipped;\n  var res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  var _borderProps = borderProps(properties),\n    start = _borderProps.start,\n    end = _borderProps.end,\n    reverse = _borderProps.reverse,\n    top = _borderProps.top,\n    bottom = _borderProps.bottom;\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, _ref, ratio) {\n  var inflateAmount = _ref.inflateAmount;\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nvar BarController = /*#__PURE__*/function (_DatasetController) {\n  _inherits(BarController, _DatasetController);\n  var _super = _createSuper(BarController);\n  function BarController() {\n    _classCallCheck(this, BarController);\n    return _super.apply(this, arguments);\n  }\n  _createClass(BarController, [{\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var _this$_parsing2 = this._parsing,\n        _this$_parsing2$xAxis = _this$_parsing2.xAxisKey,\n        xAxisKey = _this$_parsing2$xAxis === void 0 ? 'x' : _this$_parsing2$xAxis,\n        _this$_parsing2$yAxis = _this$_parsing2.yAxisKey,\n        yAxisKey = _this$_parsing2$yAxis === void 0 ? 'y' : _this$_parsing2$yAxis;\n      var iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var parsed = [];\n      var i, ilen, item, obj;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n        parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n      }\n      return parsed;\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      _get(_getPrototypeOf(BarController.prototype), \"updateRangeFromParsed\", this).call(this, range, scale, parsed, stack);\n      var custom = parsed._custom;\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value: value\n      };\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      _get(_getPrototypeOf(BarController.prototype), \"initialize\", this).call(this);\n      var meta = this._cachedMeta;\n      meta.stack = this.getDataset().stack;\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(bars, start, count, mode) {\n      var reset = mode === 'reset';\n      var index = this.index,\n        vScale = this._cachedMeta.vScale;\n      var base = vScale.getBasePixel();\n      var horizontal = vScale.isHorizontal();\n      var ruler = this._getRuler();\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions);\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n      for (var i = start; i < start + count; i++) {\n        var parsed = this.getParsed(i);\n        var vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n          base: base,\n          head: base\n        } : this._calculateBarValuePixels(i);\n        var ipixels = this._calculateBarIndexPixels(i, ruler);\n        var stack = (parsed._stacks || {})[vScale.axis];\n        var properties = {\n          horizontal: horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n          width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n        }\n        var options = properties.options || bars[i].options;\n        setBorderSkipped(properties, options, stack, index);\n        setInflateAmount(properties, options, ruler.ratio);\n        this.updateElement(bars[i], i, properties, mode);\n      }\n    }\n  }, {\n    key: \"_getStacks\",\n    value: function _getStacks(last, dataIndex) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var metasets = iScale.getMatchingVisibleMetas(this._type);\n      var stacked = iScale.options.stacked;\n      var ilen = metasets.length;\n      var stacks = [];\n      var i, item;\n      for (i = 0; i < ilen; ++i) {\n        item = metasets[i];\n        if (!item.controller.options.grouped) {\n          continue;\n        }\n        if (typeof dataIndex !== 'undefined') {\n          var val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n          if (isNullOrUndef(val) || isNaN(val)) {\n            continue;\n          }\n        }\n        if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n          stacks.push(item.stack);\n        }\n        if (item.index === last) {\n          break;\n        }\n      }\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n      return stacks;\n    }\n  }, {\n    key: \"_getStackCount\",\n    value: function _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n  }, {\n    key: \"_getStackIndex\",\n    value: function _getStackIndex(datasetIndex, name, dataIndex) {\n      var stacks = this._getStacks(datasetIndex, dataIndex);\n      var index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n  }, {\n    key: \"_getRuler\",\n    value: function _getRuler() {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var pixels = [];\n      var i, ilen;\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n      }\n      var barThickness = opts.barThickness;\n      var min = barThickness || computeMinSampleSize(meta);\n      return {\n        min: min,\n        pixels: pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: this._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n  }, {\n    key: \"_calculateBarValuePixels\",\n    value: function _calculateBarValuePixels(index) {\n      var _this$_cachedMeta = this._cachedMeta,\n        vScale = _this$_cachedMeta.vScale,\n        _stacked = _this$_cachedMeta._stacked,\n        _this$options = this.options,\n        baseValue = _this$options.base,\n        minBarLength = _this$options.minBarLength;\n      var actualBase = baseValue || 0;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var floating = isFloatBar(custom);\n      var value = parsed[vScale.axis];\n      var start = 0;\n      var length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n      var head, size;\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n        if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n          start = 0;\n        }\n        start += value;\n      }\n      var startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n      var base = vScale.getPixelForValue(startValue);\n      if (this.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n      size = head - base;\n      if (Math.abs(size) < minBarLength) {\n        size = barSign(size, vScale, actualBase) * minBarLength;\n        if (value === actualBase) {\n          base -= size / 2;\n        }\n        head = base + size;\n      }\n      if (base === vScale.getPixelForValue(actualBase)) {\n        var halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n        base += halfGrid;\n        size -= halfGrid;\n      }\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    }\n  }, {\n    key: \"_calculateBarIndexPixels\",\n    value: function _calculateBarIndexPixels(index, ruler) {\n      var scale = ruler.scale;\n      var options = this.options;\n      var skipNull = options.skipNull;\n      var maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n      var center, size;\n      if (ruler.grouped) {\n        var stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n        var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n        var stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      var vScale = meta.vScale;\n      var rects = meta.data;\n      var ilen = rects.length;\n      var i = 0;\n      for (; i < ilen; ++i) {\n        if (this.getParsed(i)[vScale.axis] !== null) {\n          rects[i].draw(this._ctx);\n        }\n      }\n    }\n  }]);\n  return BarController;\n}(DatasetController);\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\nvar BubbleController = /*#__PURE__*/function (_DatasetController2) {\n  _inherits(BubbleController, _DatasetController2);\n  var _super2 = _createSuper(BubbleController);\n  function BubbleController() {\n    _classCallCheck(this, BubbleController);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(BubbleController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      _get(_getPrototypeOf(BubbleController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parsePrimitiveData\", this).call(this, meta, data, start, count);\n      for (var i = 0; i < parsed.length; i++) {\n        parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parseArrayData\", this).call(this, meta, data, start, count);\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parseObjectData\", this).call(this, meta, data, start, count);\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var data = this._cachedMeta.data;\n      var max = 0;\n      for (var i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = this.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      var r = parsed._custom;\n      return {\n        label: meta.label,\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var points = this._cachedMeta.data;\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta2 = this._cachedMeta,\n        iScale = _this$_cachedMeta2.iScale,\n        vScale = _this$_cachedMeta2.vScale;\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var parsed = !reset && this.getParsed(i);\n        var properties = {};\n        var iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n        var vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel);\n        if (includeOptions) {\n          properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n        this.updateElement(point, i, properties, mode);\n      }\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      var parsed = this.getParsed(index);\n      var values = _get(_getPrototypeOf(BubbleController.prototype), \"resolveDataElementOptions\", this).call(this, index, mode);\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n      var radius = values.radius;\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n      values.radius += valueOrDefault(parsed && parsed._custom, radius);\n      return values;\n    }\n  }]);\n  return BubbleController;\n}(DatasetController);\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        }\n      }\n    }\n  }\n};\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  var ratioX = 1;\n  var ratioY = 1;\n  var offsetX = 0;\n  var offsetY = 0;\n  if (circumference < TAU) {\n    var startAngle = rotation;\n    var endAngle = startAngle + circumference;\n    var startX = Math.cos(startAngle);\n    var startY = Math.sin(startAngle);\n    var endX = Math.cos(endAngle);\n    var endY = Math.sin(endAngle);\n    var calcMax = function calcMax(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    };\n    var calcMin = function calcMin(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    };\n    var maxX = calcMax(0, startX, endX);\n    var maxY = calcMax(HALF_PI, startY, endY);\n    var minX = calcMin(PI, startX, endX);\n    var minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {\n    ratioX: ratioX,\n    ratioY: ratioY,\n    offsetX: offsetX,\n    offsetY: offsetY\n  };\n}\nvar DoughnutController = /*#__PURE__*/function (_DatasetController3) {\n  _inherits(DoughnutController, _DatasetController3);\n  var _super3 = _createSuper(DoughnutController);\n  function DoughnutController(chart, datasetIndex) {\n    var _this4;\n    _classCallCheck(this, DoughnutController);\n    _this4 = _super3.call(this, chart, datasetIndex);\n    _this4.enableOptionSharing = true;\n    _this4.innerRadius = undefined;\n    _this4.outerRadius = undefined;\n    _this4.offsetX = undefined;\n    _this4.offsetY = undefined;\n    return _this4;\n  }\n  _createClass(DoughnutController, [{\n    key: \"linkScales\",\n    value: function linkScales() {}\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var data = this.getDataset().data;\n      var meta = this._cachedMeta;\n      if (this._parsing === false) {\n        meta._parsed = data;\n      } else {\n        var getter = function getter(i) {\n          return +data[i];\n        };\n        if (isObject(data[start])) {\n          var _this$_parsing$key = this._parsing.key,\n            key = _this$_parsing$key === void 0 ? 'value' : _this$_parsing$key;\n          getter = function getter(i) {\n            return +resolveObjectKey(data[i], key);\n          };\n        }\n        var i, ilen;\n        for (i = start, ilen = start + count; i < ilen; ++i) {\n          meta._parsed[i] = getter(i);\n        }\n      }\n    }\n  }, {\n    key: \"_getRotation\",\n    value: function _getRotation() {\n      return toRadians(this.options.rotation - 90);\n    }\n  }, {\n    key: \"_getCircumference\",\n    value: function _getCircumference() {\n      return toRadians(this.options.circumference);\n    }\n  }, {\n    key: \"_getRotationExtents\",\n    value: function _getRotationExtents() {\n      var min = TAU;\n      var max = -TAU;\n      for (var i = 0; i < this.chart.data.datasets.length; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          var controller = this.chart.getDatasetMeta(i).controller;\n          var rotation = controller._getRotation();\n          var circumference = controller._getCircumference();\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var meta = this._cachedMeta;\n      var arcs = meta.data;\n      var spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n      var maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      var cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n      var chartWeight = this._getRingWeight(this.index);\n      var _this$_getRotationExt = this._getRotationExtents(),\n        circumference = _this$_getRotationExt.circumference,\n        rotation = _this$_getRotationExt.rotation;\n      var _getRatioAndOffset = getRatioAndOffset(rotation, circumference, cutout),\n        ratioX = _getRatioAndOffset.ratioX,\n        ratioY = _getRatioAndOffset.ratioY,\n        offsetX = _getRatioAndOffset.offsetX,\n        offsetY = _getRatioAndOffset.offsetY;\n      var maxWidth = (chartArea.width - spacing) / ratioX;\n      var maxHeight = (chartArea.height - spacing) / ratioY;\n      var maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      var outerRadius = toDimension(this.options.radius, maxRadius);\n      var innerRadius = Math.max(outerRadius * cutout, 0);\n      var radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n      this.offsetX = offsetX * outerRadius;\n      this.offsetY = offsetY * outerRadius;\n      meta.total = this.calculateTotal();\n      this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n      this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_circumference\",\n    value: function _circumference(i, reset) {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n      var circumference = this._getCircumference();\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n        return 0;\n      }\n      return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var animateScale = reset && animationOpts.animateScale;\n      var innerRadius = animateScale ? 0 : this.innerRadius;\n      var outerRadius = animateScale ? 0 : this.outerRadius;\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions);\n      var startAngle = this._getRotation();\n      var i;\n      for (i = 0; i < start; ++i) {\n        startAngle += this._circumference(i, reset);\n      }\n      for (i = start; i < start + count; ++i) {\n        var circumference = this._circumference(i, reset);\n        var arc = arcs[i];\n        var properties = {\n          x: centerX + this.offsetX,\n          y: centerY + this.offsetY,\n          startAngle: startAngle,\n          endAngle: startAngle + circumference,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n        }\n        startAngle += circumference;\n        this.updateElement(arc, i, properties, mode);\n      }\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"calculateTotal\",\n    value: function calculateTotal() {\n      var meta = this._cachedMeta;\n      var metaData = meta.data;\n      var total = 0;\n      var i;\n      for (i = 0; i < metaData.length; i++) {\n        var value = meta._parsed[i];\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n          total += Math.abs(value);\n        }\n      }\n      return total;\n    }\n  }, {\n    key: \"calculateCircumference\",\n    value: function calculateCircumference(value) {\n      var total = this._cachedMeta.total;\n      if (total > 0 && !isNaN(value)) {\n        return TAU * (Math.abs(value) / total);\n      }\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"getMaxBorderWidth\",\n    value: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var chart = this.chart;\n      var i, ilen, meta, controller, options;\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n            break;\n          }\n        }\n      }\n      if (!arcs) {\n        return 0;\n      }\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n      return max;\n    }\n  }, {\n    key: \"getMaxOffset\",\n    value: function getMaxOffset(arcs) {\n      var max = 0;\n      for (var i = 0, ilen = arcs.length; i < ilen; ++i) {\n        var options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n      return max;\n    }\n  }, {\n    key: \"_getRingWeightOffset\",\n    value: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n      return ringWeightOffset;\n    }\n  }, {\n    key: \"_getRingWeight\",\n    value: function _getRingWeight(datasetIndex) {\n      return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n  }, {\n    key: \"_getVisibleDatasetWeightTotal\",\n    value: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n  }]);\n  return DoughnutController;\n}(DatasetController);\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n};\nDoughnutController.descriptors = {\n  _scriptable: function _scriptable(name) {\n    return name !== 'spacing';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'spacing';\n  }\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            var pointStyle = chart.legend.options.labels.pointStyle;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem) {\n          var dataLabel = tooltipItem.label;\n          var value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\nvar LineController = /*#__PURE__*/function (_DatasetController4) {\n  _inherits(LineController, _DatasetController4);\n  var _super4 = _createSuper(LineController);\n  function LineController() {\n    _classCallCheck(this, LineController);\n    return _super4.apply(this, arguments);\n  }\n  _createClass(LineController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      _get(_getPrototypeOf(LineController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset,\n        _meta$data = meta.data,\n        points = _meta$data === void 0 ? [] : _meta$data,\n        _dataset = meta._dataset;\n      var animationsDisabled = this.chart._animationsDisabled;\n      var _getStartAndCountOfVi = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n        start = _getStartAndCountOfVi.start,\n        count = _getStartAndCountOfVi.count;\n      this._drawStart = start;\n      this._drawCount = count;\n      if (scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      var options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options: options\n      }, mode);\n      this.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta3 = this._cachedMeta,\n        iScale = _this$_cachedMeta3.iScale,\n        vScale = _this$_cachedMeta3.vScale,\n        _stacked = _this$_cachedMeta3._stacked,\n        _dataset = _this$_cachedMeta3._dataset;\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var _this$options2 = this.options,\n        spanGaps = _this$options2.spanGaps,\n        segment = _this$options2.segment;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      var prevParsed = start > 0 && this.getParsed(start - 1);\n      for (var i = start; i < start + count; ++i) {\n        var point = points[i];\n        var parsed = this.getParsed(i);\n        var properties = directUpdate ? point : {};\n        var nullData = isNullOrUndef(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && parsed[iAxis] - prevParsed[iAxis] > maxGapLength;\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n        prevParsed = parsed;\n      }\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var meta = this._cachedMeta;\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      var data = meta.data || [];\n      if (!data.length) {\n        return border;\n      }\n      var firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n      _get(_getPrototypeOf(LineController.prototype), \"draw\", this).call(this);\n    }\n  }]);\n  return LineController;\n}(DatasetController);\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  var pointCount = points.length;\n  var start = 0;\n  var count = pointCount;\n  if (meta._sorted) {\n    var iScale = meta.iScale,\n      _parsed = meta._parsed;\n    var axis = iScale.axis;\n    var _iScale$getUserBounds = iScale.getUserBounds(),\n      min = _iScale$getUserBounds.min,\n      max = _iScale$getUserBounds.max,\n      minDefined = _iScale$getUserBounds.minDefined,\n      maxDefined = _iScale$getUserBounds.maxDefined;\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {\n    start: start,\n    count: count\n  };\n}\nfunction scaleRangesChanged(meta) {\n  var xScale = meta.xScale,\n    yScale = meta.yScale,\n    _scaleRanges = meta._scaleRanges;\n  var newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  var changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\nvar PolarAreaController = /*#__PURE__*/function (_DatasetController5) {\n  _inherits(PolarAreaController, _DatasetController5);\n  var _super5 = _createSuper(PolarAreaController);\n  function PolarAreaController(chart, datasetIndex) {\n    var _this5;\n    _classCallCheck(this, PolarAreaController);\n    _this5 = _super5.call(this, chart, datasetIndex);\n    _this5.innerRadius = undefined;\n    _this5.outerRadius = undefined;\n    return _this5;\n  }\n  _createClass(PolarAreaController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index].r, chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var arcs = this._cachedMeta.data;\n      this._updateRadius();\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_updateRadius\",\n    value: function _updateRadius() {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      var outerRadius = Math.max(minSize / 2, 0);\n      var innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      var radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      this.outerRadius = outerRadius - radiusLength * this.index;\n      this.innerRadius = this.outerRadius - radiusLength;\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var dataset = this.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = this._cachedMeta.rScale;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter;\n      var datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n      var angle = datasetStartAngle;\n      var i;\n      var defaultAngle = 360 / this.countVisibleElements();\n      for (i = 0; i < start; ++i) {\n        angle += this._computeAngle(i, mode, defaultAngle);\n      }\n      for (i = start; i < start + count; i++) {\n        var arc = arcs[i];\n        var startAngle = angle;\n        var endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n        var outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n        angle = endAngle;\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n        var properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: outerRadius,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n        };\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"countVisibleElements\",\n    value: function countVisibleElements() {\n      var _this6 = this;\n      var dataset = this.getDataset();\n      var meta = this._cachedMeta;\n      var count = 0;\n      meta.data.forEach(function (element, index) {\n        if (!isNaN(dataset.data[index]) && _this6.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n  }, {\n    key: \"_computeAngle\",\n    value: function _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n  }]);\n  return PolarAreaController;\n}(DatasetController);\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            var pointStyle = chart.legend.options.labels.pointStyle;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\nvar PieController = /*#__PURE__*/function (_DoughnutController) {\n  _inherits(PieController, _DoughnutController);\n  var _super6 = _createSuper(PieController);\n  function PieController() {\n    _classCallCheck(this, PieController);\n    return _super6.apply(this, arguments);\n  }\n  return _createClass(PieController);\n}(DoughnutController);\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\nvar RadarController = /*#__PURE__*/function (_DatasetController6) {\n  _inherits(RadarController, _DatasetController6);\n  var _super7 = _createSuper(RadarController);\n  function RadarController() {\n    _classCallCheck(this, RadarController);\n    return _super7.apply(this, arguments);\n  }\n  _createClass(RadarController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var vScale = this._cachedMeta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var labels = meta.iScale.getLabels();\n      line.points = points;\n      if (mode !== 'resize') {\n        var options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n          options.borderWidth = 0;\n        }\n        var properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options: options\n        };\n        this.updateElement(line, undefined, properties, mode);\n      }\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var dataset = this.getDataset();\n      var scale = this._cachedMeta.rScale;\n      var reset = mode === 'reset';\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        var pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n        var x = reset ? scale.xCenter : pointPosition.x;\n        var y = reset ? scale.yCenter : pointPosition.y;\n        var properties = {\n          x: x,\n          y: y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options: options\n        };\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }]);\n  return RadarController;\n}(DatasetController);\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\nvar ScatterController = /*#__PURE__*/function (_LineController) {\n  _inherits(ScatterController, _LineController);\n  var _super8 = _createSuper(ScatterController);\n  function ScatterController() {\n    _classCallCheck(this, ScatterController);\n    return _super8.apply(this, arguments);\n  }\n  return _createClass(ScatterController);\n}(LineController);\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nvar DateAdapter = /*#__PURE__*/function () {\n  function DateAdapter(options) {\n    _classCallCheck(this, DateAdapter);\n    this.options = options || {};\n  }\n  _createClass(DateAdapter, [{\n    key: \"formats\",\n    value: function formats() {\n      return abstract();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(value, format) {\n      return abstract();\n    }\n  }, {\n    key: \"format\",\n    value: function format(timestamp, _format) {\n      return abstract();\n    }\n  }, {\n    key: \"add\",\n    value: function add(timestamp, amount, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"diff\",\n    value: function diff(a, b, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"startOf\",\n    value: function startOf(timestamp, unit, weekday) {\n      return abstract();\n    }\n  }, {\n    key: \"endOf\",\n    value: function endOf(timestamp, unit) {\n      return abstract();\n    }\n  }]);\n  return DateAdapter;\n}();\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var index, data, element;\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i = metasets[i];\n    index = _metasets$i.index;\n    data = _metasets$i.data;\n    for (var j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  var controller = metaset.controller,\n    data = metaset.data,\n    _sorted = metaset._sorted;\n  var iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    var lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      var el = data[0];\n      var range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        var start = lookupMethod(data, axis, value - range);\n        var end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var value = position[axis];\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i2 = metasets[i],\n      index = _metasets$i2.index,\n      data = _metasets$i2.data;\n    var _binarySearch = binarySearch(metasets[i], axis, value, intersect),\n      lo = _binarySearch.lo,\n      hi = _binarySearch.hi;\n    for (var j = lo; j <= hi; ++j) {\n      var element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  var items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  var items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    var _element$getProps = element.getProps(['startAngle', 'endAngle'], useFinalPosition),\n      startAngle = _element$getProps.startAngle,\n      endAngle = _element$getProps.endAngle;\n    var _getAngleFromPoint = getAngleFromPoint(element, {\n        x: position.x,\n        y: position.y\n      }),\n      angle = _getAngleFromPoint.angle;\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition) {\n  var items = [];\n  var distanceMetric = getDistanceMetricForAxis(axis);\n  var minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    var inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    var center = element.getCenterPoint(useFinalPosition);\n    var pointInArea = _isPointInArea(center, chart.chartArea, chart._minPadding);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    var distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return [];\n  }\n  return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition);\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  var position = getRelativePosition(e, chart);\n  var items = [];\n  var axis = options.axis;\n  var rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  var intersectsItem = false;\n  evaluateAllVisibleItems(chart, function (element, datasetIndex, index) {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index: function index(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'x';\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      var elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach(function (meta) {\n        var index = items[0].index;\n        var element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({\n            element: element,\n            datasetIndex: meta.index,\n            index: index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset: function dataset(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        var datasetIndex = items[0].datasetIndex;\n        var data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (var i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex: datasetIndex,\n            index: i\n          });\n        }\n      }\n      return items;\n    },\n    point: function point(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest: function nearest(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x: function x(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {\n        axis: 'x',\n        intersect: options.intersect\n      }, useFinalPosition);\n    },\n    y: function y(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {\n        axis: 'y',\n        intersect: options.intersect\n      }, useFinalPosition);\n    }\n  }\n};\nvar STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(function (v) {\n    return v.pos === position;\n  });\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(function (v) {\n    return STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis;\n  });\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  var layoutBoxes = [];\n  var i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    var _box = box;\n    pos = _box.position;\n    var _box$options = _box.options;\n    stack = _box$options.stack;\n    var _box$options$stackWei = _box$options.stackWeight;\n    stackWeight = _box$options$stackWei === void 0 ? 1 : _box$options$stackWei;\n    layoutBoxes.push({\n      index: i,\n      box: box,\n      pos: pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight: stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  var stacks = {};\n  var _iterator4 = _createForOfIteratorHelper(layouts),\n    _step4;\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var wrap = _step4.value;\n      var stack = wrap.stack,\n        pos = wrap.pos,\n        stackWeight = wrap.stackWeight;\n      if (!stack || !STATIC_POSITIONS.includes(pos)) {\n        continue;\n      }\n      var _stack = stacks[stack] || (stacks[stack] = {\n        count: 0,\n        placed: 0,\n        weight: 0,\n        size: 0\n      });\n      _stack.count++;\n      _stack.weight += stackWeight;\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  var stacks = buildStacks(layouts);\n  var vBoxMaxWidth = params.vBoxMaxWidth,\n    hBoxMaxHeight = params.hBoxMaxHeight;\n  var i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    var fullSize = layout.box.fullSize;\n    var stack = stacks[layout.stack];\n    var factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  var layoutBoxes = wrapBoxes(boxes);\n  var fullSize = sortByWeight(layoutBoxes.filter(function (wrap) {\n    return wrap.box.fullSize;\n  }), true);\n  var left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  var right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  var top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  var bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  var centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  var centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize: fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  var pos = layout.pos,\n    box = layout.box;\n  var maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    var stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  var newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  var newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  var widthChanged = newWidth !== chartArea.w;\n  var heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\nfunction handleMaxPadding(chartArea) {\n  var maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    var change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  var maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    var margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(function (pos) {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  var refitBoxes = [];\n  var i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    var _updateDims = updateDims(chartArea, params, layout, stacks),\n      same = _updateDims.same,\n      other = _updateDims.other;\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  var userPadding = params.padding;\n  var x = chartArea.x,\n    y = chartArea.y;\n  var _iterator5 = _createForOfIteratorHelper(boxes),\n    _step5;\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var layout = _step5.value;\n      var box = layout.box;\n      var stack = stacks[layout.stack] || {\n        count: 1,\n        placed: 0,\n        weight: 1\n      };\n      var weight = layout.stackWeight / stack.weight || 1;\n      if (layout.horizontal) {\n        var width = chartArea.w * weight;\n        var height = stack.size || box.height;\n        if (defined(stack.start)) {\n          y = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n        } else {\n          setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n        }\n        stack.start = y;\n        stack.placed += width;\n        y = box.bottom;\n      } else {\n        var _height = chartArea.h * weight;\n        var _width = stack.size || box.width;\n        if (defined(stack.start)) {\n          x = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, x, userPadding.top, _width, params.outerHeight - userPadding.bottom - userPadding.top);\n        } else {\n          setBoxDims(box, x, chartArea.top + stack.placed, _width, _height);\n        }\n        stack.start = x;\n        stack.placed += _height;\n        x = box.right;\n      }\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw: function draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure: function configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update: function update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    var padding = toPadding(chart.options.layout.padding);\n    var availableWidth = Math.max(width - padding.width, 0);\n    var availableHeight = Math.max(height - padding.height, 0);\n    var boxes = buildLayoutBoxes(chart.boxes);\n    var verticalBoxes = boxes.vertical;\n    var horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, function (box) {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    var visibleVerticalBoxCount = verticalBoxes.reduce(function (total, wrap) {\n      return wrap.box.options && wrap.box.options.display === false ? total : total + 1;\n    }, 0) || 1;\n    var params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding: padding,\n      availableWidth: availableWidth,\n      availableHeight: availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    var maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    var chartArea = Object.assign({\n      maxPadding: maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    var stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, function (layout) {\n      var box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n};\nvar BasePlatform = /*#__PURE__*/function () {\n  function BasePlatform() {\n    _classCallCheck(this, BasePlatform);\n  }\n  _createClass(BasePlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {}\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      return false;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {}\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type, listener) {}\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return 1;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width: width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      return true;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {}\n  }]);\n  return BasePlatform;\n}();\nvar BasicPlatform = /*#__PURE__*/function (_BasePlatform) {\n  _inherits(BasicPlatform, _BasePlatform);\n  var _super9 = _createSuper(BasicPlatform);\n  function BasicPlatform() {\n    _classCallCheck(this, BasicPlatform);\n    return _super9.apply(this, arguments);\n  }\n  _createClass(BasicPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {\n      config.options.animation = false;\n    }\n  }]);\n  return BasicPlatform;\n}(BasePlatform);\nvar EXPANDO_KEY = '$chartjs';\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nvar isNullOrEmpty = function isNullOrEmpty(value) {\n  return value === null || value === '';\n};\nfunction initCanvas(canvas, aspectRatio) {\n  var style = canvas.style;\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    var displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var _getRelativePosition$ = getRelativePosition$1(event, chart),\n    x = _getRelativePosition$.x,\n    y = _getRelativePosition$.y;\n  return {\n    type: type,\n    chart: chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  var _iterator6 = _createForOfIteratorHelper(nodeList),\n    _step6;\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var node = _step6.value;\n      if (node === canvas || node.contains(canvas)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n    var _iterator7 = _createForOfIteratorHelper(entries),\n      _step7;\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var entry = _step7.value;\n        trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n    var _iterator8 = _createForOfIteratorHelper(entries),\n      _step8;\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var entry = _step8.value;\n        trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nvar drpListeningCharts = new Map();\nvar oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  var dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach(function (resize, chart) {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  var resize = throttled(function (width, height) {\n    var w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  var observer = new ResizeObserver(function (entries) {\n    var entry = entries[0];\n    var width = entry.contentRect.width;\n    var height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  var canvas = chart.canvas;\n  var proxy = throttled(function (event) {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, function (args) {\n    var event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nvar DomPlatform = /*#__PURE__*/function (_BasePlatform2) {\n  _inherits(DomPlatform, _BasePlatform2);\n  var _super10 = _createSuper(DomPlatform);\n  function DomPlatform() {\n    _classCallCheck(this, DomPlatform);\n    return _super10.apply(this, arguments);\n  }\n  _createClass(DomPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {\n      var context = canvas && canvas.getContext && canvas.getContext('2d');\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n      return null;\n    }\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      var canvas = context.canvas;\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n        if (isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      var style = initial.style || {};\n      Object.keys(style).forEach(function (key) {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      var handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type) {\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var proxy = proxies[type];\n      if (!proxy) {\n        return;\n      }\n      var handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      var handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(canvas, width, height, aspectRatio) {\n      return _getMaximumSize(canvas, width, height, aspectRatio);\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      var container = _getParentNode(canvas);\n      return !!(container && container.isConnected);\n    }\n  }]);\n  return DomPlatform;\n}(BasePlatform);\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\nvar Element = /*#__PURE__*/function () {\n  function Element() {\n    _classCallCheck(this, Element);\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  _createClass(Element, [{\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      var _this$getProps = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps.x,\n        y = _this$getProps.y;\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return isNumber(this.x) && isNumber(this.y);\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps(props, final) {\n      var _this7 = this;\n      var anims = this.$animations;\n      if (!final || !anims) {\n        return this;\n      }\n      var ret = {};\n      props.forEach(function (prop) {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : _this7[prop];\n      });\n      return ret;\n    }\n  }]);\n  return Element;\n}();\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nvar formatters = {\n  values: function values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric: function numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    var locale = this.chart.options.locale;\n    var notation;\n    var delta = tickValue;\n    if (ticks.length > 1) {\n      var maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    var logDelta = log10(Math.abs(delta));\n    var numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    var options = {\n      notation: notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic: function logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    var remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  var delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {\n  formatters: formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: function tickWidth(_ctx, options) {\n      return options.lineWidth;\n    },\n    tickColor: function tickColor(_ctx, options) {\n      return options.color;\n    },\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: function _scriptable(name) {\n    return !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'tickBorderDash';\n  }\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: function _scriptable(name) {\n    return name !== 'backdropPadding' && name !== 'callback';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'backdropPadding';\n  }\n});\nfunction autoSkip(scale, ticks) {\n  var tickOpts = scale.options.ticks;\n  var ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  var majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  var numMajorIndices = majorIndices.length;\n  var first = majorIndices[0];\n  var last = majorIndices[numMajorIndices - 1];\n  var newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  var spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    var i, ilen;\n    var avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  var offset = scale.options.offset;\n  var tickLength = scale._tickSize();\n  var maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  var maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  var evenMajorSpacing = getEvenSpacing(majorIndices);\n  var spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  var factors = _factorize(evenMajorSpacing);\n  for (var i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    var factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  var result = [];\n  var i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  var count = 0;\n  var next = majorIndices[0];\n  var i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  var start = valueOrDefault(majorStart, 0);\n  var end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  var count = 0;\n  var length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  var len = arr.length;\n  var i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\nvar reverseAlign = function reverseAlign(align) {\n  return align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n};\nvar offsetFromEdge = function offsetFromEdge(scale, edge, offset) {\n  return edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n};\nfunction sample(arr, numItems) {\n  var result = [];\n  var increment = arr.length / numItems;\n  var len = arr.length;\n  var i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  var length = scale.ticks.length;\n  var validIndex = Math.min(index, length - 1);\n  var start = scale._startPixel;\n  var end = scale._endPixel;\n  var epsilon = 1e-6;\n  var lineValue = scale.getPixelForTick(validIndex);\n  var offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, function (cache) {\n    var gc = cache.gc;\n    var gcLen = gc.length / 2;\n    var i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  var font = toFont(options.font, fallback);\n  var padding = toPadding(options.padding);\n  var lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale: scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick: tick,\n    index: index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  var ret = _toLeftRightCenter(align);\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  var top = scale.top,\n    left = scale.left,\n    bottom = scale.bottom,\n    right = scale.right,\n    chart = scale.chart;\n  var chartArea = chart.chartArea,\n    scales = chart.scales;\n  var rotation = 0;\n  var maxWidth, titleX, titleY;\n  var height = bottom - top;\n  var width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      var positionAxisID = Object.keys(position)[0];\n      var value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      var _positionAxisID = Object.keys(position)[0];\n      var _value = position[_positionAxisID];\n      titleX = scales[_positionAxisID].getPixelForValue(_value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {\n    titleX: titleX,\n    titleY: titleY,\n    maxWidth: maxWidth,\n    rotation: rotation\n  };\n}\nvar Scale = /*#__PURE__*/function (_Element) {\n  _inherits(Scale, _Element);\n  var _super11 = _createSuper(Scale);\n  function Scale(cfg) {\n    var _this8;\n    _classCallCheck(this, Scale);\n    _this8 = _super11.call(this);\n    _this8.id = cfg.id;\n    _this8.type = cfg.type;\n    _this8.options = undefined;\n    _this8.ctx = cfg.ctx;\n    _this8.chart = cfg.chart;\n    _this8.top = undefined;\n    _this8.bottom = undefined;\n    _this8.left = undefined;\n    _this8.right = undefined;\n    _this8.width = undefined;\n    _this8.height = undefined;\n    _this8._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    _this8.maxWidth = undefined;\n    _this8.maxHeight = undefined;\n    _this8.paddingTop = undefined;\n    _this8.paddingBottom = undefined;\n    _this8.paddingLeft = undefined;\n    _this8.paddingRight = undefined;\n    _this8.axis = undefined;\n    _this8.labelRotation = undefined;\n    _this8.min = undefined;\n    _this8.max = undefined;\n    _this8._range = undefined;\n    _this8.ticks = [];\n    _this8._gridLineItems = null;\n    _this8._labelItems = null;\n    _this8._labelSizes = null;\n    _this8._length = 0;\n    _this8._maxLength = 0;\n    _this8._longestTextCache = {};\n    _this8._startPixel = undefined;\n    _this8._endPixel = undefined;\n    _this8._reversePixels = false;\n    _this8._userMax = undefined;\n    _this8._userMin = undefined;\n    _this8._suggestedMax = undefined;\n    _this8._suggestedMin = undefined;\n    _this8._ticksLength = 0;\n    _this8._borderValue = 0;\n    _this8._cache = {};\n    _this8._dataLimitsCached = false;\n    _this8.$context = undefined;\n    return _this8;\n  }\n  _createClass(Scale, [{\n    key: \"init\",\n    value: function init(options) {\n      this.options = options.setContext(this.getContext());\n      this.axis = options.axis;\n      this._userMin = this.parse(options.min);\n      this._userMax = this.parse(options.max);\n      this._suggestedMin = this.parse(options.suggestedMin);\n      this._suggestedMax = this.parse(options.suggestedMax);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      return raw;\n    }\n  }, {\n    key: \"getUserBounds\",\n    value: function getUserBounds() {\n      var _userMin = this._userMin,\n        _userMax = this._userMax,\n        _suggestedMin = this._suggestedMin,\n        _suggestedMax = this._suggestedMax;\n      _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: finiteOrDefault(_userMin, _suggestedMin),\n        max: finiteOrDefault(_userMax, _suggestedMax),\n        minDefined: isNumberFinite(_userMin),\n        maxDefined: isNumberFinite(_userMax)\n      };\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(canStack) {\n      var _this$getUserBounds = this.getUserBounds(),\n        min = _this$getUserBounds.min,\n        max = _this$getUserBounds.max,\n        minDefined = _this$getUserBounds.minDefined,\n        maxDefined = _this$getUserBounds.maxDefined;\n      var range;\n      if (minDefined && maxDefined) {\n        return {\n          min: min,\n          max: max\n        };\n      }\n      var metas = this.getMatchingVisibleMetas();\n      for (var i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(this, canStack);\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n      min = maxDefined && min > max ? max : min;\n      max = minDefined && min > max ? min : max;\n      return {\n        min: finiteOrDefault(min, finiteOrDefault(max, min)),\n        max: finiteOrDefault(max, finiteOrDefault(min, max))\n      };\n    }\n  }, {\n    key: \"getPadding\",\n    value: function getPadding() {\n      return {\n        left: this.paddingLeft || 0,\n        top: this.paddingTop || 0,\n        right: this.paddingRight || 0,\n        bottom: this.paddingBottom || 0\n      };\n    }\n  }, {\n    key: \"getTicks\",\n    value: function getTicks() {\n      return this.ticks;\n    }\n  }, {\n    key: \"getLabels\",\n    value: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n  }, {\n    key: \"beforeUpdate\",\n    value: function beforeUpdate() {\n      callback(this.options.beforeUpdate, [this]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var _this$options3 = this.options,\n        beginAtZero = _this$options3.beginAtZero,\n        grace = _this$options3.grace,\n        tickOpts = _this$options3.ticks;\n      var sampleSize = tickOpts.sampleSize;\n      this.beforeUpdate();\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      this.ticks = null;\n      this._labelSizes = null;\n      this._gridLineItems = null;\n      this._labelItems = null;\n      this.beforeSetDimensions();\n      this.setDimensions();\n      this.afterSetDimensions();\n      this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n      if (!this._dataLimitsCached) {\n        this.beforeDataLimits();\n        this.determineDataLimits();\n        this.afterDataLimits();\n        this._range = _addGrace(this, grace, beginAtZero);\n        this._dataLimitsCached = true;\n      }\n      this.beforeBuildTicks();\n      this.ticks = this.buildTicks() || [];\n      this.afterBuildTicks();\n      var samplingEnabled = sampleSize < this.ticks.length;\n      this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n      this.configure();\n      this.beforeCalculateLabelRotation();\n      this.calculateLabelRotation();\n      this.afterCalculateLabelRotation();\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        this.ticks = autoSkip(this, this.ticks);\n        this._labelSizes = null;\n      }\n      if (samplingEnabled) {\n        this._convertTicksToLabels(this.ticks);\n      }\n      this.beforeFit();\n      this.fit();\n      this.afterFit();\n      this.afterUpdate();\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var reversePixels = this.options.reverse;\n      var startPixel, endPixel;\n      if (this.isHorizontal()) {\n        startPixel = this.left;\n        endPixel = this.right;\n      } else {\n        startPixel = this.top;\n        endPixel = this.bottom;\n        reversePixels = !reversePixels;\n      }\n      this._startPixel = startPixel;\n      this._endPixel = endPixel;\n      this._reversePixels = reversePixels;\n      this._length = endPixel - startPixel;\n      this._alignToPixels = this.options.alignToPixels;\n    }\n  }, {\n    key: \"afterUpdate\",\n    value: function afterUpdate() {\n      callback(this.options.afterUpdate, [this]);\n    }\n  }, {\n    key: \"beforeSetDimensions\",\n    value: function beforeSetDimensions() {\n      callback(this.options.beforeSetDimensions, [this]);\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = 0;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = 0;\n        this.bottom = this.height;\n      }\n      this.paddingLeft = 0;\n      this.paddingTop = 0;\n      this.paddingRight = 0;\n      this.paddingBottom = 0;\n    }\n  }, {\n    key: \"afterSetDimensions\",\n    value: function afterSetDimensions() {\n      callback(this.options.afterSetDimensions, [this]);\n    }\n  }, {\n    key: \"_callHooks\",\n    value: function _callHooks(name) {\n      this.chart.notifyPlugins(name, this.getContext());\n      callback(this.options[name], [this]);\n    }\n  }, {\n    key: \"beforeDataLimits\",\n    value: function beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {}\n  }, {\n    key: \"afterDataLimits\",\n    value: function afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n  }, {\n    key: \"beforeBuildTicks\",\n    value: function beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      return [];\n    }\n  }, {\n    key: \"afterBuildTicks\",\n    value: function afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n  }, {\n    key: \"beforeTickToLabelConversion\",\n    value: function beforeTickToLabelConversion() {\n      callback(this.options.beforeTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var tickOpts = this.options.ticks;\n      var i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n      }\n    }\n  }, {\n    key: \"afterTickToLabelConversion\",\n    value: function afterTickToLabelConversion() {\n      callback(this.options.afterTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"beforeCalculateLabelRotation\",\n    value: function beforeCalculateLabelRotation() {\n      callback(this.options.beforeCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"calculateLabelRotation\",\n    value: function calculateLabelRotation() {\n      var options = this.options;\n      var tickOpts = options.ticks;\n      var numTicks = this.ticks.length;\n      var minRotation = tickOpts.minRotation || 0;\n      var maxRotation = tickOpts.maxRotation;\n      var labelRotation = minRotation;\n      var tickWidth, maxHeight, maxLabelDiagonal;\n      if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n        this.labelRotation = minRotation;\n        return;\n      }\n      var labelSizes = this._getLabelSizes();\n      var maxLabelWidth = labelSizes.widest.width;\n      var maxLabelHeight = labelSizes.highest.height;\n      var maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n      tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n      this.labelRotation = labelRotation;\n    }\n  }, {\n    key: \"afterCalculateLabelRotation\",\n    value: function afterCalculateLabelRotation() {\n      callback(this.options.afterCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"beforeFit\",\n    value: function beforeFit() {\n      callback(this.options.beforeFit, [this]);\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var minSize = {\n        width: 0,\n        height: 0\n      };\n      var chart = this.chart,\n        _this$options4 = this.options,\n        tickOpts = _this$options4.ticks,\n        titleOpts = _this$options4.title,\n        gridOpts = _this$options4.grid;\n      var display = this._isVisible();\n      var isHorizontal = this.isHorizontal();\n      if (display) {\n        var titleHeight = getTitleHeight(titleOpts, chart.options.font);\n        if (isHorizontal) {\n          minSize.width = this.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = this.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n        if (tickOpts.display && this.ticks.length) {\n          var _this$_getLabelSizes = this._getLabelSizes(),\n            first = _this$_getLabelSizes.first,\n            last = _this$_getLabelSizes.last,\n            widest = _this$_getLabelSizes.widest,\n            highest = _this$_getLabelSizes.highest;\n          var tickPadding = tickOpts.padding * 2;\n          var angleRadians = toRadians(this.labelRotation);\n          var cos = Math.cos(angleRadians);\n          var sin = Math.sin(angleRadians);\n          if (isHorizontal) {\n            var labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            var labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n          this._calculatePadding(first, last, sin, cos);\n        }\n      }\n      this._handleMargins();\n      if (isHorizontal) {\n        this.width = this._length = chart.width - this._margins.left - this._margins.right;\n        this.height = minSize.height;\n      } else {\n        this.width = minSize.width;\n        this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n      }\n    }\n  }, {\n    key: \"_calculatePadding\",\n    value: function _calculatePadding(first, last, sin, cos) {\n      var _this$options5 = this.options,\n        _this$options5$ticks = _this$options5.ticks,\n        align = _this$options5$ticks.align,\n        padding = _this$options5$ticks.padding,\n        position = _this$options5.position;\n      var isRotated = this.labelRotation !== 0;\n      var labelsBelowTicks = position !== 'top' && this.axis === 'x';\n      if (this.isHorizontal()) {\n        var offsetLeft = this.getPixelForTick(0) - this.left;\n        var offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n        var paddingLeft = 0;\n        var paddingRight = 0;\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n        this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n        this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n      } else {\n        var paddingTop = last.height / 2;\n        var paddingBottom = first.height / 2;\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n        this.paddingTop = paddingTop + padding;\n        this.paddingBottom = paddingBottom + padding;\n      }\n    }\n  }, {\n    key: \"_handleMargins\",\n    value: function _handleMargins() {\n      if (this._margins) {\n        this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n        this._margins.top = Math.max(this.paddingTop, this._margins.top);\n        this._margins.right = Math.max(this.paddingRight, this._margins.right);\n        this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n      }\n    }\n  }, {\n    key: \"afterFit\",\n    value: function afterFit() {\n      callback(this.options.afterFit, [this]);\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var _this$options6 = this.options,\n        axis = _this$options6.axis,\n        position = _this$options6.position;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n  }, {\n    key: \"isFullSize\",\n    value: function isFullSize() {\n      return this.options.fullSize;\n    }\n  }, {\n    key: \"_convertTicksToLabels\",\n    value: function _convertTicksToLabels(ticks) {\n      this.beforeTickToLabelConversion();\n      this.generateTickLabels(ticks);\n      var i, ilen;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        if (isNullOrUndef(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n      this.afterTickToLabelConversion();\n    }\n  }, {\n    key: \"_getLabelSizes\",\n    value: function _getLabelSizes() {\n      var labelSizes = this._labelSizes;\n      if (!labelSizes) {\n        var sampleSize = this.options.ticks.sampleSize;\n        var ticks = this.ticks;\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n        this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n      }\n      return labelSizes;\n    }\n  }, {\n    key: \"_computeLabelSizes\",\n    value: function _computeLabelSizes(ticks, length) {\n      var ctx = this.ctx,\n        caches = this._longestTextCache;\n      var widths = [];\n      var heights = [];\n      var widestLabelSize = 0;\n      var highestLabelSize = 0;\n      var i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n      for (i = 0; i < length; ++i) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n        if (!isNullOrUndef(label) && !isArray(label)) {\n          width = _measureText(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if (isArray(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n            if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n              width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n      garbageCollect(caches, length);\n      var widest = widths.indexOf(widestLabelSize);\n      var highest = heights.indexOf(highestLabelSize);\n      var valueAt = function valueAt(idx) {\n        return {\n          width: widths[idx] || 0,\n          height: heights[idx] || 0\n        };\n      };\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths: widths,\n        heights: heights\n      };\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value;\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value, index) {\n      return NaN;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {}\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getPixelForDecimal\",\n    value: function getPixelForDecimal(decimal) {\n      if (this._reversePixels) {\n        decimal = 1 - decimal;\n      }\n      var pixel = this._startPixel + decimal * this._length;\n      return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n  }, {\n    key: \"getDecimalForPixel\",\n    value: function getDecimalForPixel(pixel) {\n      var decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n  }, {\n    key: \"getBaseValue\",\n    value: function getBaseValue() {\n      var min = this.min,\n        max = this.max;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index) {\n      var ticks = this.ticks || [];\n      if (index >= 0 && index < ticks.length) {\n        var tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n      }\n      return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n  }, {\n    key: \"_tickSize\",\n    value: function _tickSize() {\n      var optionTicks = this.options.ticks;\n      var rot = toRadians(this.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var labelSizes = this._getLabelSizes();\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = labelSizes ? labelSizes.widest.width + padding : 0;\n      var h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      var display = this.options.display;\n      if (display !== 'auto') {\n        return !!display;\n      }\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n  }, {\n    key: \"_computeGridLineItems\",\n    value: function _computeGridLineItems(chartArea) {\n      var axis = this.axis;\n      var chart = this.chart;\n      var options = this.options;\n      var grid = options.grid,\n        position = options.position;\n      var offset = grid.offset;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var ticksLength = ticks.length + (offset ? 1 : 0);\n      var tl = getTickMarkLength(grid);\n      var items = [];\n      var borderOpts = grid.setContext(this.getContext());\n      var axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n      var axisHalfWidth = axisWidth / 2;\n      var alignBorderValue = function alignBorderValue(pixel) {\n        return _alignPixel(chart, pixel, axisWidth);\n      };\n      var borderValue, i, lineValue, alignedLineValue;\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n      if (position === 'top') {\n        borderValue = alignBorderValue(this.bottom);\n        ty1 = this.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(this.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = this.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(this.right);\n        tx1 = this.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(this.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = this.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if (isObject(position)) {\n          var _positionAxisID2 = Object.keys(position)[0];\n          var _value2 = position[_positionAxisID2];\n          borderValue = alignBorderValue(this.chart.scales[_positionAxisID2].getPixelForValue(_value2));\n        }\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n      var limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n      var step = Math.max(1, Math.ceil(ticksLength / limit));\n      for (i = 0; i < ticksLength; i += step) {\n        var optsAtIndex = grid.setContext(this.getContext(i));\n        var lineWidth = optsAtIndex.lineWidth;\n        var lineColor = optsAtIndex.color;\n        var borderDash = grid.borderDash || [];\n        var borderDashOffset = optsAtIndex.borderDashOffset;\n        var tickWidth = optsAtIndex.tickWidth;\n        var tickColor = optsAtIndex.tickColor;\n        var tickBorderDash = optsAtIndex.tickBorderDash || [];\n        var tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(this, i, offset);\n        if (lineValue === undefined) {\n          continue;\n        }\n        alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n        items.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash: borderDash,\n          borderDashOffset: borderDashOffset,\n          tickWidth: tickWidth,\n          tickColor: tickColor,\n          tickBorderDash: tickBorderDash,\n          tickBorderDashOffset: tickBorderDashOffset\n        });\n      }\n      this._ticksLength = ticksLength;\n      this._borderValue = borderValue;\n      return items;\n    }\n  }, {\n    key: \"_computeLabelItems\",\n    value: function _computeLabelItems(chartArea) {\n      var axis = this.axis;\n      var options = this.options;\n      var position = options.position,\n        optionTicks = options.ticks;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var align = optionTicks.align,\n        crossAlign = optionTicks.crossAlign,\n        padding = optionTicks.padding,\n        mirror = optionTicks.mirror;\n      var tl = getTickMarkLength(options.grid);\n      var tickAndPadding = tl + padding;\n      var hTickAndPadding = mirror ? -padding : tickAndPadding;\n      var rotation = -toRadians(this.labelRotation);\n      var items = [];\n      var i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      var textBaseline = 'middle';\n      if (position === 'top') {\n        y = this.bottom - hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = this.top + hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        var ret = this._getYAxisLabelAlignment(tl);\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        var _ret = this._getYAxisLabelAlignment(tl);\n        textAlign = _ret.textAlign;\n        x = _ret.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if (isObject(position)) {\n          var _positionAxisID3 = Object.keys(position)[0];\n          var _value3 = position[_positionAxisID3];\n          x = this.chart.scales[_positionAxisID3].getPixelForValue(_value3);\n        }\n        textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n      }\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n      var labelSizes = this._getLabelSizes();\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        var optsAtIndex = optionTicks.setContext(this.getContext(i));\n        pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n        font = this._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = isArray(label) ? label.length : 1;\n        var halfCount = lineCount / 2;\n        var color = optsAtIndex.color;\n        var strokeColor = optsAtIndex.textStrokeColor;\n        var strokeWidth = optsAtIndex.textStrokeWidth;\n        if (isHorizontal) {\n          x = pixel;\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n          if (mirror) {\n            textOffset *= -1;\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n        var backdrop = void 0;\n        if (optsAtIndex.showLabelBackdrop) {\n          var labelPadding = toPadding(optsAtIndex.backdropPadding);\n          var height = labelSizes.heights[i];\n          var width = labelSizes.widths[i];\n          var top = y + textOffset - labelPadding.top;\n          var left = x - labelPadding.left;\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n            case 'bottom':\n              top -= height;\n              break;\n          }\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n            case 'right':\n              left -= width;\n              break;\n          }\n          backdrop = {\n            left: left,\n            top: top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n        items.push({\n          rotation: rotation,\n          label: label,\n          font: font,\n          color: color,\n          strokeColor: strokeColor,\n          strokeWidth: strokeWidth,\n          textOffset: textOffset,\n          textAlign: textAlign,\n          textBaseline: textBaseline,\n          translation: [x, y],\n          backdrop: backdrop\n        });\n      }\n      return items;\n    }\n  }, {\n    key: \"_getXAxisLabelAlignment\",\n    value: function _getXAxisLabelAlignment() {\n      var _this$options7 = this.options,\n        position = _this$options7.position,\n        ticks = _this$options7.ticks;\n      var rotation = -toRadians(this.labelRotation);\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n      var align = 'center';\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      }\n      return align;\n    }\n  }, {\n    key: \"_getYAxisLabelAlignment\",\n    value: function _getYAxisLabelAlignment(tl) {\n      var _this$options8 = this.options,\n        position = _this$options8.position,\n        _this$options8$ticks = _this$options8.ticks,\n        crossAlign = _this$options8$ticks.crossAlign,\n        mirror = _this$options8$ticks.mirror,\n        padding = _this$options8$ticks.padding;\n      var labelSizes = this._getLabelSizes();\n      var tickAndPadding = tl + padding;\n      var widest = labelSizes.widest.width;\n      var textAlign;\n      var x;\n      if (position === 'left') {\n        if (mirror) {\n          x = this.right + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x += widest;\n          }\n        } else {\n          x = this.right - tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = this.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          x = this.left + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x -= widest;\n          }\n        } else {\n          x = this.left + tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = this.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n      return {\n        textAlign: textAlign,\n        x: x\n      };\n    }\n  }, {\n    key: \"_computeLabelArea\",\n    value: function _computeLabelArea() {\n      if (this.options.ticks.mirror) {\n        return;\n      }\n      var chart = this.chart;\n      var position = this.options.position;\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: this.left,\n          bottom: chart.height,\n          right: this.right\n        };\n      }\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: this.top,\n          left: 0,\n          bottom: this.bottom,\n          right: chart.width\n        };\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var ctx = this.ctx,\n        backgroundColor = this.options.backgroundColor,\n        left = this.left,\n        top = this.top,\n        width = this.width,\n        height = this.height;\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getLineWidthForValue\",\n    value: function getLineWidthForValue(value) {\n      var grid = this.options.grid;\n      if (!this._isVisible() || !grid.display) {\n        return 0;\n      }\n      var ticks = this.ticks;\n      var index = ticks.findIndex(function (t) {\n        return t.value === value;\n      });\n      if (index >= 0) {\n        var opts = grid.setContext(this.getContext(index));\n        return opts.lineWidth;\n      }\n      return 0;\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid(chartArea) {\n      var grid = this.options.grid;\n      var ctx = this.ctx;\n      var items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n      var i, ilen;\n      var drawLine = function drawLine(p1, p2, style) {\n        if (!style.width || !style.color) {\n          return;\n        }\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          var item = items[i];\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {\n      var chart = this.chart,\n        ctx = this.ctx,\n        grid = this.options.grid;\n      var borderOpts = grid.setContext(this.getContext());\n      var axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n      if (!axisWidth) {\n        return;\n      }\n      var lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n      var borderValue = this._borderValue;\n      var x1, x2, y1, y2;\n      if (this.isHorizontal()) {\n        x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      ctx.save();\n      ctx.lineWidth = borderOpts.borderWidth;\n      ctx.strokeStyle = borderOpts.borderColor;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels(chartArea) {\n      var optionTicks = this.options.ticks;\n      if (!optionTicks.display) {\n        return;\n      }\n      var ctx = this.ctx;\n      var area = this._computeLabelArea();\n      if (area) {\n        clipArea(ctx, area);\n      }\n      var items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n      var i, ilen;\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        var item = items[i];\n        var tickFont = item.font;\n        var label = item.label;\n        if (item.backdrop) {\n          ctx.fillStyle = item.backdrop.color;\n          ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n        }\n        var y = item.textOffset;\n        renderText(ctx, label, 0, y, tickFont, item);\n      }\n      if (area) {\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var ctx = this.ctx,\n        _this$options9 = this.options,\n        position = _this$options9.position,\n        title = _this$options9.title,\n        reverse = _this$options9.reverse;\n      if (!title.display) {\n        return;\n      }\n      var font = toFont(title.font);\n      var padding = toPadding(title.padding);\n      var align = title.align;\n      var offset = font.lineHeight / 2;\n      if (position === 'bottom' || position === 'center' || isObject(position)) {\n        offset += padding.bottom;\n        if (isArray(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n      var _titleArgs = titleArgs(this, offset, position, align),\n        titleX = _titleArgs.titleX,\n        titleY = _titleArgs.titleY,\n        maxWidth = _titleArgs.maxWidth,\n        rotation = _titleArgs.rotation;\n      renderText(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(chartArea) {\n      if (!this._isVisible()) {\n        return;\n      }\n      this.drawBackground();\n      this.drawGrid(chartArea);\n      this.drawBorder();\n      this.drawTitle();\n      this.drawLabels(chartArea);\n    }\n  }, {\n    key: \"_layers\",\n    value: function _layers() {\n      var _this9 = this;\n      var opts = this.options;\n      var tz = opts.ticks && opts.ticks.z || 0;\n      var gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n      if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: function draw(chartArea) {\n            _this9.draw(chartArea);\n          }\n        }];\n      }\n      return [{\n        z: gz,\n        draw: function draw(chartArea) {\n          _this9.drawBackground();\n          _this9.drawGrid(chartArea);\n          _this9.drawTitle();\n        }\n      }, {\n        z: gz + 1,\n        draw: function draw() {\n          _this9.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw: function draw(chartArea) {\n          _this9.drawLabels(chartArea);\n        }\n      }];\n    }\n  }, {\n    key: \"getMatchingVisibleMetas\",\n    value: function getMatchingVisibleMetas(type) {\n      var metas = this.chart.getSortedVisibleDatasetMetas();\n      var axisID = this.axis + 'AxisID';\n      var result = [];\n      var i, ilen;\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        var meta = metas[i];\n        if (meta[axisID] === this.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"_resolveTickFontOptions\",\n    value: function _resolveTickFontOptions(index) {\n      var opts = this.options.ticks.setContext(this.getContext(index));\n      return toFont(opts.font);\n    }\n  }, {\n    key: \"_maxDigits\",\n    value: function _maxDigits() {\n      var fontSize = this._resolveTickFontOptions(0).lineHeight;\n      return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n  }]);\n  return Scale;\n}(Element);\nvar TypedRegistry = /*#__PURE__*/function () {\n  function TypedRegistry(type, scope, override) {\n    _classCallCheck(this, TypedRegistry);\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  _createClass(TypedRegistry, [{\n    key: \"isForType\",\n    value: function isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n  }, {\n    key: \"register\",\n    value: function register(item) {\n      var proto = Object.getPrototypeOf(item);\n      var parentScope;\n      if (isIChartComponent(proto)) {\n        parentScope = this.register(proto);\n      }\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope + '.' + id;\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n      if (id in items) {\n        return scope;\n      }\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n      if (this.override) {\n        defaults.override(item.id, item.overrides);\n      }\n      return scope;\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      return this.items[id];\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(item) {\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope;\n      if (id in items) {\n        delete items[id];\n      }\n      if (scope && id in defaults[scope]) {\n        delete defaults[scope][id];\n        if (this.override) {\n          delete overrides[id];\n        }\n      }\n    }\n  }]);\n  return TypedRegistry;\n}();\nfunction registerDefaults(item, scope, parentScope) {\n  var itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(function (property) {\n    var propertyParts = property.split('.');\n    var sourceName = propertyParts.pop();\n    var sourceScope = [scope].concat(propertyParts).join('.');\n    var parts = routes[property].split('.');\n    var targetName = parts.pop();\n    var targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\nvar Registry = /*#__PURE__*/function () {\n  function Registry() {\n    _classCallCheck(this, Registry);\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  _createClass(Registry, [{\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      this._each('register', args);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      this._each('unregister', args);\n    }\n  }, {\n    key: \"addControllers\",\n    value: function addControllers() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      this._each('register', args, this.controllers);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      this._each('register', args, this.elements);\n    }\n  }, {\n    key: \"addPlugins\",\n    value: function addPlugins() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      this._each('register', args, this.plugins);\n    }\n  }, {\n    key: \"addScales\",\n    value: function addScales() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n      this._each('register', args, this.scales);\n    }\n  }, {\n    key: \"getController\",\n    value: function getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n  }, {\n    key: \"getPlugin\",\n    value: function getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n  }, {\n    key: \"removeControllers\",\n    value: function removeControllers() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n      this._each('unregister', args, this.controllers);\n    }\n  }, {\n    key: \"removeElements\",\n    value: function removeElements() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n      this._each('unregister', args, this.elements);\n    }\n  }, {\n    key: \"removePlugins\",\n    value: function removePlugins() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n      this._each('unregister', args, this.plugins);\n    }\n  }, {\n    key: \"removeScales\",\n    value: function removeScales() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n      this._each('unregister', args, this.scales);\n    }\n  }, {\n    key: \"_each\",\n    value: function _each(method, args, typedRegistry) {\n      var _this10 = this;\n      _toConsumableArray(args).forEach(function (arg) {\n        var reg = typedRegistry || _this10._getRegistryForType(arg);\n        if (typedRegistry || reg.isForType(arg) || reg === _this10.plugins && arg.id) {\n          _this10._exec(method, reg, arg);\n        } else {\n          each(arg, function (item) {\n            var itemReg = typedRegistry || _this10._getRegistryForType(item);\n            _this10._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_exec\",\n    value: function _exec(method, registry, component) {\n      var camelMethod = _capitalize(method);\n      callback(component['before' + camelMethod], [], component);\n      registry[method](component);\n      callback(component['after' + camelMethod], [], component);\n    }\n  }, {\n    key: \"_getRegistryForType\",\n    value: function _getRegistryForType(type) {\n      for (var i = 0; i < this._typedRegistries.length; i++) {\n        var reg = this._typedRegistries[i];\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n      return this.plugins;\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(id, typedRegistry, type) {\n      var item = typedRegistry.get(id);\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n      return item;\n    }\n  }]);\n  return Registry;\n}();\nvar registry = new Registry();\nvar PluginService = /*#__PURE__*/function () {\n  function PluginService() {\n    _classCallCheck(this, PluginService);\n    this._init = [];\n  }\n  _createClass(PluginService, [{\n    key: \"notify\",\n    value: function notify(chart, hook, args, filter) {\n      if (hook === 'beforeInit') {\n        this._init = this._createDescriptors(chart, true);\n        this._notify(this._init, chart, 'install');\n      }\n      var descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n      var result = this._notify(descriptors, chart, hook, args);\n      if (hook === 'afterDestroy') {\n        this._notify(descriptors, chart, 'stop');\n        this._notify(this._init, chart, 'uninstall');\n      }\n      return result;\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(descriptors, chart, hook, args) {\n      args = args || {};\n      var _iterator9 = _createForOfIteratorHelper(descriptors),\n        _step9;\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var descriptor = _step9.value;\n          var plugin = descriptor.plugin;\n          var method = plugin[hook];\n          var params = [chart, args, descriptor.options];\n          if (callback(method, params, plugin) === false && args.cancelable) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n      return true;\n    }\n  }, {\n    key: \"invalidate\",\n    value: function invalidate() {\n      if (!isNullOrUndef(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n  }, {\n    key: \"_descriptors\",\n    value: function _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n      var descriptors = this._cache = this._createDescriptors(chart);\n      this._notifyStateChanges(chart);\n      return descriptors;\n    }\n  }, {\n    key: \"_createDescriptors\",\n    value: function _createDescriptors(chart, all) {\n      var config = chart && chart.config;\n      var options = valueOrDefault(config.options && config.options.plugins, {});\n      var plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n  }, {\n    key: \"_notifyStateChanges\",\n    value: function _notifyStateChanges(chart) {\n      var previousDescriptors = this._oldCache || [];\n      var descriptors = this._cache;\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.plugin.id === y.plugin.id;\n          });\n        });\n      };\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n  }]);\n  return PluginService;\n}();\nfunction allPlugins(config) {\n  var plugins = [];\n  var keys = Object.keys(registry.plugins.items);\n  for (var i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  var local = config.plugins || [];\n  for (var _i2 = 0; _i2 < local.length; _i2++) {\n    var plugin = local[_i2];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  var result = [];\n  var context = chart.getContext();\n  for (var i = 0; i < plugins.length; i++) {\n    var plugin = plugins[i];\n    var id = plugin.id;\n    var opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin: plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  var keys = config.pluginScopeKeys(plugin);\n  var scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\nfunction getIndexAxis(type, options) {\n  var datasetDefaults = defaults.datasets[type] || {};\n  var datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  var axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  var chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  var configScales = options.scales || {};\n  var chartIndexAxis = getIndexAxis(config.type, options);\n  var firstIDs = Object.create(null);\n  var scales = Object.create(null);\n  Object.keys(configScales).forEach(function (id) {\n    var scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(\"Invalid scale configuration for scale: \".concat(id));\n    }\n    if (scaleConf._proxy) {\n      return console.warn(\"Ignoring resolver passed as options for scale: \".concat(id));\n    }\n    var axis = determineAxis(id, scaleConf);\n    var defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    var defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis: axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(function (dataset) {\n    var type = dataset.type || config.type;\n    var indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    var datasetDefaults = overrides[type] || {};\n    var defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(function (defaultID) {\n      var axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      var id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis: axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(function (key) {\n    var scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  var options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nvar keyCache = new Map();\nvar keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  var keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nvar addIfFound = function addIfFound(set, obj, key) {\n  var opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nvar Config = /*#__PURE__*/function () {\n  function Config(config) {\n    _classCallCheck(this, Config);\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  _createClass(Config, [{\n    key: \"platform\",\n    get: function get() {\n      return this._config.platform;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._config.type;\n    },\n    set: function set(type) {\n      this._config.type = type;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._config.data;\n    },\n    set: function set(data) {\n      this._config.data = initData(data);\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._config.options;\n    },\n    set: function set(options) {\n      this._config.options = options;\n    }\n  }, {\n    key: \"plugins\",\n    get: function get() {\n      return this._config.plugins;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this._scopeCache.clear();\n      this._resolverCache.clear();\n    }\n  }, {\n    key: \"datasetScopeKeys\",\n    value: function datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, function () {\n        return [[\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetAnimationScopeKeys\",\n    value: function datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(\"\".concat(datasetType, \".transition.\").concat(transition), function () {\n        return [[\"datasets.\".concat(datasetType, \".transitions.\").concat(transition), \"transitions.\".concat(transition)], [\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetElementScopeKeys\",\n    value: function datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(\"\".concat(datasetType, \"-\").concat(elementType), function () {\n        return [[\"datasets.\".concat(datasetType, \".elements.\").concat(elementType), \"datasets.\".concat(datasetType), \"elements.\".concat(elementType), '']];\n      });\n    }\n  }, {\n    key: \"pluginScopeKeys\",\n    value: function pluginScopeKeys(plugin) {\n      var id = plugin.id;\n      var type = this.type;\n      return cachedKeys(\"\".concat(type, \"-plugin-\").concat(id), function () {\n        return [[\"plugins.\".concat(id)].concat(_toConsumableArray(plugin.additionalOptionScopes || []))];\n      });\n    }\n  }, {\n    key: \"_cachedScopes\",\n    value: function _cachedScopes(mainScope, resetCache) {\n      var _scopeCache = this._scopeCache;\n      var cache = _scopeCache.get(mainScope);\n      if (!cache || resetCache) {\n        cache = new Map();\n        _scopeCache.set(mainScope, cache);\n      }\n      return cache;\n    }\n  }, {\n    key: \"getOptionScopes\",\n    value: function getOptionScopes(mainScope, keyLists, resetCache) {\n      var options = this.options,\n        type = this.type;\n      var cache = this._cachedScopes(mainScope, resetCache);\n      var cached = cache.get(keyLists);\n      if (cached) {\n        return cached;\n      }\n      var scopes = new Set();\n      keyLists.forEach(function (keys) {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(function (key) {\n            return addIfFound(scopes, mainScope, key);\n          });\n        }\n        keys.forEach(function (key) {\n          return addIfFound(scopes, options, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, overrides[type] || {}, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, defaults, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, descriptors, key);\n        });\n      });\n      var array = Array.from(scopes);\n      if (array.length === 0) {\n        array.push(Object.create(null));\n      }\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n      return array;\n    }\n  }, {\n    key: \"chartOptionScopes\",\n    value: function chartOptionScopes() {\n      var options = this.options,\n        type = this.type;\n      return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n        type: type\n      }, defaults, descriptors];\n    }\n  }, {\n    key: \"resolveNamedOptions\",\n    value: function resolveNamedOptions(scopes, names, context) {\n      var prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n      var result = {\n        $shared: true\n      };\n      var _getResolver = getResolver(this._resolverCache, scopes, prefixes),\n        resolver = _getResolver.resolver,\n        subPrefixes = _getResolver.subPrefixes;\n      var options = resolver;\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = isFunction(context) ? context() : context;\n        var subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = _attachContext(resolver, context, subResolver);\n      }\n      var _iterator10 = _createForOfIteratorHelper(names),\n        _step10;\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var prop = _step10.value;\n          result[prop] = options[prop];\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n      return result;\n    }\n  }, {\n    key: \"createResolver\",\n    value: function createResolver(scopes, context) {\n      var prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n      var descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n      var _getResolver2 = getResolver(this._resolverCache, scopes, prefixes),\n        resolver = _getResolver2.resolver;\n      return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n  }]);\n  return Config;\n}();\nfunction getResolver(resolverCache, scopes, prefixes) {\n  var cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  var cacheKey = prefixes.join();\n  var cached = cache.get(cacheKey);\n  if (!cached) {\n    var resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver: resolver,\n      subPrefixes: prefixes.filter(function (p) {\n        return !p.toLowerCase().includes('hover');\n      })\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nvar hasFunction = function hasFunction(value) {\n  return isObject(value) && Object.getOwnPropertyNames(value).reduce(function (acc, key) {\n    return acc || isFunction(value[key]);\n  }, false);\n};\nfunction needContext(proxy, names) {\n  var _descriptors2 = _descriptors(proxy),\n    isScriptable = _descriptors2.isScriptable,\n    isIndexable = _descriptors2.isIndexable;\n  var _iterator11 = _createForOfIteratorHelper(names),\n    _step11;\n  try {\n    for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n      var prop = _step11.value;\n      var scriptable = isScriptable(prop);\n      var indexable = isIndexable(prop);\n      var value = (indexable || scriptable) && proxy[prop];\n      if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator11.e(err);\n  } finally {\n    _iterator11.f();\n  }\n  return false;\n}\nvar version = \"3.7.0\";\nvar KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nvar instances = {};\nvar getChart = function getChart(key) {\n  var canvas = getCanvas(key);\n  return Object.values(instances).filter(function (c) {\n    return c.canvas === canvas;\n  }).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  var keys = Object.keys(obj);\n  for (var _i3 = 0, _keys = keys; _i3 < _keys.length; _i3++) {\n    var key = _keys[_i3];\n    var intKey = +key;\n    if (intKey >= start) {\n      var value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nvar Chart = /*#__PURE__*/function () {\n  function Chart(item, userConfig) {\n    var _this11 = this;\n    _classCallCheck(this, Chart);\n    var config = this.config = new Config(userConfig);\n    var initialCanvas = getCanvas(item);\n    var existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n    var options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    var context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    var canvas = context && context.canvas;\n    var height = canvas && canvas.height;\n    var width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(function (mode) {\n      return _this11.update(mode);\n    }, options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  _createClass(Chart, [{\n    key: \"aspectRatio\",\n    get: function get() {\n      var _this$options10 = this.options,\n        aspectRatio = _this$options10.aspectRatio,\n        maintainAspectRatio = _this$options10.maintainAspectRatio,\n        width = this.width,\n        height = this.height,\n        _aspectRatio = this._aspectRatio;\n      if (!isNullOrUndef(aspectRatio)) {\n        return aspectRatio;\n      }\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n      return height ? width / height : null;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this.config.data;\n    },\n    set: function set(data) {\n      this.config.data = data;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    },\n    set: function set(options) {\n      this.config.options = options;\n    }\n  }, {\n    key: \"_initialize\",\n    value: function _initialize() {\n      this.notifyPlugins('beforeInit');\n      if (this.options.responsive) {\n        this.resize();\n      } else {\n        retinaScale(this, this.options.devicePixelRatio);\n      }\n      this.bindEvents();\n      this.notifyPlugins('afterInit');\n      return this;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      clearCanvas(this.canvas, this.ctx);\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      animator.stop(this);\n      return this;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width: width,\n          height: height\n        };\n      }\n    }\n  }, {\n    key: \"_resize\",\n    value: function _resize(width, height) {\n      var options = this.options;\n      var canvas = this.canvas;\n      var aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n      var newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      var newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n      var mode = this.width ? 'resize' : 'attach';\n      this.width = newSize.width;\n      this.height = newSize.height;\n      this._aspectRatio = this.aspectRatio;\n      if (!retinaScale(this, newRatio, true)) {\n        return;\n      }\n      this.notifyPlugins('resize', {\n        size: newSize\n      });\n      callback(options.onResize, [this, newSize], this);\n      if (this.attached) {\n        if (this._doResize(mode)) {\n          this.render();\n        }\n      }\n    }\n  }, {\n    key: \"ensureScalesHaveIDs\",\n    value: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      each(scalesOptions, function (axisOptions, axisID) {\n        axisOptions.id = axisID;\n      });\n    }\n  }, {\n    key: \"buildOrUpdateScales\",\n    value: function buildOrUpdateScales() {\n      var _this12 = this;\n      var options = this.options;\n      var scaleOpts = options.scales;\n      var scales = this.scales;\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n      var items = [];\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(function (id) {\n          var scaleOptions = scaleOpts[id];\n          var axis = determineAxis(id, scaleOptions);\n          var isRadial = axis === 'r';\n          var isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n      each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var axis = determineAxis(id, scaleOptions);\n        var scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n        updated[id] = true;\n        var scale = null;\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          var scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            ctx: _this12.ctx,\n            chart: _this12\n          });\n          scales[scale.id] = scale;\n        }\n        scale.init(scaleOptions, options);\n      });\n      each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      each(scales, function (scale) {\n        layouts.configure(_this12, scale, scale.options);\n        layouts.addBox(_this12, scale);\n      });\n    }\n  }, {\n    key: \"_updateMetasets\",\n    value: function _updateMetasets() {\n      var metasets = this._metasets;\n      var numData = this.data.datasets.length;\n      var numMeta = metasets.length;\n      metasets.sort(function (a, b) {\n        return a.index - b.index;\n      });\n      if (numMeta > numData) {\n        for (var i = numData; i < numMeta; ++i) {\n          this._destroyDatasetMeta(i);\n        }\n        metasets.splice(numData, numMeta - numData);\n      }\n      this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n  }, {\n    key: \"_removeUnreferencedMetasets\",\n    value: function _removeUnreferencedMetasets() {\n      var _this13 = this;\n      var metasets = this._metasets,\n        datasets = this.data.datasets;\n      if (metasets.length > datasets.length) {\n        delete this._stacks;\n      }\n      metasets.forEach(function (meta, index) {\n        if (datasets.filter(function (x) {\n          return x === meta._dataset;\n        }).length === 0) {\n          _this13._destroyDatasetMeta(index);\n        }\n      });\n    }\n  }, {\n    key: \"buildOrUpdateControllers\",\n    value: function buildOrUpdateControllers() {\n      var newControllers = [];\n      var datasets = this.data.datasets;\n      var i, ilen;\n      this._removeUnreferencedMetasets();\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        var dataset = datasets[i];\n        var meta = this.getDatasetMeta(i);\n        var type = dataset.type || this.config.type;\n        if (meta.type && meta.type !== type) {\n          this._destroyDatasetMeta(i);\n          meta = this.getDatasetMeta(i);\n        }\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n        meta.order = dataset.order || 0;\n        meta.index = i;\n        meta.label = '' + dataset.label;\n        meta.visible = this.isDatasetVisible(i);\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = registry.getController(type);\n          var _defaults$datasets$ty = defaults.datasets[type],\n            datasetElementType = _defaults$datasets$ty.datasetElementType,\n            dataElementType = _defaults$datasets$ty.dataElementType;\n          Object.assign(ControllerClass.prototype, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(this, i);\n          newControllers.push(meta.controller);\n        }\n      }\n      this._updateMetasets();\n      return newControllers;\n    }\n  }, {\n    key: \"_resetElements\",\n    value: function _resetElements() {\n      var _this14 = this;\n      each(this.data.datasets, function (dataset, datasetIndex) {\n        _this14.getDatasetMeta(datasetIndex).controller.reset();\n      }, this);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._resetElements();\n      this.notifyPlugins('reset');\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var config = this.config;\n      config.update();\n      var options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n      var animsDisabled = this._animationsDisabled = !options.animation;\n      this._updateScales();\n      this._checkEventBindings();\n      this._updateHiddenIndices();\n      this._plugins.invalidate();\n      if (this.notifyPlugins('beforeUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var newControllers = this.buildOrUpdateControllers();\n      this.notifyPlugins('beforeElementsUpdate');\n      var minPadding = 0;\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n        var _this$getDatasetMeta = this.getDatasetMeta(i),\n          controller = _this$getDatasetMeta.controller;\n        var reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n      minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n      this._updateLayout(minPadding);\n      if (!animsDisabled) {\n        each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n      this._updateDatasets(mode);\n      this.notifyPlugins('afterUpdate', {\n        mode: mode\n      });\n      this._layers.sort(compare2Level('z', '_idx'));\n      var _active = this._active,\n        _lastEvent = this._lastEvent;\n      if (_lastEvent) {\n        this._eventHandler(_lastEvent, true);\n      } else if (_active.length) {\n        this._updateHoverStyles(_active, _active, true);\n      }\n      this.render();\n    }\n  }, {\n    key: \"_updateScales\",\n    value: function _updateScales() {\n      var _this15 = this;\n      each(this.scales, function (scale) {\n        layouts.removeBox(_this15, scale);\n      });\n      this.ensureScalesHaveIDs();\n      this.buildOrUpdateScales();\n    }\n  }, {\n    key: \"_checkEventBindings\",\n    value: function _checkEventBindings() {\n      var options = this.options;\n      var existingEvents = new Set(Object.keys(this._listeners));\n      var newEvents = new Set(options.events);\n      if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n        this.unbindEvents();\n        this.bindEvents();\n      }\n    }\n  }, {\n    key: \"_updateHiddenIndices\",\n    value: function _updateHiddenIndices() {\n      var _hiddenIndices = this._hiddenIndices;\n      var changes = this._getUniformDataChanges() || [];\n      var _iterator12 = _createForOfIteratorHelper(changes),\n        _step12;\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var _step12$value = _step12.value,\n            method = _step12$value.method,\n            start = _step12$value.start,\n            count = _step12$value.count;\n          var move = method === '_removeElements' ? -count : count;\n          moveNumericKeys(_hiddenIndices, start, move);\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n    }\n  }, {\n    key: \"_getUniformDataChanges\",\n    value: function _getUniformDataChanges() {\n      var _dataChanges = this._dataChanges;\n      if (!_dataChanges || !_dataChanges.length) {\n        return;\n      }\n      this._dataChanges = [];\n      var datasetCount = this.data.datasets.length;\n      var makeSet = function makeSet(idx) {\n        return new Set(_dataChanges.filter(function (c) {\n          return c[0] === idx;\n        }).map(function (c, i) {\n          return i + ',' + c.splice(1).join(',');\n        }));\n      };\n      var changeSet = makeSet(0);\n      for (var i = 1; i < datasetCount; i++) {\n        if (!setsEqual(changeSet, makeSet(i))) {\n          return;\n        }\n      }\n      return Array.from(changeSet).map(function (c) {\n        return c.split(',');\n      }).map(function (a) {\n        return {\n          method: a[1],\n          start: +a[2],\n          count: +a[3]\n        };\n      });\n    }\n  }, {\n    key: \"_updateLayout\",\n    value: function _updateLayout(minPadding) {\n      var _this16 = this;\n      if (this.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      layouts.update(this, this.width, this.height, minPadding);\n      var area = this.chartArea;\n      var noArea = area.width <= 0 || area.height <= 0;\n      this._layers = [];\n      each(this.boxes, function (box) {\n        var _this16$_layers;\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n        if (box.configure) {\n          box.configure();\n        }\n        (_this16$_layers = _this16._layers).push.apply(_this16$_layers, _toConsumableArray(box._layers()));\n      }, this);\n      this._layers.forEach(function (item, index) {\n        item._idx = index;\n      });\n      this.notifyPlugins('afterLayout');\n    }\n  }, {\n    key: \"_updateDatasets\",\n    value: function _updateDatasets(mode) {\n      if (this.notifyPlugins('beforeDatasetsUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this.getDatasetMeta(i).controller.configure();\n      }\n      for (var _i4 = 0, _ilen = this.data.datasets.length; _i4 < _ilen; ++_i4) {\n        this._updateDataset(_i4, isFunction(mode) ? mode({\n          datasetIndex: _i4\n        }) : mode);\n      }\n      this.notifyPlugins('afterDatasetsUpdate', {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"_updateDataset\",\n    value: function _updateDataset(index, mode) {\n      var meta = this.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        mode: mode,\n        cancelable: true\n      };\n      if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n      meta.controller._update(mode);\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetUpdate', args);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      if (animator.has(this)) {\n        if (this.attached && !animator.running(this)) {\n          animator.start(this);\n        }\n      } else {\n        this.draw();\n        onAnimationsComplete({\n          chart: this\n        });\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var i;\n      if (this._resizeBeforeDraw) {\n        var _this$_resizeBeforeDr = this._resizeBeforeDraw,\n          width = _this$_resizeBeforeDr.width,\n          height = _this$_resizeBeforeDr.height;\n        this._resize(width, height);\n        this._resizeBeforeDraw = null;\n      }\n      this.clear();\n      if (this.width <= 0 || this.height <= 0) {\n        return;\n      }\n      if (this.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var layers = this._layers;\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n      this._drawDatasets();\n      for (; i < layers.length; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n      this.notifyPlugins('afterDraw');\n    }\n  }, {\n    key: \"_getSortedDatasetMetas\",\n    value: function _getSortedDatasetMetas(filterVisible) {\n      var metasets = this._sortedMetasets;\n      var result = [];\n      var i, ilen;\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        var meta = metasets[i];\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"getSortedVisibleDatasetMetas\",\n    value: function getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n  }, {\n    key: \"_drawDatasets\",\n    value: function _drawDatasets() {\n      if (this.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var metasets = this.getSortedVisibleDatasetMetas();\n      for (var i = metasets.length - 1; i >= 0; --i) {\n        this._drawDataset(metasets[i]);\n      }\n      this.notifyPlugins('afterDatasetsDraw');\n    }\n  }, {\n    key: \"_drawDataset\",\n    value: function _drawDataset(meta) {\n      var ctx = this.ctx;\n      var clip = meta._clip;\n      var useClip = !clip.disabled;\n      var area = this.chartArea;\n      var args = {\n        meta: meta,\n        index: meta.index,\n        cancelable: true\n      };\n      if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n      if (useClip) {\n        clipArea(ctx, {\n          left: clip.left === false ? 0 : area.left - clip.left,\n          right: clip.right === false ? this.width : area.right + clip.right,\n          top: clip.top === false ? 0 : area.top - clip.top,\n          bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n        });\n      }\n      meta.controller.draw();\n      if (useClip) {\n        unclipArea(ctx);\n      }\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetDraw', args);\n    }\n  }, {\n    key: \"getElementsAtEventForMode\",\n    value: function getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      var method = Interaction.modes[mode];\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n      return [];\n    }\n  }, {\n    key: \"getDatasetMeta\",\n    value: function getDatasetMeta(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      var metasets = this._metasets;\n      var meta = metasets.filter(function (x) {\n        return x && x._dataset === dataset;\n      }).pop();\n      if (!meta) {\n        meta = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n        metasets.push(meta);\n      }\n      return meta;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = createContext(null, {\n        chart: this,\n        type: 'chart'\n      }));\n    }\n  }, {\n    key: \"getVisibleDatasetCount\",\n    value: function getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n  }, {\n    key: \"isDatasetVisible\",\n    value: function isDatasetVisible(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      if (!dataset) {\n        return false;\n      }\n      var meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n  }, {\n    key: \"setDatasetVisibility\",\n    value: function setDatasetVisibility(datasetIndex, visible) {\n      var meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n  }, {\n    key: \"toggleDataVisibility\",\n    value: function toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"getDataVisibility\",\n    value: function getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"_updateVisibility\",\n    value: function _updateVisibility(datasetIndex, dataIndex, visible) {\n      var mode = visible ? 'show' : 'hide';\n      var meta = this.getDatasetMeta(datasetIndex);\n      var anims = meta.controller._resolveAnimations(undefined, mode);\n      if (defined(dataIndex)) {\n        meta.data[dataIndex].hidden = !visible;\n        this.update();\n      } else {\n        this.setDatasetVisibility(datasetIndex, visible);\n        anims.update(meta, {\n          visible: visible\n        });\n        this.update(function (ctx) {\n          return ctx.datasetIndex === datasetIndex ? mode : undefined;\n        });\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n  }, {\n    key: \"show\",\n    value: function show(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n  }, {\n    key: \"_destroyDatasetMeta\",\n    value: function _destroyDatasetMeta(datasetIndex) {\n      var meta = this._metasets[datasetIndex];\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n      }\n      delete this._metasets[datasetIndex];\n    }\n  }, {\n    key: \"_stop\",\n    value: function _stop() {\n      var i, ilen;\n      this.stop();\n      animator.remove(this);\n      for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.notifyPlugins('beforeDestroy');\n      var canvas = this.canvas,\n        ctx = this.ctx;\n      this._stop();\n      this.config.clearCache();\n      if (canvas) {\n        this.unbindEvents();\n        clearCanvas(canvas, ctx);\n        this.platform.releaseContext(ctx);\n        this.canvas = null;\n        this.ctx = null;\n      }\n      this.notifyPlugins('destroy');\n      delete instances[this.id];\n      this.notifyPlugins('afterDestroy');\n    }\n  }, {\n    key: \"toBase64Image\",\n    value: function toBase64Image() {\n      var _this$canvas;\n      return (_this$canvas = this.canvas).toDataURL.apply(_this$canvas, arguments);\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      this.bindUserEvents();\n      if (this.options.responsive) {\n        this.bindResponsiveEvents();\n      } else {\n        this.attached = true;\n      }\n    }\n  }, {\n    key: \"bindUserEvents\",\n    value: function bindUserEvents() {\n      var _this17 = this;\n      var listeners = this._listeners;\n      var platform = this.platform;\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this17, type, listener);\n        listeners[type] = listener;\n      };\n      var listener = function listener(e, x, y) {\n        e.offsetX = x;\n        e.offsetY = y;\n        _this17._eventHandler(e);\n      };\n      each(this.options.events, function (type) {\n        return _add(type, listener);\n      });\n    }\n  }, {\n    key: \"bindResponsiveEvents\",\n    value: function bindResponsiveEvents() {\n      var _this18 = this;\n      if (!this._responsiveListeners) {\n        this._responsiveListeners = {};\n      }\n      var listeners = this._responsiveListeners;\n      var platform = this.platform;\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this18, type, listener);\n        listeners[type] = listener;\n      };\n      var _remove = function _remove(type, listener) {\n        if (listeners[type]) {\n          platform.removeEventListener(_this18, type, listener);\n          delete listeners[type];\n        }\n      };\n      var listener = function listener(width, height) {\n        if (_this18.canvas) {\n          _this18.resize(width, height);\n        }\n      };\n      var detached;\n      var attached = function attached() {\n        _remove('attach', attached);\n        _this18.attached = true;\n        _this18.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = function detached() {\n        _this18.attached = false;\n        _remove('resize', listener);\n        _this18._stop();\n        _this18._resize(0, 0);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(this.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var _this19 = this;\n      each(this._listeners, function (listener, type) {\n        _this19.platform.removeEventListener(_this19, type, listener);\n      });\n      this._listeners = {};\n      each(this._responsiveListeners, function (listener, type) {\n        _this19.platform.removeEventListener(_this19, type, listener);\n      });\n      this._responsiveListeners = undefined;\n    }\n  }, {\n    key: \"updateHoverStyle\",\n    value: function updateHoverStyle(items, mode, enabled) {\n      var prefix = enabled ? 'set' : 'remove';\n      var meta, item, i, ilen;\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        var controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements) {\n      var _this20 = this;\n      var lastActive = this._active || [];\n      var active = activeElements.map(function (_ref2) {\n        var datasetIndex = _ref2.datasetIndex,\n          index = _ref2.index;\n        var meta = _this20.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(active, lastActive);\n      if (changed) {\n        this._active = active;\n        this._lastEvent = null;\n        this._updateHoverStyles(active, lastActive);\n      }\n    }\n  }, {\n    key: \"notifyPlugins\",\n    value: function notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n  }, {\n    key: \"_updateHoverStyles\",\n    value: function _updateHoverStyles(active, lastActive, replay) {\n      var hoverOptions = this.options.hover;\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.datasetIndex === y.datasetIndex && x.index === y.index;\n          });\n        });\n      };\n      var deactivated = diff(lastActive, active);\n      var activated = replay ? active : diff(active, lastActive);\n      if (deactivated.length) {\n        this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n      if (activated.length && hoverOptions.mode) {\n        this.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n  }, {\n    key: \"_eventHandler\",\n    value: function _eventHandler(e, replay) {\n      var _this21 = this;\n      var args = {\n        event: e,\n        replay: replay,\n        cancelable: true,\n        inChartArea: _isPointInArea(e, this.chartArea, this._minPadding)\n      };\n      var eventFilter = function eventFilter(plugin) {\n        return (plugin.options.events || _this21.options.events).includes(e.native.type);\n      };\n      if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n      var changed = this._handleEvent(e, replay, args.inChartArea);\n      args.cancelable = false;\n      this.notifyPlugins('afterEvent', args, eventFilter);\n      if (changed || args.changed) {\n        this.render();\n      }\n      return this;\n    }\n  }, {\n    key: \"_handleEvent\",\n    value: function _handleEvent(e, replay, inChartArea) {\n      var _this$_active = this._active,\n        lastActive = _this$_active === void 0 ? [] : _this$_active,\n        options = this.options;\n      var useFinalPosition = replay;\n      var active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n      var isClick = _isClickEvent(e);\n      var lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n      if (inChartArea) {\n        this._lastEvent = null;\n        callback(options.onHover, [e, active, this], this);\n        if (isClick) {\n          callback(options.onClick, [e, active, this], this);\n        }\n      }\n      var changed = !_elementsEqual(active, lastActive);\n      if (changed || replay) {\n        this._active = active;\n        this._updateHoverStyles(active, lastActive, replay);\n      }\n      this._lastEvent = lastEvent;\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n      if (e.type === 'mouseout') {\n        return [];\n      }\n      if (!inChartArea) {\n        return lastActive;\n      }\n      var hoverOptions = this.options.hover;\n      return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n  }]);\n  return Chart;\n}();\nvar invalidatePlugins = function invalidatePlugins() {\n  return each(Chart.instances, function (chart) {\n    return chart._plugins.invalidate();\n  });\n};\nvar enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable: enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable: enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable: enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable: enumerable,\n    value: registry\n  },\n  version: {\n    enumerable: enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable: enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.add.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.remove.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }\n});\nfunction clipArc(ctx, element, endAngle) {\n  var startAngle = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    x = element.x,\n    y = element.y,\n    outerRadius = element.outerRadius,\n    innerRadius = element.innerRadius;\n  var angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  var o = toRadiusCorners(arc.options.borderRadius);\n  var halfThickness = (outerRadius - innerRadius) / 2;\n  var innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  var computeOuterLimit = function computeOuterLimit(val) {\n    var outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  var x = element.x,\n    y = element.y,\n    start = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    innerR = element.innerRadius;\n  var outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  var innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  var spacingOffset = 0;\n  var alpha = end - start;\n  if (spacing) {\n    var noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    var noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    var avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    var adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  var beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  var angleOffset = (alpha - beta) / 2;\n  var startAngle = start + angleOffset + spacingOffset;\n  var endAngle = end - angleOffset - spacingOffset;\n  var _parseBorderRadius$ = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle),\n    outerStart = _parseBorderRadius$.outerStart,\n    outerEnd = _parseBorderRadius$.outerEnd,\n    innerStart = _parseBorderRadius$.innerStart,\n    innerEnd = _parseBorderRadius$.innerEnd;\n  var outerStartAdjustedRadius = outerRadius - outerStart;\n  var outerEndAdjustedRadius = outerRadius - outerEnd;\n  var outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  var outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  var innerStartAdjustedRadius = innerRadius + innerStart;\n  var innerEndAdjustedRadius = innerRadius + innerEnd;\n  var innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  var innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    var pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  var p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    var _pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(_pCenter.x, _pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n  if (innerStart > 0) {\n    var _pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(_pCenter2.x, _pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  var p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    var _pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(_pCenter3.x, _pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  var fullCircles = element.fullCircles,\n    startAngle = element.startAngle,\n    circumference = element.circumference;\n  var endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (var i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  var x = element.x,\n    y = element.y,\n    startAngle = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    fullCircles = element.fullCircles;\n  var outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  var innerRadius = element.innerRadius + pixelMargin;\n  var i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  var options = element.options;\n  var borderWidth = options.borderWidth,\n    borderJoinStyle = options.borderJoinStyle;\n  var inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nvar ArcElement = /*#__PURE__*/function (_Element2) {\n  _inherits(ArcElement, _Element2);\n  var _super12 = _createSuper(ArcElement);\n  function ArcElement(cfg) {\n    var _this22;\n    _classCallCheck(this, ArcElement);\n    _this22 = _super12.call(this);\n    _this22.options = undefined;\n    _this22.circumference = undefined;\n    _this22.startAngle = undefined;\n    _this22.endAngle = undefined;\n    _this22.innerRadius = undefined;\n    _this22.outerRadius = undefined;\n    _this22.pixelMargin = 0;\n    _this22.fullCircles = 0;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this22), cfg);\n    }\n    return _this22;\n  }\n  _createClass(ArcElement, [{\n    key: \"inRange\",\n    value: function inRange(chartX, chartY, useFinalPosition) {\n      var point = this.getProps(['x', 'y'], useFinalPosition);\n      var _getAngleFromPoint2 = getAngleFromPoint(point, {\n          x: chartX,\n          y: chartY\n        }),\n        angle = _getAngleFromPoint2.angle,\n        distance = _getAngleFromPoint2.distance;\n      var _this$getProps2 = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n        startAngle = _this$getProps2.startAngle,\n        endAngle = _this$getProps2.endAngle,\n        innerRadius = _this$getProps2.innerRadius,\n        outerRadius = _this$getProps2.outerRadius,\n        circumference = _this$getProps2.circumference;\n      var rAdjust = this.options.spacing / 2;\n      var _circumference = valueOrDefault(circumference, endAngle - startAngle);\n      var betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n      var withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n      return betweenAngles && withinRadius;\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps3 = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n        x = _this$getProps3.x,\n        y = _this$getProps3.y,\n        startAngle = _this$getProps3.startAngle,\n        endAngle = _this$getProps3.endAngle,\n        innerRadius = _this$getProps3.innerRadius,\n        outerRadius = _this$getProps3.outerRadius;\n      var _this$options11 = this.options,\n        offset = _this$options11.offset,\n        spacing = _this$options11.spacing;\n      var halfAngle = (startAngle + endAngle) / 2;\n      var halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n  }, {\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options,\n        circumference = this.circumference;\n      var offset = (options.offset || 0) / 2;\n      var spacing = (options.spacing || 0) / 2;\n      this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n      if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n        return;\n      }\n      ctx.save();\n      var radiusOffset = 0;\n      if (offset) {\n        radiusOffset = offset / 2;\n        var halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n        if (this.circumference >= PI) {\n          radiusOffset = offset;\n        }\n      }\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      var endAngle = drawArc(ctx, this, radiusOffset, spacing);\n      drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n      ctx.restore();\n    }\n  }]);\n  return ArcElement;\n}(Element);\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\nfunction setStyle(ctx, options) {\n  var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var count = points.length;\n  var _params$start = params.start,\n    paramsStart = _params$start === void 0 ? 0 : _params$start,\n    _params$end = params.end,\n    paramsEnd = _params$end === void 0 ? count - 1 : _params$end;\n  var segmentStart = segment.start,\n    segmentEnd = segment.end;\n  var start = Math.max(paramsStart, segmentStart);\n  var end = Math.min(paramsEnd, segmentEnd);\n  var outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count: count,\n    start: start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  var points = line.points,\n    options = line.options;\n  var _pathVars = pathVars(points, segment, params),\n    count = _pathVars.count,\n    start = _pathVars.start,\n    loop = _pathVars.loop,\n    ilen = _pathVars.ilen;\n  var lineMethod = getLineMethod(options);\n  var _ref3 = params || {},\n    _ref3$move = _ref3.move,\n    move = _ref3$move === void 0 ? true : _ref3$move,\n    reverse = _ref3.reverse;\n  var i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  var points = line.points;\n  var _pathVars2 = pathVars(points, segment, params),\n    count = _pathVars2.count,\n    start = _pathVars2.start,\n    ilen = _pathVars2.ilen;\n  var _ref4 = params || {},\n    _ref4$move = _ref4.move,\n    move = _ref4$move === void 0 ? true : _ref4$move,\n    reverse = _ref4.reverse;\n  var avgX = 0;\n  var countX = 0;\n  var i, point, prevX, minY, maxY, lastY;\n  var pointIndex = function pointIndex(index) {\n    return (start + (reverse ? ilen - index : index)) % count;\n  };\n  var drawX = function drawX() {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    var x = point.x;\n    var y = point.y;\n    var truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  var opts = line.options;\n  var borderDash = opts.borderDash && opts.borderDash.length;\n  var useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  var path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  var segments = line.segments,\n    options = line.options;\n  var segmentMethod = _getSegmentMethod(line);\n  var _iterator13 = _createForOfIteratorHelper(segments),\n    _step13;\n  try {\n    for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n      var segment = _step13.value;\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n      if (segmentMethod(ctx, line, segment, {\n        start: start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n      ctx.stroke();\n    }\n  } catch (err) {\n    _iterator13.e(err);\n  } finally {\n    _iterator13.f();\n  }\n}\nvar usePath2D = typeof Path2D === 'function';\nfunction _draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nvar LineElement = /*#__PURE__*/function (_Element3) {\n  _inherits(LineElement, _Element3);\n  var _super13 = _createSuper(LineElement);\n  function LineElement(cfg) {\n    var _this23;\n    _classCallCheck(this, LineElement);\n    _this23 = _super13.call(this);\n    _this23.animated = true;\n    _this23.options = undefined;\n    _this23._chart = undefined;\n    _this23._loop = undefined;\n    _this23._fullLoop = undefined;\n    _this23._path = undefined;\n    _this23._points = undefined;\n    _this23._segments = undefined;\n    _this23._decimated = false;\n    _this23._pointsUpdated = false;\n    _this23._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this23), cfg);\n    }\n    return _this23;\n  }\n  _createClass(LineElement, [{\n    key: \"updateControlPoints\",\n    value: function updateControlPoints(chartArea, indexAxis) {\n      var options = this.options;\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n        var loop = options.spanGaps ? this._loop : this._fullLoop;\n        _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n        this._pointsUpdated = true;\n      }\n    }\n  }, {\n    key: \"points\",\n    get: function get() {\n      return this._points;\n    },\n    set: function set(points) {\n      this._points = points;\n      delete this._segments;\n      delete this._path;\n      this._pointsUpdated = false;\n    }\n  }, {\n    key: \"segments\",\n    get: function get() {\n      return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      var segments = this.segments;\n      var points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      var segments = this.segments;\n      var points = this.points;\n      var count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point, property) {\n      var options = this.options;\n      var value = point[property];\n      var points = this.points;\n      var segments = _boundSegments(this, {\n        property: property,\n        start: value,\n        end: value\n      });\n      if (!segments.length) {\n        return;\n      }\n      var result = [];\n      var _interpolate = _getInterpolationMethod(options);\n      var i, ilen;\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        var _segments$i = segments[i],\n          start = _segments$i.start,\n          end = _segments$i.end;\n        var p1 = points[start];\n        var p2 = points[end];\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n        var t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n        var interpolated = _interpolate(p1, p2, t, options.stepped);\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n      return result.length === 1 ? result[0] : result;\n    }\n  }, {\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, segment, params) {\n      var segmentMethod = _getSegmentMethod(this);\n      return segmentMethod(ctx, this, segment, params);\n    }\n  }, {\n    key: \"path\",\n    value: function path(ctx, start, count) {\n      var segments = this.segments;\n      var segmentMethod = _getSegmentMethod(this);\n      var loop = this._loop;\n      start = start || 0;\n      count = count || this.points.length - start;\n      var _iterator14 = _createForOfIteratorHelper(segments),\n        _step14;\n      try {\n        for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n          var segment = _step14.value;\n          loop &= segmentMethod(ctx, this, segment, {\n            start: start,\n            end: start + count - 1\n          });\n        }\n      } catch (err) {\n        _iterator14.e(err);\n      } finally {\n        _iterator14.f();\n      }\n      return !!loop;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, chartArea, start, count) {\n      var options = this.options || {};\n      var points = this.points || [];\n      if (points.length && options.borderWidth) {\n        ctx.save();\n        _draw(ctx, this, start, count);\n        ctx.restore();\n      }\n      if (this.animated) {\n        this._pointsUpdated = false;\n        this._path = undefined;\n      }\n    }\n  }]);\n  return LineElement;\n}(Element);\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'fill';\n  }\n};\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  var options = el.options;\n  var _el$getProps = el.getProps([axis], useFinalPosition),\n    value = _el$getProps[axis];\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nvar PointElement = /*#__PURE__*/function (_Element4) {\n  _inherits(PointElement, _Element4);\n  var _super14 = _createSuper(PointElement);\n  function PointElement(cfg) {\n    var _this24;\n    _classCallCheck(this, PointElement);\n    _this24 = _super14.call(this);\n    _this24.options = undefined;\n    _this24.parsed = undefined;\n    _this24.skip = undefined;\n    _this24.stop = undefined;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this24), cfg);\n    }\n    return _this24;\n  }\n  _createClass(PointElement, [{\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      var options = this.options;\n      var _this$getProps4 = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps4.x,\n        y = _this$getProps4.y;\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps5 = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps5.x,\n        y = _this$getProps5.y;\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"size\",\n    value: function size(options) {\n      options = options || this.options || {};\n      var radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      var borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, area) {\n      var options = this.options;\n      if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n        return;\n      }\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      drawPoint(ctx, options, this.x, this.y);\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      var options = this.options || {};\n      return options.radius + options.hitRadius;\n    }\n  }]);\n  return PointElement;\n}(Element);\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nfunction getBarBounds(bar, useFinalPosition) {\n  var _bar$getProps = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition),\n    x = _bar$getProps.x,\n    y = _bar$getProps.y,\n    base = _bar$getProps.base,\n    width = _bar$getProps.width,\n    height = _bar$getProps.height;\n  var left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  };\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  var value = bar.options.borderWidth;\n  var skip = bar.borderSkipped;\n  var o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  var _bar$getProps2 = bar.getProps(['enableBorderRadius']),\n    enableBorderRadius = _bar$getProps2.enableBorderRadius;\n  var value = bar.options.borderRadius;\n  var o = toTRBLCorners(value);\n  var maxR = Math.min(maxW, maxH);\n  var skip = bar.borderSkipped;\n  var enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  var bounds = getBarBounds(bar);\n  var width = bounds.right - bounds.left;\n  var height = bounds.bottom - bounds.top;\n  var border = parseBorderWidth(bar, width / 2, height / 2);\n  var radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius: radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\nfunction _inRange(bar, x, y, useFinalPosition) {\n  var skipX = x === null;\n  var skipY = y === null;\n  var skipBoth = skipX && skipY;\n  var bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount) {\n  var refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var x = rect.x !== refRect.x ? -amount : 0;\n  var y = rect.y !== refRect.y ? -amount : 0;\n  var w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  var h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nvar BarElement = /*#__PURE__*/function (_Element5) {\n  _inherits(BarElement, _Element5);\n  var _super15 = _createSuper(BarElement);\n  function BarElement(cfg) {\n    var _this25;\n    _classCallCheck(this, BarElement);\n    _this25 = _super15.call(this);\n    _this25.options = undefined;\n    _this25.horizontal = undefined;\n    _this25.base = undefined;\n    _this25.width = undefined;\n    _this25.height = undefined;\n    _this25.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this25), cfg);\n    }\n    return _this25;\n  }\n  _createClass(BarElement, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      var inflateAmount = this.inflateAmount,\n        _this$options12 = this.options,\n        borderColor = _this$options12.borderColor,\n        backgroundColor = _this$options12.backgroundColor;\n      var _boundingRects = boundingRects(this),\n        inner = _boundingRects.inner,\n        outer = _boundingRects.outer;\n      var addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n      ctx.save();\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n        ctx.clip();\n        addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n        ctx.fillStyle = borderColor;\n        ctx.fill('evenodd');\n      }\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(inner, inflateAmount));\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }, {\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      return _inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return _inRange(this, mouseX, null, useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return _inRange(this, null, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps6 = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition),\n        x = _this$getProps6.x,\n        y = _this$getProps6.y,\n        base = _this$getProps6.base,\n        horizontal = _this$getProps6.horizontal;\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n  }]);\n  return BarElement;\n}(Element);\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  var samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  var decimated = [];\n  var bucketWidth = (count - 2) / (samples - 2);\n  var sampledIndex = 0;\n  var endIndex = start + count - 1;\n  var a = start;\n  var i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    var avgX = 0;\n    var avgY = 0;\n    var j = void 0;\n    var avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    var avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    var rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    var rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    var _data$a = data[a],\n      pointAx = _data$a.x,\n      pointAy = _data$a.y;\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  var avgX = 0;\n  var countX = 0;\n  var i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  var decimated = [];\n  var endIndex = start + count - 1;\n  var xMin = data[start].x;\n  var xMax = data[endIndex].x;\n  var dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    var truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      var lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        var intermediateIndex1 = Math.min(minIndex, maxIndex);\n        var intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex1]), {}, {\n            x: avgX\n          }));\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex2]), {}, {\n            x: avgX\n          }));\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    var data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(function (dataset) {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  var pointCount = points.length;\n  var start = 0;\n  var count;\n  var iScale = meta.iScale;\n  var _iScale$getUserBounds2 = iScale.getUserBounds(),\n    min = _iScale$getUserBounds2.min,\n    max = _iScale$getUserBounds2.max,\n    minDefined = _iScale$getUserBounds2.minDefined,\n    maxDefined = _iScale$getUserBounds2.maxDefined;\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {\n    start: start,\n    count: count\n  };\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: function beforeElementsUpdate(chart, args, options) {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    var availableWidth = chart.width;\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      var _data = dataset._data,\n        indexAxis = dataset.indexAxis;\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      var xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      var _getStartAndCountOfVi2 = getStartAndCountOfVisiblePointsSimplified(meta, data),\n        start = _getStartAndCountOfVi2.start,\n        count = _getStartAndCountOfVi2.count;\n      var threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function get() {\n            return this._decimated;\n          },\n          set: function set(d) {\n            this._data = d;\n          }\n        });\n      }\n      var decimated;\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n        default:\n          throw new Error(\"Unsupported decimation algorithm '\".concat(options.algorithm, \"'\"));\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy: function destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\nfunction getLineByIndex(chart, index) {\n  var meta = chart.getDatasetMeta(index);\n  var visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  var options = line.options;\n  var fillOption = options.fill;\n  var fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  var fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  var target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  var _source$scale = source.scale,\n    scale = _source$scale === void 0 ? {} : _source$scale,\n    fill = source.fill;\n  var target = null;\n  var horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nvar simpleArc = /*#__PURE__*/function () {\n  function simpleArc(opts) {\n    _classCallCheck(this, simpleArc);\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  _createClass(simpleArc, [{\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, bounds, opts) {\n      var x = this.x,\n        y = this.y,\n        radius = this.radius;\n      bounds = bounds || {\n        start: 0,\n        end: TAU\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point) {\n      var x = this.x,\n        y = this.y,\n        radius = this.radius;\n      var angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle: angle\n      };\n    }\n  }]);\n  return simpleArc;\n}();\nfunction computeCircularBoundary(source) {\n  var scale = source.scale,\n    fill = source.fill;\n  var options = scale.options;\n  var length = scale.getLabels().length;\n  var target = [];\n  var start = options.reverse ? scale.max : scale.min;\n  var end = options.reverse ? scale.min : scale.max;\n  var i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  var scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    var point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  var _ref5 = boundary || {},\n    _ref5$x = _ref5.x,\n    x = _ref5$x === void 0 ? null : _ref5$x,\n    _ref5$y = _ref5.y,\n    y = _ref5$y === void 0 ? null : _ref5$y;\n  var linePoints = line.points;\n  var points = [];\n  line.segments.forEach(function (_ref6) {\n    var start = _ref6.start,\n      end = _ref6.end;\n    end = findSegmentEnd(start, end, linePoints);\n    var first = linePoints[start];\n    var last = linePoints[end];\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y: y\n      });\n      points.push({\n        x: last.x,\n        y: y\n      });\n    } else if (x !== null) {\n      points.push({\n        x: x,\n        y: first.y\n      });\n      points.push({\n        x: x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  var scale = source.scale,\n    index = source.index,\n    line = source.line;\n  var points = [];\n  var segments = line.segments;\n  var sourcePoints = line.points;\n  var linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    for (var j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({\n    points: points,\n    options: {}\n  });\n}\nfunction getLinesBelow(scale, index) {\n  var below = [];\n  var metas = scale.getMatchingVisibleMetas('line');\n  for (var i = 0; i < metas.length; i++) {\n    var meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  var postponed = [];\n  for (var j = 0; j < linesBelow.length; j++) {\n    var line = linesBelow[j];\n    var _findPoint = findPoint(line, sourcePoint, 'x'),\n      first = _findPoint.first,\n      last = _findPoint.last,\n      point = _findPoint.point;\n    if (!point || first && last) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push.apply(points, postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  var point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  var pointValue = point[property];\n  var segments = line.segments;\n  var linePoints = line.points;\n  var first = false;\n  var last = false;\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    var firstValue = linePoints[segment.start][property];\n    var lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {\n    first: first,\n    last: last,\n    point: point\n  };\n}\nfunction getTarget(source) {\n  var chart = source.chart,\n    fill = source.fill,\n    line = source.line;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  var boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  var points = [];\n  var _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points: points,\n    options: {\n      tension: 0\n    },\n    _loop: _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  var start = first[property];\n  var end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {\n    property: property,\n    start: start,\n    end: end\n  };\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  var segments = line.segments;\n  var points = line.points;\n  var tpoints = target.points;\n  var parts = [];\n  var _iterator15 = _createForOfIteratorHelper(segments),\n    _step15;\n  try {\n    for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n      var segment = _step15.value;\n      var start = segment.start,\n        end = segment.end;\n      end = findSegmentEnd(start, end, points);\n      var bounds = getBounds(property, points[start], points[end], segment.loop);\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[start],\n          end: points[end]\n        });\n        continue;\n      }\n      var targetSegments = _boundSegments(target, bounds);\n      var _iterator16 = _createForOfIteratorHelper(targetSegments),\n        _step16;\n      try {\n        for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n          var tgt = _step16.value;\n          var subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n          var fillSources = _boundSegment(segment, points, subBounds);\n          var _iterator17 = _createForOfIteratorHelper(fillSources),\n            _step17;\n          try {\n            for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n              var fillSource = _step17.value;\n              parts.push({\n                source: fillSource,\n                target: tgt,\n                start: _defineProperty({}, property, _getEdge(bounds, subBounds, 'start', Math.max)),\n                end: _defineProperty({}, property, _getEdge(bounds, subBounds, 'end', Math.min))\n              });\n            }\n          } catch (err) {\n            _iterator17.e(err);\n          } finally {\n            _iterator17.f();\n          }\n        }\n      } catch (err) {\n        _iterator16.e(err);\n      } finally {\n        _iterator16.f();\n      }\n    }\n  } catch (err) {\n    _iterator15.e(err);\n  } finally {\n    _iterator15.f();\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  var _scale$chart$chartAre = scale.chart.chartArea,\n    top = _scale$chart$chartAre.top,\n    bottom = _scale$chart$chartAre.bottom;\n  var _ref7 = bounds || {},\n    property = _ref7.property,\n    start = _ref7.start,\n    end = _ref7.end;\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  var interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  var line = cfg.line,\n    target = cfg.target,\n    property = cfg.property,\n    color = cfg.color,\n    scale = cfg.scale;\n  var segments = _segments(line, target, property);\n  var _iterator18 = _createForOfIteratorHelper(segments),\n    _step18;\n  try {\n    for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n      var _step18$value = _step18.value,\n        src = _step18$value.source,\n        tgt = _step18$value.target,\n        start = _step18$value.start,\n        end = _step18$value.end;\n      var _src$style = src.style,\n        _src$style2 = _src$style === void 0 ? {} : _src$style,\n        _src$style2$backgroun = _src$style2.backgroundColor,\n        backgroundColor = _src$style2$backgroun === void 0 ? color : _src$style2$backgroun;\n      var notShape = target !== true;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n      ctx.beginPath();\n      var lineLoop = !!line.pathSegment(ctx, src);\n      var loop = void 0;\n      if (notShape) {\n        if (lineLoop) {\n          ctx.closePath();\n        } else {\n          interpolatedLineTo(ctx, target, end, property);\n        }\n        var targetLoop = !!target.pathSegment(ctx, tgt, {\n          move: lineLoop,\n          reverse: true\n        });\n        loop = lineLoop && targetLoop;\n        if (!loop) {\n          interpolatedLineTo(ctx, target, start, property);\n        }\n      }\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  } catch (err) {\n    _iterator18.e(err);\n  } finally {\n    _iterator18.f();\n  }\n}\nfunction doFill(ctx, cfg) {\n  var line = cfg.line,\n    target = cfg.target,\n    above = cfg.above,\n    below = cfg.below,\n    area = cfg.area,\n    scale = cfg.scale;\n  var property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {\n      line: line,\n      target: target,\n      color: above,\n      scale: scale,\n      property: property\n    });\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {\n    line: line,\n    target: target,\n    color: below,\n    scale: scale,\n    property: property\n  });\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  var target = getTarget(source);\n  var line = source.line,\n    scale = source.scale,\n    axis = source.axis;\n  var lineOpts = line.options;\n  var fillOption = lineOpts.fill;\n  var color = lineOpts.backgroundColor;\n  var _ref8 = fillOption || {},\n    _ref8$above = _ref8.above,\n    above = _ref8$above === void 0 ? color : _ref8$above,\n    _ref8$below = _ref8.below,\n    below = _ref8$below === void 0 ? color : _ref8$below;\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line: line,\n      target: target,\n      above: above,\n      below: below,\n      area: area,\n      scale: scale,\n      axis: axis\n    });\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, _args, options) {\n    var count = (chart.data.datasets || []).length;\n    var sources = [];\n    var meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart: chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line: line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw: function beforeDraw(chart, _args, options) {\n    var draw = options.drawTime === 'beforeDraw';\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    var area = chart.chartArea;\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw: function beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args, options) {\n    var source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\nvar getBoxSize = function getBoxSize(labelOpts, fontSize) {\n  var _labelOpts$boxHeight = labelOpts.boxHeight,\n    boxHeight = _labelOpts$boxHeight === void 0 ? fontSize : _labelOpts$boxHeight,\n    _labelOpts$boxWidth = labelOpts.boxWidth,\n    boxWidth = _labelOpts$boxWidth === void 0 ? fontSize : _labelOpts$boxWidth;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth: boxWidth,\n    boxHeight: boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nvar itemsEqual = function itemsEqual(a, b) {\n  return a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n};\nvar Legend = /*#__PURE__*/function (_Element6) {\n  _inherits(Legend, _Element6);\n  var _super16 = _createSuper(Legend);\n  function Legend(config) {\n    var _this26;\n    _classCallCheck(this, Legend);\n    _this26 = _super16.call(this);\n    _this26._added = false;\n    _this26.legendHitBoxes = [];\n    _this26._hoveredItem = null;\n    _this26.doughnutMode = false;\n    _this26.chart = config.chart;\n    _this26.options = config.options;\n    _this26.ctx = config.ctx;\n    _this26.legendItems = undefined;\n    _this26.columnSizes = undefined;\n    _this26.lineWidths = undefined;\n    _this26.maxHeight = undefined;\n    _this26.maxWidth = undefined;\n    _this26.top = undefined;\n    _this26.bottom = undefined;\n    _this26.left = undefined;\n    _this26.right = undefined;\n    _this26.height = undefined;\n    _this26.width = undefined;\n    _this26._margins = undefined;\n    _this26.position = undefined;\n    _this26.weight = undefined;\n    _this26.fullSize = undefined;\n    return _this26;\n  }\n  _createClass(Legend, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins;\n      this.setDimensions();\n      this.buildLabels();\n      this.fit();\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = this._margins.left;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = this._margins.top;\n        this.bottom = this.height;\n      }\n    }\n  }, {\n    key: \"buildLabels\",\n    value: function buildLabels() {\n      var _this27 = this;\n      var labelOpts = this.options.labels || {};\n      var legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, _this27.chart.data);\n        });\n      }\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort(function (a, b) {\n          return labelOpts.sort(a, b, _this27.chart.data);\n        });\n      }\n      if (this.options.reverse) {\n        legendItems.reverse();\n      }\n      this.legendItems = legendItems;\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var options = this.options,\n        ctx = this.ctx;\n      if (!options.display) {\n        this.width = this.height = 0;\n        return;\n      }\n      var labelOpts = options.labels;\n      var labelFont = toFont(labelOpts.font);\n      var fontSize = labelFont.size;\n      var titleHeight = this._computeTitleHeight();\n      var _getBoxSize = getBoxSize(labelOpts, fontSize),\n        boxWidth = _getBoxSize.boxWidth,\n        itemHeight = _getBoxSize.itemHeight;\n      var width, height;\n      ctx.font = labelFont.string;\n      if (this.isHorizontal()) {\n        width = this.maxWidth;\n        height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = this.maxHeight;\n        width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      }\n      this.width = Math.min(width, options.maxWidth || this.maxWidth);\n      this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n  }, {\n    key: \"_fitRows\",\n    value: function _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      var ctx = this.ctx,\n        maxWidth = this.maxWidth,\n        padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var lineWidths = this.lineWidths = [0];\n      var lineHeight = itemHeight + padding;\n      var totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      var row = -1;\n      var top = -lineHeight;\n      this.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n        hitboxes[i] = {\n          left: 0,\n          top: top,\n          row: row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n  }, {\n    key: \"_fitCols\",\n    value: function _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n      var ctx = this.ctx,\n        maxHeight = this.maxHeight,\n        padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var columnSizes = this.columnSizes = [];\n      var heightLimit = maxHeight - titleHeight;\n      var totalWidth = padding;\n      var currentColWidth = 0;\n      var currentColHeight = 0;\n      var left = 0;\n      var col = 0;\n      this.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          currentColWidth = currentColHeight = 0;\n        }\n        hitboxes[i] = {\n          left: left,\n          top: currentColHeight,\n          col: col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n  }, {\n    key: \"adjustHitBoxes\",\n    value: function adjustHitBoxes() {\n      if (!this.options.display) {\n        return;\n      }\n      var titleHeight = this._computeTitleHeight();\n      var hitboxes = this.legendHitBoxes,\n        _this$options13 = this.options,\n        align = _this$options13.align,\n        padding = _this$options13.labels.padding,\n        rtl = _this$options13.rtl;\n      var rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n      if (this.isHorizontal()) {\n        var row = 0;\n        var left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        var _iterator19 = _createForOfIteratorHelper(hitboxes),\n          _step19;\n        try {\n          for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n            var hitbox = _step19.value;\n            if (row !== hitbox.row) {\n              row = hitbox.row;\n              left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            }\n            hitbox.top += this.top + titleHeight + padding;\n            hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n            left += hitbox.width + padding;\n          }\n        } catch (err) {\n          _iterator19.e(err);\n        } finally {\n          _iterator19.f();\n        }\n      } else {\n        var col = 0;\n        var top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        var _iterator20 = _createForOfIteratorHelper(hitboxes),\n          _step20;\n        try {\n          for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n            var _hitbox = _step20.value;\n            if (_hitbox.col !== col) {\n              col = _hitbox.col;\n              top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            }\n            _hitbox.top = top;\n            _hitbox.left += this.left + padding;\n            _hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(_hitbox.left), _hitbox.width);\n            top += _hitbox.height + padding;\n          }\n        } catch (err) {\n          _iterator20.e(err);\n        } finally {\n          _iterator20.f();\n        }\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      if (this.options.display) {\n        var ctx = this.ctx;\n        clipArea(ctx, this);\n        this._draw();\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"_draw\",\n    value: function _draw() {\n      var _this28 = this;\n      var opts = this.options,\n        columnSizes = this.columnSizes,\n        lineWidths = this.lineWidths,\n        ctx = this.ctx;\n      var align = opts.align,\n        labelOpts = opts.labels;\n      var defaultColor = defaults.color;\n      var rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      var labelFont = toFont(labelOpts.font);\n      var fontColor = labelOpts.color,\n        padding = labelOpts.padding;\n      var fontSize = labelFont.size;\n      var halfFontSize = fontSize / 2;\n      var cursor;\n      this.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n      var _getBoxSize2 = getBoxSize(labelOpts, fontSize),\n        boxWidth = _getBoxSize2.boxWidth,\n        boxHeight = _getBoxSize2.boxHeight,\n        itemHeight = _getBoxSize2.itemHeight;\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n        ctx.save();\n        var lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n        if (labelOpts.usePointStyle) {\n          var drawOptions = {\n            radius: boxWidth * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          var centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          var centerY = y + halfFontSize;\n          drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n          var yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          var xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          var borderRadius = toTRBLCorners(legendItem.borderRadius);\n          ctx.beginPath();\n          if (Object.values(borderRadius).some(function (v) {\n            return v !== 0;\n          })) {\n            addRoundedRectPath(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n          ctx.fill();\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n        ctx.restore();\n      };\n      var fillText = function fillText(x, y, legendItem) {\n        renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: rtlHelper.textAlign(legendItem.textAlign)\n        });\n      };\n      var isHorizontal = this.isHorizontal();\n      var titleHeight = this._computeTitleHeight();\n      if (isHorizontal) {\n        cursor = {\n          x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n          y: this.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: this.left + padding,\n          y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n      overrideTextDirection(this.ctx, opts.textDirection);\n      var lineHeight = itemHeight + padding;\n      this.legendItems.forEach(function (legendItem, i) {\n        ctx.strokeStyle = legendItem.fontColor || fontColor;\n        ctx.fillStyle = legendItem.fontColor || fontColor;\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        var width = boxWidth + halfFontSize + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n        rtlHelper.setWidth(_this28.width);\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > _this28.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = _alignStartEnd(align, _this28.left + padding, _this28.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > _this28.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = _alignStartEnd(align, _this28.top + titleHeight + padding, _this28.bottom - columnSizes[cursor.line].height);\n        }\n        var realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : _this28.right, opts.rtl);\n        fillText(rtlHelper.x(x), y, legendItem);\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      restoreTextDirection(this.ctx, opts.textDirection);\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var opts = this.options;\n      var titleOpts = opts.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      if (!titleOpts.display) {\n        return;\n      }\n      var rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      var ctx = this.ctx;\n      var position = titleOpts.position;\n      var halfFontSize = titleFont.size / 2;\n      var topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      var y;\n      var left = this.left;\n      var maxWidth = this.width;\n      if (this.isHorizontal()) {\n        maxWidth = Math.max.apply(Math, _toConsumableArray(this.lineWidths));\n        y = this.top + topPaddingPlusHalfFontSize;\n        left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n      } else {\n        var maxHeight = this.columnSizes.reduce(function (acc, size) {\n          return Math.max(acc, size.height);\n        }, 0);\n        y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n      }\n      var x = _alignStartEnd(position, left, left + maxWidth);\n      ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n  }, {\n    key: \"_computeTitleHeight\",\n    value: function _computeTitleHeight() {\n      var titleOpts = this.options.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n  }, {\n    key: \"_getLegendItemAt\",\n    value: function _getLegendItemAt(x, y) {\n      var i, hitBox, lh;\n      if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n        lh = this.legendHitBoxes;\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n          if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n            return this.legendItems[i];\n          }\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      var opts = this.options;\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n      var hoveredItem = this._getLegendItemAt(e.x, e.y);\n      if (e.type === 'mousemove') {\n        var previous = this._hoveredItem;\n        var sameItem = itemsEqual(previous, hoveredItem);\n        if (previous && !sameItem) {\n          callback(opts.onLeave, [e, previous, this], this);\n        }\n        this._hoveredItem = hoveredItem;\n        if (hoveredItem && !sameItem) {\n          callback(opts.onHover, [e, hoveredItem, this], this);\n        }\n      } else if (hoveredItem) {\n        callback(opts.onClick, [e, hoveredItem, this], this);\n      }\n    }\n  }]);\n  return Legend;\n}(Element);\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start: function start(chart, _args, options) {\n    var legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate: function afterUpdate(chart) {\n    var legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick: function onClick(e, legendItem, legend) {\n      var index = legendItem.datasetIndex;\n      var ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      boxWidth: 40,\n      padding: 10,\n      generateLabels: function generateLabels(chart) {\n        var datasets = chart.data.datasets;\n        var _chart$legend$options = chart.legend.options.labels,\n          usePointStyle = _chart$legend$options.usePointStyle,\n          pointStyle = _chart$legend$options.pointStyle,\n          textAlign = _chart$legend$options.textAlign,\n          color = _chart$legend$options.color;\n        return chart._getSortedDatasetMetas().map(function (meta) {\n          var style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          var borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return !name.startsWith('on');\n    },\n    labels: {\n      _scriptable: function _scriptable(name) {\n        return !['generateLabels', 'filter', 'sort'].includes(name);\n      }\n    }\n  }\n};\nvar Title = /*#__PURE__*/function (_Element7) {\n  _inherits(Title, _Element7);\n  var _super17 = _createSuper(Title);\n  function Title(config) {\n    var _this29;\n    _classCallCheck(this, Title);\n    _this29 = _super17.call(this);\n    _this29.chart = config.chart;\n    _this29.options = config.options;\n    _this29.ctx = config.ctx;\n    _this29._padding = undefined;\n    _this29.top = undefined;\n    _this29.bottom = undefined;\n    _this29.left = undefined;\n    _this29.right = undefined;\n    _this29.width = undefined;\n    _this29.height = undefined;\n    _this29.position = undefined;\n    _this29.weight = undefined;\n    _this29.fullSize = undefined;\n    return _this29;\n  }\n  _createClass(Title, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight) {\n      var opts = this.options;\n      this.left = 0;\n      this.top = 0;\n      if (!opts.display) {\n        this.width = this.height = this.right = this.bottom = 0;\n        return;\n      }\n      this.width = this.right = maxWidth;\n      this.height = this.bottom = maxHeight;\n      var lineCount = isArray(opts.text) ? opts.text.length : 1;\n      this._padding = toPadding(opts.padding);\n      var textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n      if (this.isHorizontal()) {\n        this.height = textSize;\n      } else {\n        this.width = textSize;\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n  }, {\n    key: \"_drawArgs\",\n    value: function _drawArgs(offset) {\n      var top = this.top,\n        left = this.left,\n        bottom = this.bottom,\n        right = this.right,\n        options = this.options;\n      var align = options.align;\n      var rotation = 0;\n      var maxWidth, titleX, titleY;\n      if (this.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = _alignStartEnd(align, bottom, top);\n          rotation = PI * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = _alignStartEnd(align, top, bottom);\n          rotation = PI * 0.5;\n        }\n        maxWidth = bottom - top;\n      }\n      return {\n        titleX: titleX,\n        titleY: titleY,\n        maxWidth: maxWidth,\n        rotation: rotation\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this.ctx;\n      var opts = this.options;\n      if (!opts.display) {\n        return;\n      }\n      var fontOpts = toFont(opts.font);\n      var lineHeight = fontOpts.lineHeight;\n      var offset = lineHeight / 2 + this._padding.top;\n      var _this$_drawArgs = this._drawArgs(offset),\n        titleX = _this$_drawArgs.titleX,\n        titleY = _this$_drawArgs.titleY,\n        maxWidth = _this$_drawArgs.maxWidth,\n        rotation = _this$_drawArgs.rotation;\n      renderText(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: _toLeftRightCenter(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }]);\n  return Title;\n}(Element);\nfunction createTitle(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start: function start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop: function stop(chart) {\n    var titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start: function start(chart, _args, options) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar positioners = {\n  average: function average(items) {\n    if (!items.length) {\n      return false;\n    }\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest: function nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  var element = item.element,\n    datasetIndex = item.datasetIndex,\n    index = item.index;\n  var controller = chart.getDatasetMeta(datasetIndex).controller;\n  var _controller$getLabelA = controller.getLabelAndValue(index),\n    label = _controller$getLabelA.label,\n    value = _controller$getLabelA.value;\n  return {\n    chart: chart,\n    label: label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex: datasetIndex,\n    element: element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  var ctx = tooltip.chart.ctx;\n  var body = tooltip.body,\n    footer = tooltip.footer,\n    title = tooltip.title;\n  var boxWidth = options.boxWidth,\n    boxHeight = options.boxHeight;\n  var bodyFont = toFont(options.bodyFont);\n  var titleFont = toFont(options.titleFont);\n  var footerFont = toFont(options.footerFont);\n  var titleLineCount = title.length;\n  var footerLineCount = footer.length;\n  var bodyLineItemCount = body.length;\n  var padding = toPadding(options.padding);\n  var height = padding.height;\n  var width = 0;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    var bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n  var widthPadding = 0;\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  each(body, function (bodyItem) {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width: width,\n    height: height\n  };\n}\nfunction determineYAlign(chart, size) {\n  var y = size.y,\n    height = size.height;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  var x = size.x,\n    width = size.width;\n  var caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  var x = size.x,\n    width = size.width;\n  var chartWidth = chart.width,\n    _chart$chartArea = chart.chartArea,\n    left = _chart$chartArea.left,\n    right = _chart$chartArea.right;\n  var xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  var yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign: yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  var x = size.x,\n    width = size.width;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  var y = size.y,\n    height = size.height;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  var caretSize = options.caretSize,\n    caretPadding = options.caretPadding,\n    cornerRadius = options.cornerRadius;\n  var xAlign = alignment.xAlign,\n    yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var _toTRBLCorners = toTRBLCorners(cornerRadius),\n    topLeft = _toTRBLCorners.topLeft,\n    topRight = _toTRBLCorners.topRight,\n    bottomLeft = _toTRBLCorners.bottomLeft,\n    bottomRight = _toTRBLCorners.bottomRight;\n  var x = alignX(size, xAlign);\n  var y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  var padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip: tooltip,\n    tooltipItems: tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  var override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nvar Tooltip = /*#__PURE__*/function (_Element8) {\n  _inherits(Tooltip, _Element8);\n  var _super18 = _createSuper(Tooltip);\n  function Tooltip(config) {\n    var _this30;\n    _classCallCheck(this, Tooltip);\n    _this30 = _super18.call(this);\n    _this30.opacity = 0;\n    _this30._active = [];\n    _this30._eventPosition = undefined;\n    _this30._size = undefined;\n    _this30._cachedAnimations = undefined;\n    _this30._tooltipItems = [];\n    _this30.$animations = undefined;\n    _this30.$context = undefined;\n    _this30.chart = config.chart || config._chart;\n    _this30._chart = _this30.chart;\n    _this30.options = config.options;\n    _this30.dataPoints = undefined;\n    _this30.title = undefined;\n    _this30.beforeBody = undefined;\n    _this30.body = undefined;\n    _this30.afterBody = undefined;\n    _this30.footer = undefined;\n    _this30.xAlign = undefined;\n    _this30.yAlign = undefined;\n    _this30.x = undefined;\n    _this30.y = undefined;\n    _this30.height = undefined;\n    _this30.width = undefined;\n    _this30.caretX = undefined;\n    _this30.caretY = undefined;\n    _this30.labelColors = undefined;\n    _this30.labelPointStyles = undefined;\n    _this30.labelTextColors = undefined;\n    return _this30;\n  }\n  _createClass(Tooltip, [{\n    key: \"initialize\",\n    value: function initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations() {\n      var cached = this._cachedAnimations;\n      if (cached) {\n        return cached;\n      }\n      var chart = this.chart;\n      var options = this.options.setContext(this.getContext());\n      var opts = options.enabled && chart.options.animation && options.animations;\n      var animations = new Animations(this.chart, opts);\n      if (opts._cacheable) {\n        this._cachedAnimations = Object.freeze(animations);\n      }\n      return animations;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle(context, options) {\n      var callbacks = options.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n      var title = callbacks.title.apply(this, [context]);\n      var afterTitle = callbacks.afterTitle.apply(this, [context]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n  }, {\n    key: \"getBeforeBody\",\n    value: function getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getBody\",\n    value: function getBody(tooltipItems, options) {\n      var _this31 = this;\n      var callbacks = options.callbacks;\n      var bodyItems = [];\n      each(tooltipItems, function (context) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        var scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(_this31, context)));\n        pushOrConcat(bodyItem.lines, scoped.label.call(_this31, context));\n        pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(_this31, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n  }, {\n    key: \"getAfterBody\",\n    value: function getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getFooter\",\n    value: function getFooter(tooltipItems, options) {\n      var callbacks = options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n      var footer = callbacks.footer.apply(this, [tooltipItems]);\n      var afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n  }, {\n    key: \"_createItems\",\n    value: function _createItems(options) {\n      var _this32 = this;\n      var active = this._active;\n      var data = this.chart.data;\n      var labelColors = [];\n      var labelPointStyles = [];\n      var labelTextColors = [];\n      var tooltipItems = [];\n      var i, len;\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(this.chart, active[i]));\n      }\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter(function (element, index, array) {\n          return options.filter(element, index, array, data);\n        });\n      }\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return options.itemSort(a, b, data);\n        });\n      }\n      each(tooltipItems, function (context) {\n        var scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(scoped.labelColor.call(_this32, context));\n        labelPointStyles.push(scoped.labelPointStyle.call(_this32, context));\n        labelTextColors.push(scoped.labelTextColor.call(_this32, context));\n      });\n      this.labelColors = labelColors;\n      this.labelPointStyles = labelPointStyles;\n      this.labelTextColors = labelTextColors;\n      this.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n  }, {\n    key: \"update\",\n    value: function update(changed, replay) {\n      var options = this.options.setContext(this.getContext());\n      var active = this._active;\n      var properties;\n      var tooltipItems = [];\n      if (!active.length) {\n        if (this.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        var position = positioners[options.position].call(this, active, this._eventPosition);\n        tooltipItems = this._createItems(options);\n        this.title = this.getTitle(tooltipItems, options);\n        this.beforeBody = this.getBeforeBody(tooltipItems, options);\n        this.body = this.getBody(tooltipItems, options);\n        this.afterBody = this.getAfterBody(tooltipItems, options);\n        this.footer = this.getFooter(tooltipItems, options);\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, size);\n        var alignment = determineAlignment(this.chart, options, positionAndSize);\n        var backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n      this._tooltipItems = tooltipItems;\n      this.$context = undefined;\n      if (properties) {\n        this._resolveAnimations().update(this, properties);\n      }\n      if (changed && options.external) {\n        options.external.call(this, {\n          chart: this.chart,\n          tooltip: this,\n          replay: replay\n        });\n      }\n    }\n  }, {\n    key: \"drawCaret\",\n    value: function drawCaret(tooltipPoint, ctx, size, options) {\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n  }, {\n    key: \"getCaretPosition\",\n    value: function getCaretPosition(tooltipPoint, size, options) {\n      var xAlign = this.xAlign,\n        yAlign = this.yAlign;\n      var caretSize = options.caretSize,\n        cornerRadius = options.cornerRadius;\n      var _toTRBLCorners2 = toTRBLCorners(cornerRadius),\n        topLeft = _toTRBLCorners2.topLeft,\n        topRight = _toTRBLCorners2.topRight,\n        bottomLeft = _toTRBLCorners2.bottomLeft,\n        bottomRight = _toTRBLCorners2.bottomRight;\n      var ptX = tooltipPoint.x,\n        ptY = tooltipPoint.y;\n      var width = size.width,\n        height = size.height;\n      var x1, x2, x3, y1, y2, y3;\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n        y3 = y1;\n      }\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle(pt, ctx, options) {\n      var title = this.title;\n      var length = title.length;\n      var titleFont, titleSpacing, i;\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = toFont(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_drawColorBox\",\n    value: function _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      var labelColors = this.labelColors[i];\n      var labelPointStyle = this.labelPointStyles[i];\n      var boxHeight = options.boxHeight,\n        boxWidth = options.boxWidth,\n        boxPadding = options.boxPadding;\n      var bodyFont = toFont(options.bodyFont);\n      var colorX = getAlignedX(this, 'left', options);\n      var rtlColorX = rtlHelper.x(colorX);\n      var yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      var colorY = pt.y + yOffSet;\n      if (options.usePointStyle) {\n        var drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        var centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        var centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.fillStyle = labelColors.backgroundColor;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = labelColors.borderWidth || 1;\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.setLineDash(labelColors.borderDash || []);\n        ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n        var outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n        var innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n        var borderRadius = toTRBLCorners(labelColors.borderRadius);\n        if (Object.values(borderRadius).some(function (v) {\n          return v !== 0;\n        })) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          addRoundedRectPath(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n      ctx.fillStyle = this.labelTextColors[i];\n    }\n  }, {\n    key: \"drawBody\",\n    value: function drawBody(pt, ctx, options) {\n      var body = this.body;\n      var bodySpacing = options.bodySpacing,\n        bodyAlign = options.bodyAlign,\n        displayColors = options.displayColors,\n        boxHeight = options.boxHeight,\n        boxWidth = options.boxWidth,\n        boxPadding = options.boxPadding;\n      var bodyFont = toFont(options.bodyFont);\n      var bodyLineHeight = bodyFont.lineHeight;\n      var xLinePadding = 0;\n      var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n      var bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      var bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      each(this.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = this.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        each(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n        if (displayColors && lines.length) {\n          this._drawColorBox(ctx, pt, i, rtlHelper, options);\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n        each(bodyItem.after, fillLineOfText);\n      }\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      each(this.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n  }, {\n    key: \"drawFooter\",\n    value: function drawFooter(pt, ctx, options) {\n      var footer = this.footer;\n      var length = footer.length;\n      var footerFont, i;\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = toFont(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground(pt, ctx, tooltipSize, options) {\n      var xAlign = this.xAlign,\n        yAlign = this.yAlign;\n      var x = pt.x,\n        y = pt.y;\n      var width = tooltipSize.width,\n        height = tooltipSize.height;\n      var _toTRBLCorners3 = toTRBLCorners(options.cornerRadius),\n        topLeft = _toTRBLCorners3.topLeft,\n        topRight = _toTRBLCorners3.topRight,\n        bottomLeft = _toTRBLCorners3.bottomLeft,\n        bottomRight = _toTRBLCorners3.bottomRight;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + topLeft, y);\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width - topRight, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width, y + height - bottomRight);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + bottomLeft, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x, y + topLeft);\n      ctx.quadraticCurveTo(x, y, x + topLeft, y);\n      ctx.closePath();\n      ctx.fill();\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n  }, {\n    key: \"_updateAnimationTarget\",\n    value: function _updateAnimationTarget(options) {\n      var chart = this.chart;\n      var anims = this.$animations;\n      var animX = anims && anims.x;\n      var animY = anims && anims.y;\n      if (animX || animY) {\n        var position = positioners[options.position].call(this, this._active, this._eventPosition);\n        if (!position) {\n          return;\n        }\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, this._size);\n        var alignment = determineAlignment(chart, options, positionAndSize);\n        var point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n        if (animX._to !== point.x || animY._to !== point.y) {\n          this.xAlign = alignment.xAlign;\n          this.yAlign = alignment.yAlign;\n          this.width = size.width;\n          this.height = size.height;\n          this.caretX = position.x;\n          this.caretY = position.y;\n          this._resolveAnimations().update(this, point);\n        }\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options.setContext(this.getContext());\n      var opacity = this.opacity;\n      if (!opacity) {\n        return;\n      }\n      this._updateAnimationTarget(options);\n      var tooltipSize = {\n        width: this.width,\n        height: this.height\n      };\n      var pt = {\n        x: this.x,\n        y: this.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      var padding = toPadding(options.padding);\n      var hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        this.drawBackground(pt, ctx, tooltipSize, options);\n        overrideTextDirection(ctx, options.textDirection);\n        pt.y += padding.top;\n        this.drawTitle(pt, ctx, options);\n        this.drawBody(pt, ctx, options);\n        this.drawFooter(pt, ctx, options);\n        restoreTextDirection(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements, eventPosition) {\n      var _this33 = this;\n      var lastActive = this._active;\n      var active = activeElements.map(function (_ref9) {\n        var datasetIndex = _ref9.datasetIndex,\n          index = _ref9.index;\n        var meta = _this33.chart.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(lastActive, active);\n      var positionChanged = this._positionChanged(active, eventPosition);\n      if (changed || positionChanged) {\n        this._active = active;\n        this._eventPosition = eventPosition;\n        this._ignoreReplayEvents = true;\n        this.update(true);\n      }\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e, replay) {\n      var inChartArea = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      if (replay && this._ignoreReplayEvents) {\n        return false;\n      }\n      this._ignoreReplayEvents = false;\n      var options = this.options;\n      var lastActive = this._active || [];\n      var active = this._getActiveElements(e, lastActive, replay, inChartArea);\n      var positionChanged = this._positionChanged(active, e);\n      var changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n      if (changed) {\n        this._active = active;\n        if (options.enabled || options.external) {\n          this._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          this.update(true, replay);\n        }\n      }\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, replay, inChartArea) {\n      var options = this.options;\n      if (e.type === 'mouseout') {\n        return [];\n      }\n      if (!inChartArea) {\n        return lastActive;\n      }\n      var active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n      return active;\n    }\n  }, {\n    key: \"_positionChanged\",\n    value: function _positionChanged(active, e) {\n      var caretX = this.caretX,\n        caretY = this.caretY,\n        options = this.options;\n      var position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n  }]);\n  return Tooltip;\n}(Element);\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners: positioners,\n  afterInit: function afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        chart: chart,\n        options: options\n      });\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset: function reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw: function afterDraw(chart) {\n    var tooltip = chart.tooltip;\n    var args = {\n      tooltip: tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (chart.tooltip) {\n      var useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: function boxHeight(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    boxWidth: function boxWidth(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title: function title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n          var labels = item.chart.data.labels;\n          var labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label: function label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        var label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        var value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle: function labelPointStyle(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return name !== 'filter' && name !== 'itemSort' && name !== 'external';\n    },\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: plugin_filler,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\nvar addIfString = function addIfString(labels, raw, index, addedLabels) {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({\n      index: index,\n      label: raw\n    });\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  var first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  var last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nvar validIndex = function validIndex(index, max) {\n  return index === null ? null : _limitValue(Math.round(index), 0, max);\n};\nvar CategoryScale = /*#__PURE__*/function (_Scale) {\n  _inherits(CategoryScale, _Scale);\n  var _super19 = _createSuper(CategoryScale);\n  function CategoryScale(cfg) {\n    var _this34;\n    _classCallCheck(this, CategoryScale);\n    _this34 = _super19.call(this, cfg);\n    _this34._startValue = undefined;\n    _this34._valueRange = 0;\n    _this34._addedLabels = [];\n    return _this34;\n  }\n  _createClass(CategoryScale, [{\n    key: \"init\",\n    value: function init(scaleOptions) {\n      var added = this._addedLabels;\n      if (added.length) {\n        var labels = this.getLabels();\n        var _iterator21 = _createForOfIteratorHelper(added),\n          _step21;\n        try {\n          for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n            var _step21$value = _step21.value,\n              index = _step21$value.index,\n              label = _step21$value.label;\n            if (labels[index] === label) {\n              labels.splice(index, 1);\n            }\n          }\n        } catch (err) {\n          _iterator21.e(err);\n        } finally {\n          _iterator21.f();\n        }\n        this._addedLabels = [];\n      }\n      _get(_getPrototypeOf(CategoryScale.prototype), \"init\", this).call(this, scaleOptions);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      var labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n      return validIndex(index, labels.length - 1);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getUserBounds2 = this.getUserBounds(),\n        minDefined = _this$getUserBounds2.minDefined,\n        maxDefined = _this$getUserBounds2.maxDefined;\n      var _this$getMinMax = this.getMinMax(true),\n        min = _this$getMinMax.min,\n        max = _this$getMinMax.max;\n      if (this.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n        if (!maxDefined) {\n          max = this.getLabels().length - 1;\n        }\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var min = this.min;\n      var max = this.max;\n      var offset = this.options.offset;\n      var ticks = [];\n      var labels = this.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      this._startValue = this.min - (offset ? 0.5 : 0);\n      for (var value = min; value <= max; value++) {\n        ticks.push({\n          value: value\n        });\n      }\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var labels = this.getLabels();\n      if (value >= 0 && value < labels.length) {\n        return labels[value];\n      }\n      return value;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      _get(_getPrototypeOf(CategoryScale.prototype), \"configure\", this).call(this);\n      if (!this.isHorizontal()) {\n        this._reversePixels = !this._reversePixels;\n      }\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (typeof value !== 'number') {\n        value = this.parse(value);\n      }\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.bottom;\n    }\n  }]);\n  return CategoryScale;\n}(Scale);\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\nfunction generateTicks$1(generationOptions, dataRange) {\n  var ticks = [];\n  var MIN_SPACING = 1e-14;\n  var bounds = generationOptions.bounds,\n    step = generationOptions.step,\n    min = generationOptions.min,\n    max = generationOptions.max,\n    precision = generationOptions.precision,\n    count = generationOptions.count,\n    maxTicks = generationOptions.maxTicks,\n    maxDigits = generationOptions.maxDigits,\n    includeBounds = generationOptions.includeBounds;\n  var unit = step || 1;\n  var maxSpaces = maxTicks - 1;\n  var rmin = dataRange.min,\n    rmax = dataRange.max;\n  var minDefined = !isNullOrUndef(min);\n  var maxDefined = !isNullOrUndef(max);\n  var countDefined = !isNullOrUndef(count);\n  var minSpacing = (rmax - rmin) / (maxDigits + 1);\n  var spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  var factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  var decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  var j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, _ref10) {\n  var horizontal = _ref10.horizontal,\n    minRotation = _ref10.minRotation;\n  var rad = toRadians(minRotation);\n  var ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  var length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nvar LinearScaleBase = /*#__PURE__*/function (_Scale2) {\n  _inherits(LinearScaleBase, _Scale2);\n  var _super20 = _createSuper(LinearScaleBase);\n  function LinearScaleBase(cfg) {\n    var _this35;\n    _classCallCheck(this, LinearScaleBase);\n    _this35 = _super20.call(this, cfg);\n    _this35.start = undefined;\n    _this35.end = undefined;\n    _this35._startValue = undefined;\n    _this35._endValue = undefined;\n    _this35._valueRange = 0;\n    return _this35;\n  }\n  _createClass(LinearScaleBase, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n      return +raw;\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var beginAtZero = this.options.beginAtZero;\n      var _this$getUserBounds3 = this.getUserBounds(),\n        minDefined = _this$getUserBounds3.minDefined,\n        maxDefined = _this$getUserBounds3.maxDefined;\n      var min = this.min,\n        max = this.max;\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n      if (beginAtZero) {\n        var minSign = sign(min);\n        var maxSign = sign(max);\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n      if (min === max) {\n        var offset = 1;\n        if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n          offset = Math.abs(max * 0.05);\n        }\n        setMax(max + offset);\n        if (!beginAtZero) {\n          setMin(min - offset);\n        }\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"getTickLimit\",\n    value: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var maxTicksLimit = tickOpts.maxTicksLimit,\n        stepSize = tickOpts.stepSize;\n      var maxTicks;\n      if (stepSize) {\n        maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n        if (maxTicks > 1000) {\n          console.warn(\"scales.\".concat(this.id, \".ticks.stepSize: \").concat(stepSize, \" would result generating up to \").concat(maxTicks, \" ticks. Limiting to 1000.\"));\n          maxTicks = 1000;\n        }\n      } else {\n        maxTicks = this.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n      return maxTicks;\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n      var maxTicks = this.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        bounds: opts.bounds,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: this._maxDigits(),\n        horizontal: this.isHorizontal(),\n        minRotation: tickOpts.minRotation || 0,\n        includeBounds: tickOpts.includeBounds !== false\n      };\n      var dataRange = this._range || this;\n      var ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n      return ticks;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var ticks = this.ticks;\n      var start = this.min;\n      var end = this.max;\n      _get(_getPrototypeOf(LinearScaleBase.prototype), \"configure\", this).call(this);\n      if (this.options.offset && ticks.length) {\n        var offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n      this._startValue = start;\n      this._endValue = end;\n      this._valueRange = end - start;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }]);\n  return LinearScaleBase;\n}(Scale);\nvar LinearScale = /*#__PURE__*/function (_LinearScaleBase) {\n  _inherits(LinearScale, _LinearScaleBase);\n  var _super21 = _createSuper(LinearScale);\n  function LinearScale() {\n    _classCallCheck(this, LinearScale);\n    return _super21.apply(this, arguments);\n  }\n  _createClass(LinearScale, [{\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax2 = this.getMinMax(true),\n        min = _this$getMinMax2.min,\n        max = _this$getMinMax2.max;\n      this.min = isNumberFinite(min) ? min : 0;\n      this.max = isNumberFinite(max) ? max : 1;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      var horizontal = this.isHorizontal();\n      var length = horizontal ? this.width : this.height;\n      var minRotation = toRadians(this.options.ticks.minRotation);\n      var ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n      var tickFont = this._resolveTickFontOptions(0);\n      return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n  }]);\n  return LinearScale;\n}(LinearScaleBase);\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\nfunction isMajor(tickVal) {\n  var remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  var endExp = Math.floor(log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var ticks = [];\n  var tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  var exp = Math.floor(log10(tickVal));\n  var significand = Math.floor(tickVal / Math.pow(10, exp));\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n  var lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\nvar LogarithmicScale = /*#__PURE__*/function (_Scale3) {\n  _inherits(LogarithmicScale, _Scale3);\n  var _super22 = _createSuper(LogarithmicScale);\n  function LogarithmicScale(cfg) {\n    var _this36;\n    _classCallCheck(this, LogarithmicScale);\n    _this36 = _super22.call(this, cfg);\n    _this36.start = undefined;\n    _this36.end = undefined;\n    _this36._startValue = undefined;\n    _this36._valueRange = 0;\n    return _this36;\n  }\n  _createClass(LogarithmicScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      var value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n      return isNumberFinite(value) && value > 0 ? value : null;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax3 = this.getMinMax(true),\n        min = _this$getMinMax3.min,\n        max = _this$getMinMax3.max;\n      this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n      this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n      if (this.options.beginAtZero) {\n        this._zero = true;\n      }\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var _this$getUserBounds4 = this.getUserBounds(),\n        minDefined = _this$getUserBounds4.minDefined,\n        maxDefined = _this$getUserBounds4.maxDefined;\n      var min = this.min;\n      var max = this.max;\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n      var exp = function exp(v, m) {\n        return Math.pow(10, Math.floor(log10(v)) + m);\n      };\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(exp(min, -1));\n          setMax(exp(max, +1));\n        }\n      }\n      if (min <= 0) {\n        setMin(exp(max, -1));\n      }\n      if (max <= 0) {\n        setMax(exp(min, +1));\n      }\n      if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n        setMin(exp(min, -1));\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var generationOptions = {\n        min: this._userMin,\n        max: this._userMax\n      };\n      var ticks = generateTicks(generationOptions, this);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var start = this.min;\n      _get(_getPrototypeOf(LogarithmicScale.prototype), \"configure\", this).call(this);\n      this._startValue = log10(start);\n      this._valueRange = log10(this.max) - log10(start);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (value === undefined || value === 0) {\n        value = this.min;\n      }\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n      return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var decimal = this.getDecimalForPixel(pixel);\n      return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n  }]);\n  return LogarithmicScale;\n}(Scale);\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\nfunction getTickBackdropHeight(opts) {\n  var tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    var padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  var orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  var limits = Object.assign({}, orig);\n  var labelSizes = [];\n  var padding = [];\n  var valueCount = scale._pointLabels.length;\n  var pointLabelOpts = scale.options.pointLabels;\n  var additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (var i = 0; i < valueCount; i++) {\n    var opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    var pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    var plFont = toFont(opts.font);\n    var textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    var angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    var angle = Math.round(toDegrees(angleRadians));\n    var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  var sin = Math.abs(Math.sin(angle));\n  var cos = Math.abs(Math.cos(angle));\n  var x = 0;\n  var y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  var items = [];\n  var valueCount = scale._pointLabels.length;\n  var opts = scale.options;\n  var extra = getTickBackdropHeight(opts) / 2;\n  var outerDistance = scale.drawingArea;\n  var additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (var i = 0; i < valueCount; i++) {\n    var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    var angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    var size = labelSizes[i];\n    var y = yForAngle(pointLabelPosition.y, size.h, angle);\n    var textAlign = getTextAlignForAngle(angle);\n    var left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y: y,\n      textAlign: textAlign,\n      left: left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  var ctx = scale.ctx,\n    pointLabels = scale.options.pointLabels;\n  for (var i = labelCount - 1; i >= 0; i--) {\n    var optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    var plFont = toFont(optsAtIndex.font);\n    var _scale$_pointLabelIte = scale._pointLabelItems[i],\n      x = _scale$_pointLabelIte.x,\n      y = _scale$_pointLabelIte.y,\n      textAlign = _scale$_pointLabelIte.textAlign,\n      left = _scale$_pointLabelIte.left,\n      top = _scale$_pointLabelIte.top,\n      right = _scale$_pointLabelIte.right,\n      bottom = _scale$_pointLabelIte.bottom;\n    var backdropColor = optsAtIndex.backdropColor;\n    if (!isNullOrUndef(backdropColor)) {\n      var padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  var ctx = scale.ctx;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    var pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (var i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  var ctx = scale.ctx;\n  var circular = gridLineOpts.circular;\n  var color = gridLineOpts.color,\n    lineWidth = gridLineOpts.lineWidth;\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label: label,\n    index: index,\n    type: 'pointLabel'\n  });\n}\nvar RadialLinearScale = /*#__PURE__*/function (_LinearScaleBase2) {\n  _inherits(RadialLinearScale, _LinearScaleBase2);\n  var _super23 = _createSuper(RadialLinearScale);\n  function RadialLinearScale(cfg) {\n    var _this37;\n    _classCallCheck(this, RadialLinearScale);\n    _this37 = _super23.call(this, cfg);\n    _this37.xCenter = undefined;\n    _this37.yCenter = undefined;\n    _this37.drawingArea = undefined;\n    _this37._pointLabels = [];\n    _this37._pointLabelItems = [];\n    return _this37;\n  }\n  _createClass(RadialLinearScale, [{\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n      var w = this.width = this.maxWidth - padding.width;\n      var h = this.height = this.maxHeight - padding.height;\n      this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n      this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n      this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax4 = this.getMinMax(false),\n        min = _this$getMinMax4.min,\n        max = _this$getMinMax4.max;\n      this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n      this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var _this38 = this;\n      LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n      this._pointLabels = this.getLabels().map(function (value, index) {\n        var label = callback(_this38.options.pointLabels.callback, [value, index], _this38);\n        return label || label === 0 ? label : '';\n      }).filter(function (v, i) {\n        return _this38.chart.getDataVisibility(i);\n      });\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var opts = this.options;\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        this.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n  }, {\n    key: \"setCenterPoint\",\n    value: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n      this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n      this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n  }, {\n    key: \"getIndexAngle\",\n    value: function getIndexAngle(index) {\n      var angleMultiplier = TAU / (this._pointLabels.length || 1);\n      var startAngle = this.options.startAngle || 0;\n      return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n  }, {\n    key: \"getDistanceFromCenterForValue\",\n    value: function getDistanceFromCenterForValue(value) {\n      if (isNullOrUndef(value)) {\n        return NaN;\n      }\n      var scalingFactor = this.drawingArea / (this.max - this.min);\n      if (this.options.reverse) {\n        return (this.max - value) * scalingFactor;\n      }\n      return (value - this.min) * scalingFactor;\n    }\n  }, {\n    key: \"getValueForDistanceFromCenter\",\n    value: function getValueForDistanceFromCenter(distance) {\n      if (isNullOrUndef(distance)) {\n        return NaN;\n      }\n      var scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n      return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n  }, {\n    key: \"getPointLabelContext\",\n    value: function getPointLabelContext(index) {\n      var pointLabels = this._pointLabels || [];\n      if (index >= 0 && index < pointLabels.length) {\n        var pointLabel = pointLabels[index];\n        return createPointLabelContext(this.getContext(), index, pointLabel);\n      }\n    }\n  }, {\n    key: \"getPointPosition\",\n    value: function getPointPosition(index, distanceFromCenter) {\n      var additionalAngle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n        angle: angle\n      };\n    }\n  }, {\n    key: \"getPointPositionForValue\",\n    value: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n  }, {\n    key: \"getBasePosition\",\n    value: function getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n  }, {\n    key: \"getPointLabelPosition\",\n    value: function getPointLabelPosition(index) {\n      var _this$_pointLabelItem = this._pointLabelItems[index],\n        left = _this$_pointLabelItem.left,\n        top = _this$_pointLabelItem.top,\n        right = _this$_pointLabelItem.right,\n        bottom = _this$_pointLabelItem.bottom;\n      return {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n      };\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var _this$options14 = this.options,\n        backgroundColor = _this$options14.backgroundColor,\n        circular = _this$options14.grid.circular;\n      if (backgroundColor) {\n        var ctx = this.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid() {\n      var _this39 = this;\n      var ctx = this.ctx;\n      var opts = this.options;\n      var angleLines = opts.angleLines,\n        grid = opts.grid;\n      var labelCount = this._pointLabels.length;\n      var i, offset, position;\n      if (opts.pointLabels.display) {\n        drawPointLabels(this, labelCount);\n      }\n      if (grid.display) {\n        this.ticks.forEach(function (tick, index) {\n          if (index !== 0) {\n            offset = _this39.getDistanceFromCenterForValue(tick.value);\n            var optsAtIndex = grid.setContext(_this39.getContext(index - 1));\n            drawRadiusLine(_this39, optsAtIndex, offset, labelCount);\n          }\n        });\n      }\n      if (angleLines.display) {\n        ctx.save();\n        for (i = labelCount - 1; i >= 0; i--) {\n          var optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n          var color = optsAtIndex.color,\n            lineWidth = optsAtIndex.lineWidth;\n          if (!lineWidth || !color) {\n            continue;\n          }\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n          position = this.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(this.xCenter, this.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {}\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels() {\n      var _this40 = this;\n      var ctx = this.ctx;\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n      if (!tickOpts.display) {\n        return;\n      }\n      var startAngle = this.getIndexAngle(0);\n      var offset, width;\n      ctx.save();\n      ctx.translate(this.xCenter, this.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      this.ticks.forEach(function (tick, index) {\n        if (index === 0 && !opts.reverse) {\n          return;\n        }\n        var optsAtIndex = tickOpts.setContext(_this40.getContext(index));\n        var tickFont = toFont(optsAtIndex.font);\n        offset = _this40.getDistanceFromCenterForValue(_this40.ticks[index].value);\n        if (optsAtIndex.showLabelBackdrop) {\n          ctx.font = tickFont.string;\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          var padding = toPadding(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n        renderText(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color\n        });\n      });\n      ctx.restore();\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {}\n  }]);\n  return RadialLinearScale;\n}(LinearScaleBase);\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback: function callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction _parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  var adapter = scale._adapter;\n  var _scale$_parseOpts = scale._parseOpts,\n    parser = _scale$_parseOpts.parser,\n    round = _scale$_parseOpts.round,\n    isoWeekday = _scale$_parseOpts.isoWeekday;\n  var value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  for (var i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    var interval = INTERVALS[UNITS[i]];\n    var factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (var i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    var unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    var _lookup2 = _lookup(timestamps, time),\n      lo = _lookup2.lo,\n      hi = _lookup2.hi;\n    var timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  var adapter = scale._adapter;\n  var first = +adapter.startOf(ticks[0].value, majorUnit);\n  var last = ticks[ticks.length - 1].value;\n  var major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  var ticks = [];\n  var map = {};\n  var ilen = values.length;\n  var i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value: value,\n      major: false\n    });\n  }\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nvar TimeScale = /*#__PURE__*/function (_Scale4) {\n  _inherits(TimeScale, _Scale4);\n  var _super24 = _createSuper(TimeScale);\n  function TimeScale(props) {\n    var _this41;\n    _classCallCheck(this, TimeScale);\n    _this41 = _super24.call(this, props);\n    _this41._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    _this41._unit = 'day';\n    _this41._majorUnit = undefined;\n    _this41._offsets = {};\n    _this41._normalized = false;\n    _this41._parseOpts = undefined;\n    return _this41;\n  }\n  _createClass(TimeScale, [{\n    key: \"init\",\n    value: function init(scaleOpts, opts) {\n      var time = scaleOpts.time || (scaleOpts.time = {});\n      var adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n      mergeIf(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n      _get(_getPrototypeOf(TimeScale.prototype), \"init\", this).call(this, scaleOpts);\n      this._normalized = opts.normalized;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n      return _parse(this, raw);\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      _get(_getPrototypeOf(TimeScale.prototype), \"beforeLayout\", this).call(this);\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var options = this.options;\n      var adapter = this._adapter;\n      var unit = options.time.unit || 'day';\n      var _this$getUserBounds5 = this.getUserBounds(),\n        min = _this$getUserBounds5.min,\n        max = _this$getUserBounds5.max,\n        minDefined = _this$getUserBounds5.minDefined,\n        maxDefined = _this$getUserBounds5.maxDefined;\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n      if (!minDefined || !maxDefined) {\n        _applyBounds(this._getLabelBounds());\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(this.getMinMax(false));\n        }\n      }\n      min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      this.min = Math.min(min, max - 1);\n      this.max = Math.max(min + 1, max);\n    }\n  }, {\n    key: \"_getLabelBounds\",\n    value: function _getLabelBounds() {\n      var arr = this.getLabelTimestamps();\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n      return {\n        min: min,\n        max: max\n      };\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var options = this.options;\n      var timeOpts = options.time;\n      var tickOpts = options.ticks;\n      var timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n      if (options.bounds === 'ticks' && timestamps.length) {\n        this.min = this._userMin || timestamps[0];\n        this.max = this._userMax || timestamps[timestamps.length - 1];\n      }\n      var min = this.min;\n      var max = this.max;\n      var ticks = _filterBetween(timestamps, min, max);\n      this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n      this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n      this.initOffsets(timestamps);\n      if (options.reverse) {\n        ticks.reverse();\n      }\n      return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n  }, {\n    key: \"initOffsets\",\n    value: function initOffsets(timestamps) {\n      var start = 0;\n      var end = 0;\n      var first, last;\n      if (this.options.offset && timestamps.length) {\n        first = this.getDecimalForValue(timestamps[0]);\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n        last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n      var limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = _limitValue(start, 0, limit);\n      end = _limitValue(end, 0, limit);\n      this._offsets = {\n        start: start,\n        end: end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n  }, {\n    key: \"_generate\",\n    value: function _generate() {\n      var adapter = this._adapter;\n      var min = this.min;\n      var max = this.max;\n      var options = this.options;\n      var timeOpts = options.time;\n      var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n      var stepSize = valueOrDefault(timeOpts.stepSize, 1);\n      var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      var hasWeekday = isNumber(weekday) || weekday === true;\n      var ticks = {};\n      var first = min;\n      var time, count;\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n      var timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n      return Object.keys(ticks).sort(function (a, b) {\n        return a - b;\n      }).map(function (x) {\n        return +x;\n      });\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var adapter = this._adapter;\n      var timeOpts = this.options.time;\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n  }, {\n    key: \"_tickFormatFunction\",\n    value: function _tickFormatFunction(time, index, ticks, format) {\n      var options = this.options;\n      var formats = options.time.displayFormats;\n      var unit = this._unit;\n      var majorUnit = this._majorUnit;\n      var minorFormat = unit && formats[unit];\n      var majorFormat = majorUnit && formats[majorUnit];\n      var tick = ticks[index];\n      var major = majorUnit && majorFormat && tick && tick.major;\n      var label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n      var formatter = options.ticks.callback;\n      return formatter ? callback(formatter, [label, index, ticks], this) : label;\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForValue(value);\n      return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return this.min + pos * (this.max - this.min);\n    }\n  }, {\n    key: \"_getLabelSize\",\n    value: function _getLabelSize(label) {\n      var ticksOpts = this.options.ticks;\n      var tickLabelWidth = this.ctx.measureText(label).width;\n      var angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = this._resolveTickFontOptions(0).size;\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n  }, {\n    key: \"_getLabelCapacity\",\n    value: function _getLabelCapacity(exampleTime) {\n      var timeOpts = this.options.time;\n      var displayFormats = timeOpts.displayFormats;\n      var format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n      var exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n      var size = this._getLabelSize(exampleLabel);\n      var capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n  }, {\n    key: \"getDataTimestamps\",\n    value: function getDataTimestamps() {\n      var timestamps = this._cache.data || [];\n      var i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var metas = this.getMatchingVisibleMetas();\n      if (this._normalized && metas.length) {\n        return this._cache.data = metas[0].controller.getAllParsedValues(this);\n      }\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n      }\n      return this._cache.data = this.normalize(timestamps);\n    }\n  }, {\n    key: \"getLabelTimestamps\",\n    value: function getLabelTimestamps() {\n      var timestamps = this._cache.labels || [];\n      var i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var labels = this.getLabels();\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(_parse(this, labels[i]));\n      }\n      return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(values) {\n      return _arrayUnique(values.sort(sorter));\n    }\n  }]);\n  return TimeScale;\n}(Scale);\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\nfunction interpolate(table, val, reverse) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      var _lookupByKey2 = _lookupByKey(table, 'pos', val);\n      lo = _lookupByKey2.lo;\n      hi = _lookupByKey2.hi;\n    }\n    var _table$lo = table[lo];\n    prevSource = _table$lo.pos;\n    prevTarget = _table$lo.time;\n    var _table$hi = table[hi];\n    nextSource = _table$hi.pos;\n    nextTarget = _table$hi.time;\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      var _lookupByKey3 = _lookupByKey(table, 'time', val);\n      lo = _lookupByKey3.lo;\n      hi = _lookupByKey3.hi;\n    }\n    var _table$lo2 = table[lo];\n    prevSource = _table$lo2.time;\n    prevTarget = _table$lo2.pos;\n    var _table$hi2 = table[hi];\n    nextSource = _table$hi2.time;\n    nextTarget = _table$hi2.pos;\n  }\n  var span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nvar TimeSeriesScale = /*#__PURE__*/function (_TimeScale) {\n  _inherits(TimeSeriesScale, _TimeScale);\n  var _super25 = _createSuper(TimeSeriesScale);\n  function TimeSeriesScale(props) {\n    var _this42;\n    _classCallCheck(this, TimeSeriesScale);\n    _this42 = _super25.call(this, props);\n    _this42._table = [];\n    _this42._minPos = undefined;\n    _this42._tableRange = undefined;\n    return _this42;\n  }\n  _createClass(TimeSeriesScale, [{\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var timestamps = this._getTimestampsForTable();\n      var table = this._table = this.buildLookupTable(timestamps);\n      this._minPos = interpolate(table, this.min);\n      this._tableRange = interpolate(table, this.max) - this._minPos;\n      _get(_getPrototypeOf(TimeSeriesScale.prototype), \"initOffsets\", this).call(this, timestamps);\n    }\n  }, {\n    key: \"buildLookupTable\",\n    value: function buildLookupTable(timestamps) {\n      var min = this.min,\n        max = this.max;\n      var items = [];\n      var table = [];\n      var i, ilen, prev, curr, next;\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n        if (curr >= min && curr <= max) {\n          items.push(curr);\n        }\n      }\n      if (items.length < 2) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        next = items[i + 1];\n        prev = items[i - 1];\n        curr = items[i];\n        if (Math.round((next + prev) / 2) !== curr) {\n          table.push({\n            time: curr,\n            pos: i / (ilen - 1)\n          });\n        }\n      }\n      return table;\n    }\n  }, {\n    key: \"_getTimestampsForTable\",\n    value: function _getTimestampsForTable() {\n      var timestamps = this._cache.all || [];\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var data = this.getDataTimestamps();\n      var label = this.getLabelTimestamps();\n      if (data.length && label.length) {\n        timestamps = this.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n      timestamps = this._cache.all = timestamps;\n      return timestamps;\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n  }]);\n  return TimeSeriesScale;\n}(TimeScale);\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nvar registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","d","defaults","i","isObject","b","isArray","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","createContext","j","defined","s","sign","k","isNullOrUndef","_","_arrayUnique","t","toRadians","m","toPercentage","n","toDimension","T","TAU","o","formatNumber","p","_angleBetween","H","HALF_PI","P","PI","q","isNumber","w","_limitValue","x","_lookupByKey","y","getRelativePosition$1","z","_isPointInArea","A","_rlookupByKey","B","getAngleFromPoint","C","toPadding","D","each","E","getMaximumSize","F","_getParentNode","G","readUsedSize","I","throttled","J","supportsEventListenerOptions","K","_isDomSupported","L","log10","M","_factorize","N","finiteOrDefault","O","callback","Q","_addGrace","R","toDegrees","S","_measureText","U","_int16Range","V","_alignPixel","W","clipArea","X","renderText","Y","unclipArea","Z","toFont","$","_toLeftRightCenter","a0","_alignStartEnd","a1","overrides","a2","merge","a3","_capitalize","a4","descriptors","a5","isFunction","a6","_attachContext","a7","_createResolver","a8","_descriptors","a9","mergeIf","aa","uid","ab","debounce","ac","retinaScale","ad","clearCanvas","ae","setsEqual","af","_elementsEqual","ag","_isClickEvent","ah","_isBetween","ai","_readValueToProps","aj","_updateBezierControlPoints","ak","_computeSegments","al","_boundSegments","am","_steppedInterpolation","an","_bezierInterpolation","ao","_pointInLine","ap","_steppedLineTo","aq","_bezierCurveTo","ar","drawPoint","as","addRoundedRectPath","at","toTRBL","au","toTRBLCorners","av","_boundSegment","aw","_normalizeAngle","ax","getRtlAdapter","ay","overrideTextDirection","az","_textX","aA","restoreTextDirection","aB","noop","aC","distanceBetweenPoints","aD","_setMinAndMaxByKey","aE","niceNum","aF","almostWhole","aG","almostEquals","aH","_decimalPlaces","aI","_longestText","aJ","_filterBetween","aK","_lookup","Animator","_classCallCheck","_request","_charts","Map","_running","_lastDate","undefined","_createClass","key","value","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","_this","call","window","_update","_this2","arguments","length","Date","now","remaining","running","items","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","_this$_getAnims$items","apply","_toConsumableArray","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","_i","_animationOptions","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","concat","id","getUserBounds","_scale$getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","_iterator","_createForOfIteratorHelper","getMatchingVisibleMetas","_step","done","err","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","_iterator2","_step2","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","_parsed$i","_defineProperty","_this$_parsing","_this$_parsing$xAxisK","xAxisKey","_this$_parsing$yAxisK","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","_getUserBounds","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","_this3","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","_iterator3","_step3","_step3$value","_slicedToArray","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_args2","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","prototype","getAllScaleValues","_cache","$bar","visibleMetas","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","_borderProps","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","setInflateAmount","_ref","inflateAmount","BarController","_DatasetController","_inherits","_super","_createSuper","_this$_parsing2","_this$_parsing2$xAxis","_this$_parsing2$yAxis","iAxisKey","vAxisKey","obj","_get","_getPrototypeOf","bars","getBasePixel","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","_this$_cachedMeta","_this$options","baseValue","minBarLength","floating","getDataVisibility","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","_DatasetController2","_super2","radius","points","_this$_cachedMeta2","point","iPixel","getPixelForDecimal","vPixel","skip","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","_DatasetController3","_super3","_this4","innerRadius","outerRadius","getter","_this$_parsing$key","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","_this$_getRotationExt","_getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","_DatasetController4","_super4","line","_meta$data","_dataset","animationsDisabled","_getStartAndCountOfVi","getStartAndCountOfVisiblePoints","scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","_this$_cachedMeta3","_this$options2","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","pointCount","_iScale$getUserBounds","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_DatasetController5","_super5","_this5","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","_this6","angleLines","display","circular","pointLabels","PieController","_DoughnutController","_super6","RadarController","_DatasetController6","_super7","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","_LineController","_super8","interaction","controllers","__proto__","abstract","Error","DateAdapter","formats","format","timestamp","amount","unit","diff","startOf","weekday","endOf","override","members","adapters","_date","getRelativePosition","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","_metasets$i","jlen","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","_metasets$i2","_binarySearch","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","_minPadding","evaluationFunc","inRange","getNearestRadialItems","_element$getProps","getProps","_getAngleFromPoint","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","_box","_box$options","_box$options$stackWei","buildStacks","layouts","_iterator4","_step4","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","_updateDims","setBoxDims","placeBoxes","userPadding","padding","_iterator5","_step5","autoPadding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","updateConfig","BasicPlatform","_BasePlatform","_super9","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","_getRelativePosition$","native","nodeListContains","nodeList","_iterator6","_step6","contains","createAttachObserver","observer","MutationObserver","entries","trigger","_iterator7","_step7","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","_iterator8","_step8","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","_BasePlatform2","_super10","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","_this$getProps","hasValue","final","_this7","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_Element","_super11","_this8","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","_this$getUserBounds","metas","getTicks","xLabels","yLabels","beforeUpdate","margins","_this$options3","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","_this$options4","titleOpts","gridOpts","titleHeight","_this$_getLabelSizes","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","_this$options5","_this$options5$ticks","isRotated","labelsBelowTicks","offsetLeft","offsetRight","_this$options6","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","_this$options7","_this$options8","_this$options8$ticks","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","_this$options9","_titleArgs","_this9","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","_typedRegistries","_len","_key","_each","_len2","_key2","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","getElement","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","_this10","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","_iterator9","_step9","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","console","error","_proxy","warn","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","_getResolver","getResolver","resolver","subPrefixes","needContext","subResolver","_iterator10","_step10","descriptorDefaults","_getResolver2","resolverCache","hasFunction","_descriptors2","isScriptable","isIndexable","_iterator11","_step11","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","_i3","_keys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","userConfig","_this11","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","_this$options10","maintainAspectRatio","responsive","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","_this12","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_this13","buildOrUpdateControllers","newControllers","order","ControllerClass","_defaults$datasets$ty","_resetElements","_this14","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_this$getDatasetMeta","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","_this15","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","_iterator12","_step12","_step12$value","datasetCount","makeSet","changeSet","_this16","noArea","_this16$_layers","_idx","_updateDataset","_this$_resizeBeforeDr","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","_this$canvas","toDataURL","bindUserEvents","bindResponsiveEvents","_this17","_add","_this18","_remove","detached","_this19","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","_this20","lastActive","_ref2","replay","hoverOptions","hover","deactivated","activated","_this21","eventFilter","_handleEvent","_this$_active","_getActiveElements","onHover","invalidatePlugins","enumerable","defineProperties","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","_parseBorderRadius$","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","borderJoinStyle","lineJoin","ArcElement","_Element2","_super12","_this22","_assertThisInitialized","chartX","chartY","_getAngleFromPoint2","_this$getProps2","rAdjust","betweenAngles","withinRadius","_this$getProps3","_this$options11","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","_params$start","paramsStart","_params$end","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","_pathVars","lineMethod","_ref3","_ref3$move","fastPathSegment","_pathVars2","_ref4","_ref4$move","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","_iterator13","_step13","usePath2D","LineElement","_Element3","_super13","_this23","_points","_segments","_pointsUpdated","interpolate","_interpolate","_segments$i","interpolated","_iterator14","_step14","capBezierPoints","inRange$1","_el$getProps","hitRadius","PointElement","_Element4","_super14","_this24","mouseX","mouseY","_this$getProps4","inXRange","inYRange","_this$getProps5","hoverRadius","getBarBounds","bar","_bar$getProps","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","_bar$getProps2","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","refRect","BarElement","_Element5","_super15","_this25","_this$options12","_boundingRects","addRectPath","_this$getProps6","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","_data$a","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","_objectSpread","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","_iScale$getUserBounds2","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","_getStartAndCountOfVi2","threshold","configurable","getLineByIndex","parseFillOption","fillOption","decodeFill","parseFloat","computeLinearBoundary","_source$scale","simpleArc","computeCircularBoundary","computeBoundary","findSegmentEnd","pointsFromSegments","boundary","_ref5","_ref5$x","_ref5$y","linePoints","_ref6","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","below","unshift","sourcePoint","postponed","_findPoint","findPoint","pointValue","firstValue","lastValue","getTarget","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","tpoints","_iterator15","_step15","targetSegments","_iterator16","_step16","tgt","subBounds","fillSources","_iterator17","_step17","fillSource","clipBounds","_scale$chart$chartAre","_ref7","interpolatedLineTo","interpolatedPoint","_fill","_iterator18","_step18","_step18$value","src","_src$style","_src$style2","_src$style2$backgroun","notShape","lineLoop","targetLoop","doFill","above","drawfill","lineOpts","_ref8","_ref8$above","_ref8$below","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","_labelOpts$boxHeight","boxHeight","_labelOpts$boxWidth","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_Element6","_super16","_this26","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","_this27","labelFont","_computeTitleHeight","_getBoxSize","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","_this$options13","rtl","rtlHelper","_iterator19","_step19","hitbox","leftForLtr","_iterator20","_step20","_draw","_this28","defaultColor","fontColor","halfFontSize","cursor","_getBoxSize2","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","_chart$legend$options","Title","_Element7","_super17","_this29","_padding","textSize","_drawArgs","fontOpts","_this$_drawArgs","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","str","String","createTooltipItem","_controller$getLabelA","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","_chart$chartArea","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","_toTRBLCorners","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","_Element8","_super18","_this30","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","_this31","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","_this32","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","_toTRBLCorners2","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","_toTRBLCorners3","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","_this33","_ref9","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","CategoryScale","_Scale","_super19","_this34","_startValue","_valueRange","_addedLabels","added","_iterator21","_step21","_step21$value","isFinite","_this$getUserBounds2","_this$getMinMax","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","_ref10","rad","LinearScaleBase","_Scale2","_super20","_this35","_endValue","handleTickRangeOptions","_this$getUserBounds3","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","_LinearScaleBase","_super21","_this$getMinMax2","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_Scale3","_super22","_this36","_zero","_this$getMinMax3","_this$getUserBounds4","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","_scale$_pointLabelIte","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","_LinearScaleBase2","_super23","_this37","_this$getMinMax4","_this38","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","_this$_pointLabelItem","_this$options14","_this39","_this40","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","_scale$_parseOpts","_parseOpts","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup2","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_Scale4","_super24","_this41","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_this$getUserBounds5","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","_lookupByKey2","_table$lo","_table$hi","_lookupByKey3","_table$lo2","_table$hi2","span","TimeSeriesScale","_TimeScale","_super25","_this42","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"sources":["/Users/jasonramirez/Desktop/fitness-app/frontend/node_modules/chart.js/dist/chart.esm.js"],"sourcesContent":["/*!\n * Chart.js v3.7.0\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as getRelativePosition$1, z as _isPointInArea, A as _rlookupByKey, B as getAngleFromPoint, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as _isDomSupported, L as log10, M as _factorize, N as finiteOrDefault, O as callback, Q as _addGrace, R as toDegrees, S as _measureText, U as _int16Range, V as _alignPixel, W as clipArea, X as renderText, Y as unclipArea, Z as toFont, $ as _toLeftRightCenter, a0 as _alignStartEnd, a1 as overrides, a2 as merge, a3 as _capitalize, a4 as descriptors, a5 as isFunction, a6 as _attachContext, a7 as _createResolver, a8 as _descriptors, a9 as mergeIf, aa as uid, ab as debounce, ac as retinaScale, ad as clearCanvas, ae as setsEqual, af as _elementsEqual, ag as _isClickEvent, ah as _isBetween, ai as _readValueToProps, aj as _updateBezierControlPoints, ak as _computeSegments, al as _boundSegments, am as _steppedInterpolation, an as _bezierInterpolation, ao as _pointInLine, ap as _steppedLineTo, aq as _bezierCurveTo, ar as drawPoint, as as addRoundedRectPath, at as toTRBL, au as toTRBLCorners, av as _boundSegment, aw as _normalizeAngle, ax as getRtlAdapter, ay as overrideTextDirection, az as _textX, aA as restoreTextDirection, aB as noop, aC as distanceBetweenPoints, aD as _setMinAndMaxByKey, aE as niceNum, aF as almostWhole, aG as almostEquals, aH as _decimalPlaces, aI as _longestText, aJ as _filterBetween, aK as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = _isPointInArea(center, chart.chartArea, chart._minPadding);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition);\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'x', intersect: options.intersect}, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'y', intersect: options.intersect}, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.7.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: _isPointInArea(e, this.chartArea, this._minPadding)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}