{"ast":null,"code":"var _jsxFileName = \"/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/WorkoutLogPage.js\",\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport Notification from '../components/Notification';\nimport { useErrorMessageDispatch } from '../ErrorMessageContext';\nimport exerciseServices from '../services/exercises';\nimport workoutServices from '../services/workouts';\nimport workoutChatbotServices from '../services/workoutChatbot';\nimport './WorkoutLogPage.css';\nimport { useRef } from 'react';\n\n// Defines page where a user can log their workout\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorkoutLogPage = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  /* UserPage state variables and updater functions */\n  const [exercises, setExercises] = useState([]);\n  const [workout, setWorkout] = useState({});\n  const [currWeight, setCurrWeight] = useState(0);\n  const [currSets, setCurrSets] = useState(0);\n  const [currReps, setCurrReps] = useState(0);\n  const [filteredExercises, setFilteredExercises] = useState([]);\n  const errorMessageDispatch = useErrorMessageDispatch();\n  const [generatedWorkout, setGeneratedWorkout] = useState({});\n\n  /* Gets and sets all of the exercises from the backend */\n  useEffect(() => {\n    exerciseServices.getAll().then(exercises => {\n      setExercises(exercises);\n    });\n  }, []);\n  const handleWeightChange = event => {\n    event.preventDefault();\n    setCurrWeight(event.target.value);\n  };\n  const handleSetChange = event => {\n    event.preventDefault();\n    setCurrSets(event.target.value);\n  };\n  const handleRepChange = event => {\n    event.preventDefault();\n    setCurrReps(event.target.value);\n  };\n  const addCluster = event => {\n    event.preventDefault();\n    console.log(exercises);\n    const [exercise, weight, sets, reps] = [event.target.elements.exercises.value, event.target.elements.weight.value, event.target.elements.sets.value, event.target.elements.reps.value];\n    if (!exercises.some(exerciseObject => exerciseObject.name.toLowerCase() === exercise.toLowerCase())) {\n      errorMessageDispatch({\n        type: \"SET_ERROR\",\n        message: \"Exercise entered not valid. Please choose an exercise from the provided list.\"\n      });\n      return;\n    }\n    const newCluster = {\n      'exercise': exercise,\n      'weight': weight,\n      'sets': sets,\n      'reps': reps\n    };\n\n    /* Creates new workout with this cluster if first cluster of the workout */\n    if (Object.keys(workout).length === 0) {\n      workoutServices.create(newCluster).then(createdWorkout => {\n        setWorkout({\n          ...createdWorkout\n        });\n        console.log(workout.clusters);\n      });\n    } else {\n      /* Adds cluster to previously existing workout */\n      const updatedWorkout = {\n        ...workout,\n        clusters: workout.clusters.concat(newCluster)\n      };\n      workoutServices.update(workout.id, updatedWorkout).then(updatedWorkout => {\n        setWorkout(updatedWorkout);\n      });\n    }\n  };\n  const ClusterList = () => {\n    if (Object.keys(workout).length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"noClustersPrompt\",\n        children: \" Add your first exercise for this workout! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Exercise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Weight\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Reps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: workout.clusters.map((cluster, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: cluster.exerciseName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: cluster.weight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: cluster.sets\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: cluster.reps\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 9\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this);\n    }\n  };\n  const handleExerciseInputChange = event => {\n    event.preventDefault();\n    const userInputValue = event.target.value.toLowerCase();\n    const filteredExercisesTemp = exercises.filter(exercise => exercise.name.toLowerCase().startsWith(userInputValue));\n    setFilteredExercises(filteredExercisesTemp);\n  };\n  const ChatInterface = () => {\n    _s();\n    const [chatMessages, setChatMessages] = useState([]);\n    const [currentChatMessage, setCurrentChatMessage] = useState('');\n    const messagesEndRef = useRef(null);\n    const scrollToBottom = () => {\n      var _messagesEndRef$curre;\n      (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    };\n    useEffect(scrollToBottom, [chatMessages]);\n    const handleChatInputChange = event => {\n      event.preventDefault();\n      setCurrentChatMessage(event.target.value);\n    };\n    const sendChatMessage = async event => {\n      event.preventDefault();\n      setChatMessages(prevChatMessages => [...prevChatMessages, currentChatMessage]);\n      setCurrentChatMessage('');\n      const generatedWorkout = await workoutChatbotServices.generateWorkout(currentChatMessage);\n      const exerciseMessages = generatedWorkout.map(cluster => {\n        const currExercise = cluster.exerciseName;\n        const weight = cluster['weight in lbs'];\n        const sets = cluster.sets;\n        const reps = cluster.reps;\n        return `Exercise: ${currExercise} weight: ${weight}lbs sets: ${sets} reps: ${reps}`;\n      });\n      setChatMessages(prevChatMessages => [...prevChatMessages, ...exerciseMessages]);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-interface\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"ChatGPTrainer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        style: {\n          overflow: 'auto',\n          height: '300px'\n        },\n        children: [chatMessages.map((message, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 7\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendChatMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: currentChatMessage,\n          onChange: handleChatInputChange,\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 4\n    }, this);\n  };\n  _s(ChatInterface, \"oYVMfeexXK7dCiSlscMpnfSyRqM=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-main\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"log-chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-log\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" Current Workout  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: addCluster,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"exercise\",\n              children: \"Exercise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              list: \"exercise-list\",\n              id: \"exercises\",\n              placeholder: \"Type to search...\",\n              onChange: handleExerciseInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n              id: \"exercise-list\",\n              children: filteredExercises.map(exercise => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: exercise.name\n              }, exercise.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 10\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sets-reps\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weight\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"weight\",\n                children: \"Weight(lbs)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"weight\",\n                value: currWeight,\n                onChange: handleWeightChange,\n                children: [...Array(100).keys()].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: 2.5 * (num + 1),\n                  children: 2.5 * (num + 1)\n                }, num + 1, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 11\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sets\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"sets\",\n                children: \"Sets\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"sets\",\n                value: currSets,\n                onChange: handleSetChange,\n                children: [...Array(20).keys()].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: num + 1,\n                  children: num + 1\n                }, num + 1, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 11\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reps\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"reps\",\n                children: \"Reps\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"reps\",\n                value: currReps,\n                onChange: handleRepChange,\n                children: [...Array(50).keys()].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: num + 1,\n                  children: num + 1\n                }, num + 1, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 11\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \" Add \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ClusterList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ChatInterface, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 3\n  }, this);\n};\n_s2(WorkoutLogPage, \"0jdFSbmNvrJtQKRGMcyWX73BMlU=\", false, function () {\n  return [useErrorMessageDispatch];\n});\n_c = WorkoutLogPage;\nexport default WorkoutLogPage;\nvar _c;\n$RefreshReg$(_c, \"WorkoutLogPage\");","map":{"version":3,"names":["useState","useEffect","Header","Notification","useErrorMessageDispatch","exerciseServices","workoutServices","workoutChatbotServices","useRef","jsxDEV","_jsxDEV","WorkoutLogPage","_s2","_s","$RefreshSig$","exercises","setExercises","workout","setWorkout","currWeight","setCurrWeight","currSets","setCurrSets","currReps","setCurrReps","filteredExercises","setFilteredExercises","errorMessageDispatch","generatedWorkout","setGeneratedWorkout","getAll","then","handleWeightChange","event","preventDefault","target","value","handleSetChange","handleRepChange","addCluster","console","log","exercise","weight","sets","reps","elements","some","exerciseObject","name","toLowerCase","type","message","newCluster","Object","keys","length","create","createdWorkout","clusters","updatedWorkout","concat","update","id","ClusterList","htmlFor","children","fileName","_jsxFileName","lineNumber","columnNumber","map","cluster","index","exerciseName","handleExerciseInputChange","userInputValue","filteredExercisesTemp","filter","startsWith","ChatInterface","chatMessages","setChatMessages","currentChatMessage","setCurrentChatMessage","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleChatInputChange","sendChatMessage","prevChatMessages","generateWorkout","exerciseMessages","currExercise","className","style","overflow","height","ref","onSubmit","onChange","placeholder","list","Array","num","_c","$RefreshReg$"],"sources":["/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/WorkoutLogPage.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport Header from '../components/Header'\nimport Notification from '../components/Notification'\nimport { useErrorMessageDispatch } from '../ErrorMessageContext'\nimport exerciseServices from '../services/exercises'\nimport workoutServices from '../services/workouts'\nimport workoutChatbotServices from '../services/workoutChatbot'\nimport './WorkoutLogPage.css'\nimport { useRef } from 'react'\n\n// Defines page where a user can log their workout\nconst WorkoutLogPage = () => {\t\n\t/* UserPage state variables and updater functions */\n\tconst [exercises, setExercises] = useState([])\n\tconst [workout, setWorkout] = useState({})\n\tconst [currWeight, setCurrWeight] = useState(0)\n\tconst [currSets, setCurrSets] = useState(0)\n\tconst [currReps, setCurrReps] = useState(0)\n\tconst [filteredExercises, setFilteredExercises] = useState([])\n\tconst errorMessageDispatch = useErrorMessageDispatch()\n\tconst [generatedWorkout, setGeneratedWorkout] = useState({})\n\t\n\t/* Gets and sets all of the exercises from the backend */\n\tuseEffect(() => {\n\t\texerciseServices\n\t\t\t.getAll()\n\t\t\t.then(exercises => {\n\t\t\t\tsetExercises(exercises)\n\t\t\t})\n\t}, [])\n\n\tconst handleWeightChange = (event) => {\n\t\tevent.preventDefault()\n\t\tsetCurrWeight(event.target.value)\n\t}\n\tconst handleSetChange = (event) => {\t\n\t\tevent.preventDefault()\n\t\tsetCurrSets(event.target.value)\n\t}\n\n\tconst handleRepChange = (event) => {\n\t\tevent.preventDefault()\n\t\tsetCurrReps(event.target.value)\n\t}\n\n\tconst addCluster = (event) => {\n\t\tevent.preventDefault()\n\t\tconsole.log(exercises)\t    \n\t\tconst [exercise, weight, sets, reps] = [\n\t\t\tevent.target.elements.exercises.value,\n\t\t\tevent.target.elements.weight.value,\n\t\t\tevent.target.elements.sets.value,\n\t\t\tevent.target.elements.reps.value\n\t\t]\n\n\t\tif (!exercises.some( exerciseObject => \n\t\t\t\texerciseObject.name.toLowerCase() === exercise.toLowerCase())\n\t\t\t) {\n\t\t\terrorMessageDispatch( {type: \"SET_ERROR\", message: \"Exercise entered not valid. Please choose an exercise from the provided list.\"} )\n\t\t\treturn\n\t\t}\n\n\t\tconst newCluster = \n\t\t\t{\n\t\t\t\t'exercise': exercise, \n\t\t\t\t'weight': weight, \n\t\t\t\t'sets': sets, \n\t\t\t\t'reps': reps\n\t\t\t}\n\n\t\t/* Creates new workout with this cluster if first cluster of the workout */ \n\t\tif (Object.keys(workout).length === 0) {\n\t\t\tworkoutServices\n\t\t\t\t.create(newCluster)\n\t\t\t\t.then(createdWorkout => {\t\t\t\n\t\t\t\t\tsetWorkout({...createdWorkout})\n\t\t\t\t\tconsole.log(workout.clusters)\n\t\t\t\t})\t    \n\t\t} else {\n\t\t\t/* Adds cluster to previously existing workout */\t\t\n\t\t\tconst updatedWorkout = {...workout, clusters: workout.clusters.concat(newCluster)}\n\t\t\tworkoutServices\n\t\t\t\t.update(workout.id, updatedWorkout)\n\t\t\t\t.then(updatedWorkout => {\t\t\t\n\t\t\t\t\tsetWorkout(updatedWorkout)\n\t\t\t\t})\n\t\t}\n\t}\n\n\tconst ClusterList = () => {  \n\t\tif (Object.keys(workout).length === 0) {\n\t\t\treturn <label htmlFor=\"noClustersPrompt\"> Add your first exercise for this workout! </label>\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<table>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Exercise</th>\n\t\t\t\t\t\t<th>Weight</th>\n\t\t\t\t\t\t<th>Sets</th>\n\t\t\t\t\t\t<th>Reps</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{workout.clusters.map((cluster, index) =>\n\t\t\t\t\t\t\t<tr key={index}>\n\t\t\t\t\t\t\t\t<td>{cluster.exerciseName}</td>\n\t\t\t\t\t\t\t\t<td>{cluster.weight}</td>\n\t\t\t\t\t\t\t\t<td>{cluster.sets}</td>\n\t\t\t\t\t\t\t\t<td>{cluster.reps}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t)\n\t\t}\n\t}\n  \n\t  const handleExerciseInputChange = (event) => {\n\t\tevent.preventDefault()\n\t\tconst userInputValue = event.target.value.toLowerCase()\n\t\tconst filteredExercisesTemp = exercises.filter( exercise =>\n\t\t\texercise.name.toLowerCase().startsWith(userInputValue)\n\t\t)\n\t\tsetFilteredExercises(filteredExercisesTemp)\n\t  }\n\n\n\t  const ChatInterface = () => {\n\t\tconst [chatMessages, setChatMessages] = useState([])\n\t\tconst [currentChatMessage, setCurrentChatMessage] = useState('')\n\n\t\tconst messagesEndRef = useRef(null)\n\t\tconst scrollToBottom = () => {\n\t\t\tmessagesEndRef.current?.scrollIntoView({ behavior: \"smooth\"})\n\t\t}\n\t\tuseEffect(scrollToBottom, [chatMessages])\n\n\t\tconst handleChatInputChange = (event) => {\n\t\t\tevent.preventDefault()\n\t\t\tsetCurrentChatMessage(event.target.value)\n\t\t}\n\t\n\t\tconst sendChatMessage = async (event) => {\n\t\t\tevent.preventDefault()\n\t\t\tsetChatMessages((prevChatMessages) => [...prevChatMessages, currentChatMessage])\n\t\t\tsetCurrentChatMessage('')\n\t\t\tconst generatedWorkout = await workoutChatbotServices.generateWorkout(currentChatMessage)\n\t\t\tconst exerciseMessages = generatedWorkout.map(cluster => {\n\t\t\t\tconst currExercise = cluster.exerciseName\n\t\t\t\tconst weight = cluster['weight in lbs']\n\t\t\t\tconst sets = cluster.sets\n\t\t\t\tconst reps = cluster.reps\n\t\t\t\treturn `Exercise: ${currExercise} weight: ${weight}lbs sets: ${sets} reps: ${reps}`\n\t\t\t})\n\t\t\tsetChatMessages((prevChatMessages) => [...prevChatMessages, ...exerciseMessages])\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"chat-interface\">\n\t\t\t\t<h3>ChatGPTrainer</h3>\n\t\t\t\t<div className=\"chat-messages\" style={{ overflow: 'auto', height: '300px' }}>\n\t\t\t\t\t{chatMessages.map((message, index) => (\n\t\t\t\t\t\t<p key={index}>{message}</p>\n\t\t\t\t\t))}\n\t\t\t\t\t<div ref={messagesEndRef} />\n\t\t\t\t</div>\n\t\t\t\t<form onSubmit={sendChatMessage}>\n\t\t\t\t\t<input type=\"text\" value={currentChatMessage} onChange={handleChatInputChange} placeholder=\"Type your message...\" />\n\t\t\t\t\t<button type=\"submit\">Send</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t  }\n  \n\treturn (\n\t\t<div className=\"user-main\">\n\t\t\t<Header />\n\t\t\t<div className=\"log-chat\">\t\t\t\n\t\t\t\t<div className=\"user-log\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h2> Current Workout  </h2>\t\n\t\t\t\t\t</div>\n\t\t\t\t\t<Notification />\n\t\t\t\t\t<form onSubmit={addCluster}>\t\t\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label htmlFor=\"exercise\">Exercise</label>\n\t\t\t\t\t\t\t<input list=\"exercise-list\" id=\"exercises\" \n\t\t\t\t\t\t\t\tplaceholder=\"Type to search...\" onChange={handleExerciseInputChange}/>\n\t\t\t\t\t\t\t<datalist id=\"exercise-list\">\n\t\t\t\t\t\t\t\t{filteredExercises.map( exercise => (\n\t\t\t\t\t\t\t\t\t<option key={exercise.id} value={exercise.name} />\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</datalist>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"sets-reps\">\n\t\t\t\t\t\t\t<div className=\"weight\">\n\t\t\t\t\t\t\t\t<label htmlFor=\"weight\">Weight(lbs)</label>\n\t\t\t\t\t\t\t\t<select id=\"weight\" value={currWeight} onChange={handleWeightChange}>\n\t\t\t\t\t\t\t\t\t{[...Array(100).keys()].map((num) => (\n\t\t\t\t\t\t\t\t\t\t<option key={num+1} value={2.5*(num+1)}>\n\t\t\t\t\t\t\t\t\t\t\t{2.5*(num + 1)}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"sets\">\n\t\t\t\t\t\t\t\t<label htmlFor=\"sets\">Sets</label>\n\t\t\t\t\t\t\t\t<select id=\"sets\" value={currSets} onChange={handleSetChange}>\n\t\t\t\t\t\t\t\t\t{[...Array(20).keys()].map((num) => (\n\t\t\t\t\t\t\t\t\t\t<option key={num+1} value={num+1}>\n\t\t\t\t\t\t\t\t\t\t\t{num + 1}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"reps\">\n\t\t\t\t\t\t\t\t<label htmlFor=\"reps\">Reps</label>\n\t\t\t\t\t\t\t\t<select id=\"reps\" value={currReps} onChange={handleRepChange}>\n\t\t\t\t\t\t\t\t\t{[...Array(50).keys()].map((num) => (\n\t\t\t\t\t\t\t\t\t\t<option key={num+1} value={num+1}>\n\t\t\t\t\t\t\t\t\t\t\t{num + 1}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button type=\"submit\"> Add </button>\n\t\t\t\t\t</form>\n\t\t\t\t\t<ClusterList />\n\t\t\t\t</div>\t\n\t\t\t\t<ChatInterface />\n\t\t\t</div>       \n\t\t</div>\n\t)\t\n}\n\nexport default WorkoutLogPage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}