{"ast":null,"code":"/*!\n * Chart.js v3.7.0\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as getRelativePosition$1, z as _isPointInArea, A as _rlookupByKey, B as getAngleFromPoint, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as _isDomSupported, L as log10, M as _factorize, N as finiteOrDefault, O as callback, Q as _addGrace, R as toDegrees, S as _measureText, U as _int16Range, V as _alignPixel, W as clipArea, X as renderText, Y as unclipArea, Z as toFont, $ as _toLeftRightCenter, a0 as _alignStartEnd, a1 as overrides, a2 as merge, a3 as _capitalize, a4 as descriptors, a5 as isFunction, a6 as _attachContext, a7 as _createResolver, a8 as _descriptors, a9 as mergeIf, aa as uid, ab as debounce, ac as retinaScale, ad as clearCanvas, ae as setsEqual, af as _elementsEqual, ag as _isClickEvent, ah as _isBetween, ai as _readValueToProps, aj as _updateBezierControlPoints, ak as _computeSegments, al as _boundSegments, am as _steppedInterpolation, an as _bezierInterpolation, ao as _pointInLine, ap as _steppedLineTo, aq as _bezierCurveTo, ar as drawPoint, as as addRoundedRectPath, at as toTRBL, au as toTRBLCorners, av as _boundSegment, aw as _normalizeAngle, ax as getRtlAdapter, ay as overrideTextDirection, az as _textX, aA as restoreTextDirection, aB as noop, aC as distanceBetweenPoints, aD as _setMinAndMaxByKey, aE as niceNum, aF as almostWhole, aG as almostEquals, aH as _decimalPlaces, aI as _longestText, aJ as _filterBetween, aK as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update() {\n    let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || elapsed < duration);\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = elapsed / duration % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({\n        res,\n        rej\n      });\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      }\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {});\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n  return options;\n}\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex) {\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if (positive && value > 0 || !positive && value < 0) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {\n    chart,\n    _cachedMeta: meta\n  } = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {\n    iScale,\n    vScale,\n    index: datasetIndex\n  } = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {\n      [iAxis]: index,\n      [vAxis]: value\n    } = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked && {\n  keys: getSortedDatasetIndices(chart, true),\n  values: null\n};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale ? meta.vScale : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {\n      _cachedMeta: meta,\n      _data: data\n    } = this;\n    const {\n      iScale,\n      _stacked\n    } = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {\n      mode\n    });\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    const {\n      min: otherMin,\n      max: otherMax\n    } = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || elements.length - start;\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType) {\n    let mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n    let index = arguments.length > 2 ? arguments[2] : undefined;\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: !active && this.getSharedOptions(options) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count) {\n    let resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = arr => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  } = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, _ref, ratio) {\n  let {\n    inflateAmount\n  } = _ref;\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      index,\n      _cachedMeta: {\n        vScale\n      }\n    } = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n        base,\n        head: base\n      } : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = name !== undefined ? stacks.indexOf(name) : -1;\n    return index === -1 ? stacks.length - 1 : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {\n      _cachedMeta: {\n        vScale,\n        _stacked\n      },\n      options: {\n        base: baseValue,\n        minBarLength\n      }\n    } = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale\n    } = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {\n        $shared: false\n      });\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {\n    ratioX,\n    ratioY,\n    offsetX,\n    offsetY\n  };\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = i => +data[i];\n      if (isObject(data[start])) {\n        const {\n          key = 'value'\n        } = this._parsing;\n        getter = i => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {\n      chartArea\n    } = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {\n      circumference,\n      rotation\n    } = this._getRotationExtents();\n    const {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    } = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n};\nDoughnutController.descriptors = {\n  _scriptable: name => name !== 'spacing',\n  _indexable: name => name !== 'spacing'\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {\n      dataset: line,\n      data: points = [],\n      _dataset\n    } = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {\n      start,\n      count\n    } = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked,\n      _dataset\n    } = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {\n      spanGaps,\n      segment\n    } = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && parsed[iAxis] - prevParsed[iAxis] > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {\n      iScale,\n      _parsed\n    } = meta;\n    const axis = iScale.axis;\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {\n    start,\n    count\n  };\n}\nfunction scaleRangesChanged(meta) {\n  const {\n    xScale,\n    yScale,\n    _scaleRanges\n  } = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - radiusLength * this.index;\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\nclass PieController extends DoughnutController {}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\nclass ScatterController extends LineController {}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({\n      index,\n      data\n    } = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {\n    controller,\n    data,\n    _sorted\n  } = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {\n      index,\n      data\n    } = metasets[i];\n    const {\n      lo,\n      hi\n    } = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {\n      startAngle,\n      endAngle\n    } = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {\n      angle\n    } = getAngleFromPoint(element, {\n      x: position.x,\n      y: position.y\n    });\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = _isPointInArea(center, chart.chartArea, chart._minPadding);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{\n        element,\n        datasetIndex,\n        index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return [];\n  }\n  return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition);\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach(meta => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({\n            element,\n            datasetIndex: meta.index,\n            index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex,\n            index: i\n          });\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {\n        axis: 'x',\n        intersect: options.intersect\n      }, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {\n        axis: 'y',\n        intersect: options.intersect\n      }, useFinalPosition);\n    }\n  }\n};\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({\n      position: pos,\n      options: {\n        stack,\n        stackWeight = 1\n      }\n    } = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {\n      stack,\n      pos,\n      stackWeight\n    } = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {\n      count: 0,\n      placed: 0,\n      weight: 0,\n      size: 0\n    });\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {\n    vBoxMaxWidth,\n    hBoxMaxHeight\n  } = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {\n      fullSize\n    } = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {\n    pos,\n    box\n  } = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(pos => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    const {\n      same,\n      other\n    } = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {\n    x,\n    y\n  } = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {\n      count: 1,\n      placed: 0,\n      weight: 1\n    };\n    const weight = layout.stackWeight / stack.weight || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, layout => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n};\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {}\n}\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {\n    x,\n    y\n  } = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled(event => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, args => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(prop => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach(key => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {\n      notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {\n  formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash'\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: name => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: name => name !== 'backdropPadding'\n});\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\nconst reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, cache => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {\n    top,\n    left,\n    bottom,\n    right,\n    chart\n  } = scale;\n  const {\n    chartArea,\n    scales\n  } = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {\n    titleX,\n    titleY,\n    maxWidth,\n    rotation\n  };\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {\n      _userMin,\n      _userMax,\n      _suggestedMin,\n      _suggestedMax\n    } = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {\n        min,\n        max\n      };\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {\n      beginAtZero,\n      grace,\n      ticks: tickOpts\n    } = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {\n      chart,\n      options: {\n        ticks: tickOpts,\n        title: titleOpts,\n        grid: gridOpts\n      }\n    } = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {\n          first,\n          last,\n          widest,\n          highest\n        } = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {\n      ticks: {\n        align,\n        padding\n      },\n      position\n    } = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {\n      axis,\n      position\n    } = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {\n      ctx,\n      _longestTextCache: caches\n    } = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {\n        data: {},\n        gc: []\n      };\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = idx => ({\n      width: widths[idx] || 0,\n      height: heights[idx] || 0\n    });\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {\n      min,\n      max\n    } = this;\n    return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {\n      grid,\n      position\n    } = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function (pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {\n      position,\n      ticks: optionTicks\n    } = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {\n      align,\n      crossAlign,\n      padding,\n      mirror\n    } = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n          case 'middle':\n            top -= height / 2;\n            break;\n          case 'bottom':\n            top -= height;\n            break;\n        }\n        switch (textAlign) {\n          case 'center':\n            left -= width / 2;\n            break;\n          case 'right':\n            left -= width;\n            break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {\n      position,\n      ticks\n    } = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {\n      position,\n      ticks: {\n        crossAlign,\n        mirror,\n        padding\n      }\n    } = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {\n      textAlign,\n      x\n    };\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {\n        top: 0,\n        left: this.left,\n        bottom: chart.height,\n        right: this.right\n      };\n    }\n    if (position === 'top' || position === 'bottom') {\n      return {\n        top: this.top,\n        left: 0,\n        bottom: this.bottom,\n        right: chart.width\n      };\n    }\n  }\n  drawBackground() {\n    const {\n      ctx,\n      options: {\n        backgroundColor\n      },\n      left,\n      top,\n      width,\n      height\n    } = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine({\n            x: item.x1,\n            y: item.y1\n          }, {\n            x: item.x2,\n            y: item.y2\n          }, item);\n        }\n        if (grid.drawTicks) {\n          drawLine({\n            x: item.tx1,\n            y: item.ty1\n          }, {\n            x: item.tx2,\n            y: item.ty2\n          }, {\n            color: item.tickColor,\n            width: item.tickWidth,\n            borderDash: item.tickBorderDash,\n            borderDashOffset: item.tickBorderDashOffset\n          });\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {\n      chart,\n      ctx,\n      options: {\n        grid\n      }\n    } = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {\n      ctx,\n      options: {\n        position,\n        title,\n        reverse\n      }\n    } = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: chartArea => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: chartArea => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: chartArea => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    this._each('register', args);\n  }\n  remove() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    this._each('unregister', args);\n  }\n  addControllers() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    this._each('register', args, this.controllers);\n  }\n  addElements() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    this._each('register', args, this.elements);\n  }\n  addPlugins() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n    this._each('register', args, this.plugins);\n  }\n  addScales() {\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers() {\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements() {\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins() {\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales() {\n    for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n      args[_key10] = arguments[_key10];\n    }\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {\n      options,\n      type\n    } = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {\n      options,\n      type\n    } = this;\n    return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n      type\n    }, defaults, descriptors];\n  }\n  resolveNamedOptions(scopes, names, context) {\n    let prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n    const result = {\n      $shared: true\n    };\n    const {\n      resolver,\n      subPrefixes\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context) {\n    let prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n    let descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n    const {\n      resolver\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {\n    isScriptable,\n    isIndexable\n  } = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n      return true;\n    }\n  }\n  return false;\n}\nvar version = \"3.7.0\";\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = key => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter(c => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {\n      options: {\n        aspectRatio,\n        maintainAspectRatio\n      },\n      width,\n      height,\n      _aspectRatio\n    } = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {\n        width,\n        height\n      };\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {\n      size: newSize\n    });\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(Object.keys(scaleOpts).map(id => {\n        const scaleOptions = scaleOpts[id];\n        const axis = determineAxis(id, scaleOptions);\n        const isRadial = axis === 'r';\n        const isHorizontal = axis === 'x';\n        return {\n          options: scaleOptions,\n          dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n          dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n        };\n      }));\n    }\n    each(items, item => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, scale => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {\n      _metasets: metasets,\n      data: {\n        datasets\n      }\n    } = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {\n          datasetElementType,\n          dataElementType\n        } = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {\n        controller\n      } = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, controller => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {\n      mode\n    });\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {\n      _active,\n      _lastEvent\n    } = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, scale => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {\n      _hiddenIndices\n    } = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {\n      method,\n      start,\n      count\n    } of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = idx => new Set(_dataChanges.filter(c => c[0] === idx).map((c, i) => i + ',' + c.splice(1).join(',')));\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet).map(c => c.split(',')).map(a => ({\n      method: a[1],\n      start: +a[2],\n      count: +a[3]\n    }));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, box => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({\n        datasetIndex: i\n      }) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {\n      mode\n    });\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {\n      meta,\n      index,\n      mode,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({\n        chart: this\n      });\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {\n        width,\n        height\n      } = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {\n      chart: this,\n      type: 'chart'\n    }));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {\n        visible\n      });\n      this.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {\n      canvas,\n      ctx\n    } = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image() {\n    return this.canvas.toDataURL(...arguments);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, type => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(_ref2 => {\n      let {\n        datasetIndex,\n        index\n      } = _ref2;\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: _isPointInArea(e, this.chartArea, this._minPadding)\n    };\n    const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {\n      _active: lastActive = [],\n      options\n    } = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, chart => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: function () {\n      registry.add(...arguments);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: function () {\n      registry.remove(...arguments);\n      invalidatePlugins();\n    }\n  }\n});\nfunction clipArc(ctx, element, endAngle) {\n  const {\n    startAngle,\n    pixelMargin,\n    x,\n    y,\n    outerRadius,\n    innerRadius\n  } = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = val => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {\n    x,\n    y,\n    startAngle: start,\n    pixelMargin,\n    innerRadius: innerR\n  } = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {\n    outerStart,\n    outerEnd,\n    innerStart,\n    innerEnd\n  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference\n  } = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {\n    x,\n    y,\n    startAngle,\n    pixelMargin,\n    fullCircles\n  } = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {\n    options\n  } = element;\n  const {\n    borderWidth,\n    borderJoinStyle\n  } = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {\n      angle,\n      distance\n    } = getAngleFromPoint(point, {\n      x: chartX,\n      y: chartY\n    });\n    const {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius,\n      circumference\n    } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return betweenAngles && withinRadius;\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const {\n      offset,\n      spacing\n    } = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {\n      options,\n      circumference\n    } = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\nfunction setStyle(ctx, options) {\n  let style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment) {\n  let params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const count = points.length;\n  const {\n    start: paramsStart = 0,\n    end: paramsEnd = count - 1\n  } = params;\n  const {\n    start: segmentStart,\n    end: segmentEnd\n  } = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {\n    points,\n    options\n  } = line;\n  const {\n    count,\n    start,\n    loop,\n    ilen\n  } = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {\n    move = true,\n    reverse\n  } = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {\n    count,\n    start,\n    ilen\n  } = pathVars(points, segment, params);\n  const {\n    move = true,\n    reverse\n  } = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {\n    segments,\n    options\n  } = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {\n      start,\n      end: start + count - 1\n    })) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {\n      property,\n      start: value,\n      end: value\n    });\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {\n        start,\n        end\n      } = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || this.points.length - start;\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {\n        start,\n        end: start + count - 1\n      });\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: name => name !== 'borderDash' && name !== 'fill'\n};\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {\n    [axis]: value\n  } = el.getProps([axis], useFinalPosition);\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nfunction getBarBounds(bar, useFinalPosition) {\n  const {\n    x,\n    y,\n    base,\n    width,\n    height\n  } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {\n    enableBorderRadius\n  } = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount) {\n  let refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {\n      inflateAmount,\n      options: {\n        borderColor,\n        backgroundColor\n      }\n    } = this;\n    const {\n      inner,\n      outer\n    } = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      horizontal\n    } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {\n      x: pointAx,\n      y: pointAy\n    } = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(dataset => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {\n    iScale\n  } = meta;\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {\n    start,\n    count\n  };\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {\n        _data,\n        indexAxis\n      } = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {\n        start,\n        count\n      } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return this._decimated;\n          },\n          set: function (d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n        default:\n          throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {\n    scale = {},\n    fill\n  } = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    bounds = bounds || {\n      start: 0,\n      end: TAU\n    };\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {\n    scale,\n    fill\n  } = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {\n    x = null,\n    y = null\n  } = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(_ref3 => {\n    let {\n      start,\n      end\n    } = _ref3;\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y\n      });\n      points.push({\n        x: last.x,\n        y\n      });\n    } else if (x !== null) {\n      points.push({\n        x,\n        y: first.y\n      });\n      points.push({\n        x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {\n    scale,\n    index,\n    line\n  } = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({\n    points,\n    options: {}\n  });\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {\n      first,\n      last,\n      point\n    } = findPoint(line, sourcePoint, 'x');\n    if (!point || first && last) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {\n    first,\n    last,\n    point\n  };\n}\nfunction getTarget(source) {\n  const {\n    chart,\n    fill,\n    line\n  } = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {\n      tension: 0\n    },\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {\n    property,\n    start,\n    end\n  };\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {\n      start,\n      end\n    } = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {\n    top,\n    bottom\n  } = scale.chart.chartArea;\n  const {\n    property,\n    start,\n    end\n  } = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {\n    line,\n    target,\n    property,\n    color,\n    scale\n  } = cfg;\n  const segments = _segments(line, target, property);\n  for (const {\n    source: src,\n    target: tgt,\n    start,\n    end\n  } of segments) {\n    const {\n      style: {\n        backgroundColor = color\n      } = {}\n    } = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {\n        move: lineLoop,\n        reverse: true\n      });\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {\n    line,\n    target,\n    above,\n    below,\n    area,\n    scale\n  } = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {\n      line,\n      target,\n      color: above,\n      scale,\n      property\n    });\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {\n    line,\n    target,\n    color: below,\n    scale,\n    property\n  });\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {\n    line,\n    scale,\n    axis\n  } = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {\n    above = color,\n    below = color\n  } = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale,\n      axis\n    });\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {\n    boxHeight = fontSize,\n    boxWidth = fontSize\n  } = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(item => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {\n      options,\n      ctx\n    } = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {\n      boxWidth,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {\n      ctx,\n      maxWidth,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {\n        left: 0,\n        top,\n        row,\n        width: itemWidth,\n        height: itemHeight\n      };\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {\n      ctx,\n      maxHeight,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({\n          width: currentColWidth,\n          height: currentColHeight\n        });\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {\n        left,\n        top: currentColHeight,\n        col,\n        width: itemWidth,\n        height: itemHeight\n      };\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({\n      width: currentColWidth,\n      height: currentColHeight\n    });\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {\n      legendHitBoxes: hitboxes,\n      options: {\n        align,\n        labels: {\n          padding\n        },\n        rtl\n      }\n    } = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {\n      options: opts,\n      columnSizes,\n      lineWidths,\n      ctx\n    } = this;\n    const {\n      align,\n      labels: labelOpts\n    } = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {\n      color: fontColor,\n      padding\n    } = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {\n      boxWidth,\n      boxHeight,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function (x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function (x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: ctx => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {\n          labels: {\n            usePointStyle,\n            pointStyle,\n            textAlign,\n            color\n          }\n        } = chart.legend.options;\n        return chart._getSortedDatasetMetas().map(meta => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: ctx => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: name => !name.startsWith('on'),\n    labels: {\n      _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n    }\n  }\n};\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      options\n    } = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {\n    element,\n    datasetIndex,\n    index\n  } = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {\n    label,\n    value\n  } = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {\n    body,\n    footer,\n    title\n  } = tooltip;\n  const {\n    boxWidth,\n    boxHeight\n  } = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function (line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  each(body, bodyItem => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width,\n    height\n  };\n}\nfunction determineYAlign(chart, size) {\n  const {\n    y,\n    height\n  } = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {\n    x,\n    width\n  } = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {\n    x,\n    width\n  } = size;\n  const {\n    width: chartWidth,\n    chartArea: {\n      left,\n      right\n    }\n  } = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {\n    x,\n    width\n  } = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {\n    y,\n    height\n  } = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {\n    caretSize,\n    caretPadding,\n    cornerRadius\n  } = options;\n  const {\n    xAlign,\n    yAlign\n  } = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {\n    topLeft,\n    topRight,\n    bottomLeft,\n    bottomRight\n  } = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const bodyItems = [];\n    each(tooltipItems, context => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, context => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {\n        chart: this.chart,\n        tooltip: this,\n        replay\n      });\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      caretSize,\n      cornerRadius\n    } = options;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(cornerRadius);\n    const {\n      x: ptX,\n      y: ptY\n    } = tooltipPoint;\n    const {\n      width,\n      height\n    } = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {\n      x1,\n      x2,\n      x3,\n      y1,\n      y2,\n      y3\n    };\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {\n      boxHeight,\n      boxWidth,\n      boxPadding\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {\n      body\n    } = this;\n    const {\n      bodySpacing,\n      bodyAlign,\n      displayColors,\n      boxHeight,\n      boxWidth,\n      boxPadding\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function (line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      x,\n      y\n    } = pt;\n    const {\n      width,\n      height\n    } = tooltipSize;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(_ref4 => {\n      let {\n        datasetIndex,\n        index\n      } = _ref4;\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    let inChartArea = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {\n      caretX,\n      caretY,\n      options\n    } = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        chart,\n        options\n      });\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: plugin_filler,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({\n      index,\n      label: raw\n    });\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {\n        index,\n        label\n      } of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({\n        value\n      });\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {\n    bounds,\n    step,\n    min,\n    max,\n    precision,\n    count,\n    maxTicks,\n    maxDigits,\n    includeBounds\n  } = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {\n    min: rmin,\n    max: rmax\n  } = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, _ref5) {\n  let {\n    horizontal,\n    minRotation\n  } = _ref5;\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {\n      beginAtZero\n    } = this.options;\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this;\n    const setMin = v => min = minDefined ? min : v;\n    const setMax = v => max = maxDefined ? max : v;\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {\n      maxTicksLimit,\n      stepSize\n    } = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\nfunction isMajor(tickVal) {\n  const remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => min = minDefined ? min : v;\n    const setMax = v => max = maxDefined ? max : v;\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {\n    ctx,\n    options: {\n      pointLabels\n    }\n  } = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {\n      x,\n      y,\n      textAlign,\n      left,\n      top,\n      right,\n      bottom\n    } = scale._pointLabelItems[i];\n    const {\n      backdropColor\n    } = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {\n    ctx\n  } = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {\n    color,\n    lineWidth\n  } = gridLineOpts;\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels().map((value, index) => {\n      const label = callback(this.options.pointLabels.callback, [value, index], this);\n      return label || label === 0 ? label : '';\n    }).filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter) {\n    let additionalAngle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n  drawBackground() {\n    const {\n      backgroundColor,\n      grid: {\n        circular\n      }\n    } = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {\n      angleLines,\n      grid\n    } = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {\n          color,\n          lineWidth\n        } = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = Object.keys(INTERVALS);\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {\n    parser,\n    round,\n    isoWeekday\n  } = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {\n      lo,\n      hi\n    } = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {\n      min,\n      max\n    };\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {\n      start,\n      end,\n      factor: 1 / (start + 1 + end)\n    };\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n      h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return this._cache.data = metas[0].controller.getAllParsedValues(this);\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return this._cache.data = this.normalize(timestamps);\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'pos', val));\n    }\n    ({\n      pos: prevSource,\n      time: prevTarget\n    } = table[lo]);\n    ({\n      pos: nextSource,\n      time: nextTarget\n    } = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'time', val));\n    }\n    ({\n      time: prevSource,\n      pos: prevTarget\n    } = table[lo]);\n    ({\n      time: nextSource,\n      pos: nextTarget\n    } = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {\n      min,\n      max\n    } = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nconst registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","d","defaults","i","isObject","b","isArray","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","createContext","j","defined","s","sign","k","isNullOrUndef","_","_arrayUnique","t","toRadians","m","toPercentage","n","toDimension","T","TAU","o","formatNumber","p","_angleBetween","H","HALF_PI","P","PI","q","isNumber","w","_limitValue","x","_lookupByKey","y","getRelativePosition$1","z","_isPointInArea","A","_rlookupByKey","B","getAngleFromPoint","C","toPadding","D","each","E","getMaximumSize","F","_getParentNode","G","readUsedSize","I","throttled","J","supportsEventListenerOptions","K","_isDomSupported","L","log10","M","_factorize","N","finiteOrDefault","O","callback","Q","_addGrace","R","toDegrees","S","_measureText","U","_int16Range","V","_alignPixel","W","clipArea","X","renderText","Y","unclipArea","Z","toFont","$","_toLeftRightCenter","a0","_alignStartEnd","a1","overrides","a2","merge","a3","_capitalize","a4","descriptors","a5","isFunction","a6","_attachContext","a7","_createResolver","a8","_descriptors","a9","mergeIf","aa","uid","ab","debounce","ac","retinaScale","ad","clearCanvas","ae","setsEqual","af","_elementsEqual","ag","_isClickEvent","ah","_isBetween","ai","_readValueToProps","aj","_updateBezierControlPoints","ak","_computeSegments","al","_boundSegments","am","_steppedInterpolation","an","_bezierInterpolation","ao","_pointInLine","ap","_steppedLineTo","aq","_bezierCurveTo","ar","drawPoint","as","addRoundedRectPath","at","toTRBL","au","toTRBLCorners","av","_boundSegment","aw","_normalizeAngle","ax","getRtlAdapter","ay","overrideTextDirection","az","_textX","aA","restoreTextDirection","aB","noop","aC","distanceBetweenPoints","aD","_setMinAndMaxByKey","aE","niceNum","aF","almostWhole","aG","almostEquals","aH","_decimalPlaces","aI","_longestText","aJ","_filterBetween","aK","_lookup","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","call","window","_update","arguments","length","Date","now","remaining","running","items","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","prototype","getAllScaleValues","_cache","$bar","visibleMetas","concat","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","setInflateAmount","_ref","inflateAmount","BarController","iAxisKey","vAxisKey","obj","bars","getBasePixel","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","getPixelForDecimal","vPixel","skip","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","pointCount","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","interaction","controllers","__proto__","abstract","Error","DateAdapter","formats","format","timestamp","amount","unit","diff","startOf","weekday","endOf","override","members","adapters","_date","getRelativePosition","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","jlen","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","_minPadding","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","autoPadding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","_typedRegistries","_len","_key","_each","_len2","_key2","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getElement","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","console","error","_proxy","warn","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","hasFunction","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_ref2","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","onHover","invalidatePlugins","enumerable","defineProperties","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","borderJoinStyle","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","capBezierPoints","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","configurable","getLineByIndex","parseFillOption","fillOption","decodeFill","parseFloat","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","findSegmentEnd","pointsFromSegments","boundary","linePoints","_ref3","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","getTarget","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","notShape","lineLoop","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","_ref4","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","_ref5","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"sources":["/Users/jasonramirez/Desktop/fitness-app/frontend/node_modules/chart.js/dist/chart.esm.js"],"sourcesContent":["/*!\n * Chart.js v3.7.0\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as getRelativePosition$1, z as _isPointInArea, A as _rlookupByKey, B as getAngleFromPoint, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as _isDomSupported, L as log10, M as _factorize, N as finiteOrDefault, O as callback, Q as _addGrace, R as toDegrees, S as _measureText, U as _int16Range, V as _alignPixel, W as clipArea, X as renderText, Y as unclipArea, Z as toFont, $ as _toLeftRightCenter, a0 as _alignStartEnd, a1 as overrides, a2 as merge, a3 as _capitalize, a4 as descriptors, a5 as isFunction, a6 as _attachContext, a7 as _createResolver, a8 as _descriptors, a9 as mergeIf, aa as uid, ab as debounce, ac as retinaScale, ad as clearCanvas, ae as setsEqual, af as _elementsEqual, ag as _isClickEvent, ah as _isBetween, ai as _readValueToProps, aj as _updateBezierControlPoints, ak as _computeSegments, al as _boundSegments, am as _steppedInterpolation, an as _bezierInterpolation, ao as _pointInLine, ap as _steppedLineTo, aq as _bezierCurveTo, ar as drawPoint, as as addRoundedRectPath, at as toTRBL, au as toTRBLCorners, av as _boundSegment, aw as _normalizeAngle, ax as getRtlAdapter, ay as overrideTextDirection, az as _textX, aA as restoreTextDirection, aB as noop, aC as distanceBetweenPoints, aD as _setMinAndMaxByKey, aE as niceNum, aF as almostWhole, aG as almostEquals, aH as _decimalPlaces, aI as _longestText, aJ as _filterBetween, aK as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = _isPointInArea(center, chart.chartArea, chart._minPadding);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition);\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'x', intersect: options.intersect}, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'y', intersect: options.intersect}, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.7.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: _isPointInArea(e, this.chartArea, this._minPadding)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}