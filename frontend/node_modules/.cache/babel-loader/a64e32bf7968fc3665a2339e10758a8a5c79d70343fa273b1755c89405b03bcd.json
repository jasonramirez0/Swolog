{"ast":null,"code":"var _jsxFileName = \"/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/ExercisePopularityTable.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport exerciseServices from '../services/exercises';\nimport Table from 'react-bootstrap/Table';\n\n//Creates a table that displays the 10 most popular exercises based on muscle groups or generally\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExercisePopularityTable = targetMuscles => {\n  _s();\n  const [exercises, setExercises] = useState([]);\n  const [mostPopularExercises, setMostPopularExercises] = useState([]);\n  const [filteredTargetMuscles, setFilteredTargetMuscles] = useState([]);\n  console.log(`target muscles ${targetMuscles}`);\n  console.log(`filtered target musclels ${JSON.stringify(filteredTargetMuscles)}`);\n  useEffect(() => {\n    setFilteredTargetMuscles(Object.values(targetMuscles));\n    // Sets exercises state variable\n    const fetchExercises = async () => {\n      try {\n        const exercisesTemp = await exerciseServices.getAll();\n        setExercises(exercisesTemp);\n      } catch (error) {\n        console.log('Error fetching exercises', error);\n      }\n    };\n\n    //Sets mostPopularExercises state variable\n    const fetchMostPopularExercises = async () => {\n      try {\n        const currentMostPopularExercises = await exerciseServices.getMostPopular();\n        setMostPopularExercises(currentMostPopularExercises);\n      } catch (error) {\n        console.log('Error fetching most popular exercises', error);\n      }\n    };\n    fetchExercises();\n    fetchMostPopularExercises();\n  }, []);\n  const handleTargetMuscleInputChange = async event => {\n    const userInputValue = event.target.value.toLowerCase();\n    const filteredTargetMusclesTemp = targetMuscles.filter(targetMuscle => targetMuscle.toLowerCase().startsWith(userInputValue));\n    setFilteredTargetMuscles(filteredTargetMusclesTemp);\n    if (targetMuscles.includes(userInputValue)) {\n      console.log(`${userInputValue} entered`);\n      try {\n        const mostPopularExercisesMG = await exerciseServices.getMostPopular(userInputValue);\n        setMostPopularExercises(mostPopularExercisesMG);\n      } catch (error) {\n        console.log(`Error getting most popular exercises for ${userInputValue}`);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"target-muscle\",\n        children: \"Target Muscle: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        list: \"target-muscles-list\",\n        id: \"target-muscles\",\n        placeholder: \"Choose a target muscle...\",\n        onChange: handleTargetMuscleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"target-muscles-list\",\n        children: filteredTargetMuscles.map((targetMuscle, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: targetMuscle\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: 3,\n            children: \"Most Popular Exercises\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Exercise Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: mostPopularExercises.map((exercise, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", index + 1, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", exercise, \" \"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(ExercisePopularityTable, \"umpe9xyT9wmyd7CpqK8CsdadLCg=\");\n_c = ExercisePopularityTable;\nexport default ExercisePopularityTable;\nvar _c;\n$RefreshReg$(_c, \"ExercisePopularityTable\");","map":{"version":3,"names":["useState","useEffect","exerciseServices","Table","jsxDEV","_jsxDEV","ExercisePopularityTable","targetMuscles","_s","exercises","setExercises","mostPopularExercises","setMostPopularExercises","filteredTargetMuscles","setFilteredTargetMuscles","console","log","JSON","stringify","Object","values","fetchExercises","exercisesTemp","getAll","error","fetchMostPopularExercises","currentMostPopularExercises","getMostPopular","handleTargetMuscleInputChange","event","userInputValue","target","value","toLowerCase","filteredTargetMusclesTemp","filter","targetMuscle","startsWith","includes","mostPopularExercisesMG","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","list","id","placeholder","onChange","map","index","striped","colSpan","exercise","_c","$RefreshReg$"],"sources":["/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/ExercisePopularityTable.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport exerciseServices from '../services/exercises'\nimport Table from 'react-bootstrap/Table'\n\n//Creates a table that displays the 10 most popular exercises based on muscle groups or generally\nconst ExercisePopularityTable = (targetMuscles) => {\n    const [exercises, setExercises] = useState([])\n    const [mostPopularExercises, setMostPopularExercises] = useState([])\n    const [filteredTargetMuscles, setFilteredTargetMuscles] = useState([])\n\n    console.log(`target muscles ${targetMuscles}`)\n    console.log(`filtered target musclels ${JSON.stringify(filteredTargetMuscles)}`)\n\n    useEffect(() => {\n        setFilteredTargetMuscles(Object.values(targetMuscles))\n        // Sets exercises state variable\n        const fetchExercises = async () => {\n            try {\n                const exercisesTemp = await exerciseServices.getAll()\n                setExercises(exercisesTemp)\n            } catch (error) {\n                console.log('Error fetching exercises', error)\n            }\n        }\n       \n        //Sets mostPopularExercises state variable\n        const fetchMostPopularExercises = async () => {\n            try {\n                const currentMostPopularExercises = await exerciseServices.getMostPopular()\n                setMostPopularExercises(currentMostPopularExercises) \n            } catch (error) {\n                console.log('Error fetching most popular exercises', error)\n            }\n        }\n\n        fetchExercises()\n        fetchMostPopularExercises()\n    }, [])\n\n    const handleTargetMuscleInputChange = async (event) => {\n        const userInputValue = event.target.value.toLowerCase()\n        const filteredTargetMusclesTemp = targetMuscles.filter(targetMuscle =>\n            targetMuscle.toLowerCase().startsWith(userInputValue)\n        )\n        setFilteredTargetMuscles(filteredTargetMusclesTemp)\n\n        if (targetMuscles.includes(userInputValue)) {\n            console.log(`${userInputValue} entered`)\n            try {\n                const mostPopularExercisesMG = await exerciseServices.getMostPopular(userInputValue)\n                setMostPopularExercises(mostPopularExercisesMG)\n            } catch (error) {\n                console.log(`Error getting most popular exercises for ${userInputValue}`)\n            }\n        }\n    }\n\n    return (\n        <div>\n            <div>\n                <label htmlFor='target-muscle'>Target Muscle: </label>\n                <input list=\"target-muscles-list\" id=\"target-muscles\" \n                placeholder=\"Choose a target muscle...\" onChange={handleTargetMuscleInputChange}/>\n                <datalist id=\"target-muscles-list\">\n                    {filteredTargetMuscles.map( (targetMuscle, index) => (\n                        <option key={index} value={targetMuscle}/>\n                    ))}\n                </datalist>\n            </div>\n            <Table striped>\n                <thead>\n                    <tr>\n                        <th colSpan={3}>\n                            Most Popular Exercises\n                        </th>\n                    </tr>\n                    <tr>\n                        <th>Rank</th>\n                        <th>Exercise Name</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {mostPopularExercises.map((exercise, index) => {\n                        return (\n                            <tr> \n                                <td> {index+ 1} </td> \n                                <td key={index}> {exercise} </td> \n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </Table>\n        </div>\n    )\n}\n\nexport default ExercisePopularityTable"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}