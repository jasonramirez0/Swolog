{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/jasonramirez/Desktop/fitness-app/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/Users/jasonramirez/Desktop/fitness-app/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/jasonramirez/Desktop/fitness-app/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/jasonramirez/Desktop/fitness-app/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/jasonramirez/Desktop/fitness-app/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/jasonramirez/Desktop/fitness-app/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*!\n* chartjs-plugin-annotation v1.1.0\n* https://www.chartjs.org/chartjs-plugin-annotation/index\n * (c) 2021 chartjs-plugin-annotation Contributors\n * Released under the MIT License\n */\nimport { Element, defaults, Chart, Animations } from 'chart.js';\nimport { distanceBetweenPoints, callback, isFinite, addRoundedRectPath, toTRBLCorners, valueOrDefault, toFont, isArray, toRadians, isObject, clipArea, unclipArea } from 'chart.js/helpers';\nvar clickHooks = ['click', 'dblclick'];\nvar moveHooks = ['enter', 'leave'];\nvar hooks = clickHooks.concat(moveHooks);\nfunction updateListeners(chart, state, options) {\n  var annotations = state.annotations || [];\n  state.listened = false;\n  state.moveListened = false;\n  hooks.forEach(function (hook) {\n    if (typeof options[hook] === 'function') {\n      state.listened = true;\n      state.listeners[hook] = options[hook];\n    }\n  });\n  moveHooks.forEach(function (hook) {\n    if (typeof options[hook] === 'function') {\n      state.moveListened = true;\n    }\n  });\n  if (!state.listened || !state.moveListened) {\n    annotations.forEach(function (scope) {\n      if (!state.listened) {\n        clickHooks.forEach(function (hook) {\n          if (typeof scope[hook] === 'function') {\n            state.listened = true;\n          }\n        });\n      }\n      if (!state.moveListened) {\n        moveHooks.forEach(function (hook) {\n          if (typeof scope[hook] === 'function') {\n            state.listened = true;\n            state.moveListened = true;\n          }\n        });\n      }\n    });\n  }\n}\nfunction handleEvent(chart, state, event, options) {\n  if (state.listened) {\n    switch (event.type) {\n      case 'mousemove':\n      case 'mouseout':\n        handleMoveEvents(chart, state, event);\n        break;\n      case 'click':\n        handleClickEvents(chart, state, event, options);\n        break;\n    }\n  }\n}\nfunction handleMoveEvents(chart, state, event) {\n  if (!state.moveListened) {\n    return;\n  }\n  var element;\n  if (event.type === 'mousemove') {\n    element = getNearestItem(state.elements, event);\n  }\n  var previous = state.hovered;\n  state.hovered = element;\n  dispatchMoveEvents(chart, state, {\n    previous: previous,\n    element: element\n  }, event);\n}\nfunction dispatchMoveEvents(chart, state, elements, event) {\n  var previous = elements.previous,\n    element = elements.element;\n  if (previous && previous !== element) {\n    dispatchEvent(chart, previous.options.leave || state.listeners.leave, previous, event);\n  }\n  if (element && element !== previous) {\n    dispatchEvent(chart, element.options.enter || state.listeners.enter, element, event);\n  }\n}\nfunction handleClickEvents(chart, state, event, options) {\n  var listeners = state.listeners;\n  var element = getNearestItem(state.elements, event);\n  if (element) {\n    var elOpts = element.options;\n    var dblclick = elOpts.dblclick || listeners.dblclick;\n    var click = elOpts.click || listeners.click;\n    if (element.clickTimeout) {\n      // 2nd click before timeout, so its a double click\n      clearTimeout(element.clickTimeout);\n      delete element.clickTimeout;\n      dispatchEvent(chart, dblclick, element, event);\n    } else if (dblclick) {\n      // if there is a dblclick handler, wait for dblClickSpeed ms before deciding its a click\n      element.clickTimeout = setTimeout(function () {\n        delete element.clickTimeout;\n        dispatchEvent(chart, click, element, event);\n      }, options.dblClickSpeed);\n    } else {\n      // no double click handler, just call the click handler directly\n      dispatchEvent(chart, click, element, event);\n    }\n  }\n}\nfunction dispatchEvent(chart, handler, element, event) {\n  callback(handler, [{\n    chart: chart,\n    element: element\n  }, event]);\n}\nfunction getNearestItem(elements, position) {\n  var minDistance = Number.POSITIVE_INFINITY;\n  return elements.filter(function (element) {\n    return element.options.display && element.inRange(position.x, position.y);\n  }).reduce(function (nearestItems, element) {\n    var center = element.getCenterPoint();\n    var distance = distanceBetweenPoints(position, center);\n    if (distance < minDistance) {\n      nearestItems = [element];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      nearestItems.push(element);\n    }\n    return nearestItems;\n  }, []).sort(function (a, b) {\n    return a._index - b._index;\n  }).slice(0, 1)[0]; // return only the top item\n}\n\nvar clamp = function clamp(x, from, to) {\n  return Math.min(to, Math.max(from, x));\n};\nfunction clampAll(obj, from, to) {\n  for (var _i = 0, _Object$keys = Object.keys(obj); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    obj[key] = clamp(obj[key], from, to);\n  }\n  return obj;\n}\nfunction scaleValue(scale, value, fallback) {\n  value = typeof value === 'number' ? value : scale.parse(value);\n  return isFinite(value) ? scale.getPixelForValue(value) : fallback;\n}\n\n/**\n * Rotate a `point` relative to `center` point by `angle`\n * @param {{x: number, y: number}} point - the point to rotate\n * @param {{x: number, y: number}} center - center point for rotation\n * @param {number} angle - angle for rotation, in radians\n * @returns {{x: number, y: number}} rotated point\n */\nfunction rotated(point, center, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var cx = center.x;\n  var cy = center.y;\n  return {\n    x: cx + cos * (point.x - cx) - sin * (point.y - cy),\n    y: cy + sin * (point.x - cx) + cos * (point.y - cy)\n  };\n}\nvar BoxAnnotation = /*#__PURE__*/function (_Element) {\n  _inherits(BoxAnnotation, _Element);\n  var _super = _createSuper(BoxAnnotation);\n  function BoxAnnotation() {\n    _classCallCheck(this, BoxAnnotation);\n    return _super.apply(this, arguments);\n  }\n  _createClass(BoxAnnotation, [{\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      var _this$getProps = this.getProps(['x', 'y', 'width', 'height'], useFinalPosition),\n        x = _this$getProps.x,\n        y = _this$getProps.y,\n        width = _this$getProps.width,\n        height = _this$getProps.height;\n      return mouseX >= x && mouseX <= x + width && mouseY >= y && mouseY <= y + height;\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps2 = this.getProps(['x', 'y', 'width', 'height'], useFinalPosition),\n        x = _this$getProps2.x,\n        y = _this$getProps2.y,\n        width = _this$getProps2.width,\n        height = _this$getProps2.height;\n      return {\n        x: x + width / 2,\n        y: y + height / 2\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var x = this.x,\n        y = this.y,\n        width = this.width,\n        height = this.height,\n        options = this.options;\n      ctx.save();\n      ctx.lineWidth = options.borderWidth;\n      ctx.strokeStyle = options.borderColor;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.setLineDash(options.borderDash);\n      ctx.lineDashOffset = options.borderDashOffset;\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: x,\n        y: y,\n        w: width,\n        h: height,\n        // TODO: v2 remove support for cornerRadius\n        radius: clampAll(toTRBLCorners(valueOrDefault(options.cornerRadius, options.borderRadius)), 0, Math.min(width, height) / 2)\n      });\n      ctx.closePath();\n      ctx.fill();\n\n      // If no border, don't draw it\n      if (options.borderWidth) {\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }, {\n    key: \"resolveElementProperties\",\n    value: function resolveElementProperties(chart, options) {\n      var xScale = chart.scales[options.xScaleID];\n      var yScale = chart.scales[options.yScaleID];\n      var _chart$chartArea = chart.chartArea,\n        y = _chart$chartArea.top,\n        x = _chart$chartArea.left,\n        y2 = _chart$chartArea.bottom,\n        x2 = _chart$chartArea.right;\n      var min, max;\n      if (!xScale && !yScale) {\n        return {\n          options: {}\n        };\n      }\n      if (xScale) {\n        min = scaleValue(xScale, options.xMin, x);\n        max = scaleValue(xScale, options.xMax, x2);\n        x = Math.min(min, max);\n        x2 = Math.max(min, max);\n      }\n      if (yScale) {\n        min = scaleValue(yScale, options.yMin, y2);\n        max = scaleValue(yScale, options.yMax, y);\n        y = Math.min(min, max);\n        y2 = Math.max(min, max);\n      }\n      return {\n        x: x,\n        y: y,\n        x2: x2,\n        y2: y2,\n        width: x2 - x,\n        height: y2 - y\n      };\n    }\n  }]);\n  return BoxAnnotation;\n}(Element);\nBoxAnnotation.id = 'boxAnnotation';\nBoxAnnotation.defaults = {\n  display: true,\n  adjustScaleRange: true,\n  borderDash: [],\n  borderDashOffset: 0,\n  borderWidth: 1,\n  borderRadius: 0,\n  xScaleID: 'x',\n  xMin: undefined,\n  xMax: undefined,\n  yScaleID: 'y',\n  yMin: undefined,\n  yMax: undefined\n};\nBoxAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\nvar PI = Math.PI;\nvar pointInLine = function pointInLine(p1, p2, t) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n};\nvar interpolateX = function interpolateX(y, p1, p2) {\n  return pointInLine(p1, p2, Math.abs((y - p1.y) / (p2.y - p1.y))).x;\n};\nvar interpolateY = function interpolateY(x, p1, p2) {\n  return pointInLine(p1, p2, Math.abs((x - p1.x) / (p2.x - p1.x))).y;\n};\nvar toPercent = function toPercent(s) {\n  return typeof s === 'string' && s.endsWith('%') && parseFloat(s) / 100;\n};\nfunction isLineInArea(_ref, _ref2) {\n  var x = _ref.x,\n    y = _ref.y,\n    x2 = _ref.x2,\n    y2 = _ref.y2;\n  var top = _ref2.top,\n    right = _ref2.right,\n    bottom = _ref2.bottom,\n    left = _ref2.left;\n  return !(x < left && x2 < left || x > right && x2 > right || y < top && y2 < top || y > bottom && y2 > bottom);\n}\nfunction limitPointToArea(_ref3, p2, _ref4) {\n  var x = _ref3.x,\n    y = _ref3.y;\n  var top = _ref4.top,\n    right = _ref4.right,\n    bottom = _ref4.bottom,\n    left = _ref4.left;\n  if (x < left) {\n    y = interpolateY(left, {\n      x: x,\n      y: y\n    }, p2);\n    x = left;\n  }\n  if (x > right) {\n    y = interpolateY(right, {\n      x: x,\n      y: y\n    }, p2);\n    x = right;\n  }\n  if (y < top) {\n    x = interpolateX(top, {\n      x: x,\n      y: y\n    }, p2);\n    y = top;\n  }\n  if (y > bottom) {\n    x = interpolateX(bottom, {\n      x: x,\n      y: y\n    }, p2);\n    y = bottom;\n  }\n  return {\n    x: x,\n    y: y\n  };\n}\nfunction limitLineToArea(p1, p2, area) {\n  var _limitPointToArea = limitPointToArea(p1, p2, area),\n    x = _limitPointToArea.x,\n    y = _limitPointToArea.y;\n  var _limitPointToArea2 = limitPointToArea(p2, p1, area),\n    x2 = _limitPointToArea2.x,\n    y2 = _limitPointToArea2.y;\n  return {\n    x: x,\n    y: y,\n    x2: x2,\n    y2: y2,\n    width: Math.abs(x2 - x),\n    height: Math.abs(y2 - y)\n  };\n}\nvar LineAnnotation = /*#__PURE__*/function (_Element2) {\n  _inherits(LineAnnotation, _Element2);\n  var _super2 = _createSuper(LineAnnotation);\n  function LineAnnotation() {\n    _classCallCheck(this, LineAnnotation);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(LineAnnotation, [{\n    key: \"intersects\",\n    value: function intersects(x, y) {\n      var epsilon = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.001;\n      // Adapted from https://stackoverflow.com/a/6853926/25507\n      var sqr = function sqr(v) {\n        return v * v;\n      };\n      var x1 = this.x,\n        y1 = this.y,\n        x2 = this.x2,\n        y2 = this.y2;\n      var dx = x2 - x1;\n      var dy = y2 - y1;\n      var lenSq = sqr(dx) + sqr(dy);\n      var t = lenSq === 0 ? -1 : ((x - x1) * dx + (y - y1) * dy) / lenSq;\n      var xx, yy;\n      if (t < 0) {\n        xx = x1;\n        yy = y1;\n      } else if (t > 1) {\n        xx = x2;\n        yy = y2;\n      } else {\n        xx = x1 + t * dx;\n        yy = y1 + t * dy;\n      }\n      return sqr(x - xx) + sqr(y - yy) < epsilon;\n    }\n  }, {\n    key: \"labelIsVisible\",\n    value: function labelIsVisible(chartArea) {\n      var label = this.options.label;\n      var inside = !chartArea || isLineInArea(this, chartArea);\n      return inside && label && label.enabled && label.content;\n    }\n  }, {\n    key: \"isOnLabel\",\n    value: function isOnLabel(mouseX, mouseY) {\n      var labelRect = this.labelRect;\n      if (!labelRect || !this.labelIsVisible()) {\n        return false;\n      }\n      var _rotated = rotated({\n          x: mouseX,\n          y: mouseY\n        }, labelRect, -labelRect.rotation),\n        x = _rotated.x,\n        y = _rotated.y;\n      var w2 = labelRect.width / 2;\n      var h2 = labelRect.height / 2;\n      return x >= labelRect.x - w2 && x <= labelRect.x + w2 && y >= labelRect.y - h2 && y <= labelRect.y + h2;\n    }\n  }, {\n    key: \"inRange\",\n    value: function inRange(x, y) {\n      var epsilon = this.options.borderWidth || 1;\n      return this.intersects(x, y, epsilon) || this.isOnLabel(x, y);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint() {\n      return {\n        x: (this.x2 + this.x) / 2,\n        y: (this.y2 + this.y) / 2\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var x = this.x,\n        y = this.y,\n        x2 = this.x2,\n        y2 = this.y2,\n        options = this.options;\n      ctx.save();\n      ctx.lineWidth = options.borderWidth;\n      ctx.strokeStyle = options.borderColor;\n      ctx.setLineDash(options.borderDash);\n      ctx.lineDashOffset = options.borderDashOffset;\n\n      // Draw\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n  }, {\n    key: \"drawLabel\",\n    value: function drawLabel(ctx, chartArea) {\n      if (this.labelIsVisible(chartArea)) {\n        ctx.save();\n        _drawLabel(ctx, this, chartArea);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"resolveElementProperties\",\n    value: function resolveElementProperties(chart, options) {\n      var scale = chart.scales[options.scaleID];\n      var _chart$chartArea2 = chart.chartArea,\n        y = _chart$chartArea2.top,\n        x = _chart$chartArea2.left,\n        y2 = _chart$chartArea2.bottom,\n        x2 = _chart$chartArea2.right;\n      var min, max;\n      if (scale) {\n        min = scaleValue(scale, options.value, NaN);\n        max = scaleValue(scale, options.endValue, min);\n        if (scale.isHorizontal()) {\n          x = min;\n          x2 = max;\n        } else {\n          y = min;\n          y2 = max;\n        }\n      } else {\n        var xScale = chart.scales[options.xScaleID];\n        var yScale = chart.scales[options.yScaleID];\n        if (xScale) {\n          x = scaleValue(xScale, options.xMin, x);\n          x2 = scaleValue(xScale, options.xMax, x2);\n        }\n        if (yScale) {\n          y = scaleValue(yScale, options.yMin, y);\n          y2 = scaleValue(yScale, options.yMax, y2);\n        }\n      }\n      var inside = isLineInArea({\n        x: x,\n        y: y,\n        x2: x2,\n        y2: y2\n      }, chart.chartArea);\n      return inside ? limitLineToArea({\n        x: x,\n        y: y\n      }, {\n        x: x2,\n        y: y2\n      }, chart.chartArea) : {\n        x: x,\n        y: y,\n        x2: x2,\n        y2: y2,\n        width: Math.abs(x2 - x),\n        height: Math.abs(y2 - y)\n      };\n    }\n  }]);\n  return LineAnnotation;\n}(Element);\nLineAnnotation.id = 'lineAnnotation';\nLineAnnotation.defaults = {\n  display: true,\n  adjustScaleRange: true,\n  borderWidth: 2,\n  borderDash: [],\n  borderDashOffset: 0,\n  label: {\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    borderCapStyle: 'butt',\n    borderColor: 'black',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderRadius: 6,\n    borderWidth: 0,\n    drawTime: undefined,\n    font: {\n      family: undefined,\n      lineHeight: undefined,\n      size: undefined,\n      style: undefined,\n      weight: 'bold'\n    },\n    color: '#fff',\n    xPadding: 6,\n    yPadding: 6,\n    rotation: 0,\n    position: 'center',\n    xAdjust: 0,\n    yAdjust: 0,\n    textAlign: 'center',\n    width: undefined,\n    height: undefined,\n    enabled: false,\n    content: null\n  },\n  value: undefined,\n  endValue: undefined,\n  scaleID: undefined,\n  xScaleID: 'x',\n  xMin: undefined,\n  xMax: undefined,\n  yScaleID: 'y',\n  yMin: undefined,\n  yMax: undefined\n};\nLineAnnotation.defaultRoutes = {\n  borderColor: 'color'\n};\nfunction calculateAutoRotation(line) {\n  var x = line.x,\n    y = line.y,\n    x2 = line.x2,\n    y2 = line.y2;\n  var rotation = Math.atan2(y2 - y, x2 - x);\n  // Flip the rotation if it goes > PI/2 or < -PI/2, so label stays upright\n  return rotation > PI / 2 ? rotation - PI : rotation < PI / -2 ? rotation + PI : rotation;\n}\nfunction _drawLabel(ctx, line, chartArea) {\n  var label = line.options.label;\n  var borderWidth = label.borderWidth,\n    xPadding = label.xPadding,\n    yPadding = label.yPadding,\n    content = label.content;\n  var font = toFont(label.font);\n  ctx.font = font.string;\n  var _measureLabel = measureLabel(ctx, label, font),\n    width = _measureLabel.width,\n    height = _measureLabel.height;\n  var rect = line.labelRect = calculateLabelPosition(line, width, height, chartArea);\n  ctx.translate(rect.x, rect.y);\n  ctx.rotate(rect.rotation);\n  ctx.fillStyle = label.backgroundColor;\n  var stroke = setBorderStyle(ctx, label);\n  ctx.beginPath();\n  addRoundedRectPath(ctx, {\n    x: -(width / 2),\n    y: -(height / 2),\n    w: width,\n    h: height,\n    // TODO: v2 remove support for cornerRadius\n    radius: clampAll(toTRBLCorners(valueOrDefault(label.cornerRadius, label.borderRadius)), 0, Math.min(width, height) / 2)\n  });\n  ctx.closePath();\n  ctx.fill();\n  if (stroke) {\n    ctx.stroke();\n  }\n  ctx.fillStyle = label.color;\n  if (content instanceof Image) {\n    var x = -(width / 2) + xPadding + borderWidth / 2;\n    var y = -(height / 2) + yPadding + borderWidth / 2;\n    ctx.drawImage(content, x, y, width - 2 * xPadding - borderWidth, height - 2 * yPadding - borderWidth);\n  } else {\n    var labels = isArray(content) ? content : [content];\n    var _x = calculateLabelXAlignment(label, width);\n    var _y = -(labels.length - 1) * font.lineHeight / 2;\n    ctx.textBaseline = 'middle';\n    ctx.textAlign = label.textAlign;\n    labels.forEach(function (l, i) {\n      return ctx.fillText(l, _x, _y + i * font.lineHeight);\n    });\n  }\n}\nfunction setBorderStyle(ctx, options) {\n  if (options.borderWidth) {\n    ctx.lineCap = options.borderCapStyle;\n    ctx.setLineDash(options.borderDash);\n    ctx.lineDashOffset = options.borderDashOffset;\n    ctx.lineJoin = options.borderJoinStyle;\n    ctx.lineWidth = options.borderWidth;\n    ctx.strokeStyle = options.borderColor;\n    return true;\n  }\n}\nfunction calculateLabelXAlignment(label, width) {\n  var textAlign = label.textAlign,\n    xPadding = label.xPadding,\n    borderWidth = label.borderWidth;\n  if (textAlign === 'start') {\n    return -(width / 2) + xPadding + borderWidth / 2;\n  } else if (textAlign === 'end') {\n    return +(width / 2) - xPadding - borderWidth / 2;\n  }\n  return 0;\n}\nfunction getImageSize(size, value) {\n  if (typeof value === 'number') {\n    return value;\n  } else if (typeof value === 'string') {\n    return toPercent(value) * size;\n  }\n  return size;\n}\nvar widthCache = new Map();\nfunction measureLabel(ctx, label, font) {\n  var content = label.content;\n  var borderWidth = label.borderWidth;\n  if (content instanceof Image) {\n    return {\n      width: getImageSize(content.width, label.width) + 2 * label.xPadding + borderWidth,\n      height: getImageSize(content.height, label.height) + 2 * label.yPadding + borderWidth\n    };\n  }\n  var lines = isArray(content) ? content : [content];\n  var count = lines.length;\n  var width = 0;\n  for (var i = 0; i < count; i++) {\n    var text = lines[i];\n    var key = font.string + '-' + text;\n    if (!widthCache.has(key)) {\n      widthCache.set(key, ctx.measureText(text).width);\n    }\n    width = Math.max(width, widthCache.get(key));\n  }\n  width += 2 * label.xPadding + borderWidth;\n  return {\n    width: width,\n    height: count * font.lineHeight + label.yPadding * 2 + borderWidth\n  };\n}\nfunction calculateLabelPosition(line, width, height, chartArea) {\n  var label = line.options.label;\n  var xAdjust = label.xAdjust,\n    yAdjust = label.yAdjust,\n    xPadding = label.xPadding,\n    yPadding = label.yPadding,\n    position = label.position;\n  var p1 = {\n    x: line.x,\n    y: line.y\n  };\n  var p2 = {\n    x: line.x2,\n    y: line.y2\n  };\n  var rotation = label.rotation === 'auto' ? calculateAutoRotation(line) : toRadians(label.rotation);\n  var size = rotatedSize(width, height, rotation);\n  var t = calculateT(line, position, size, chartArea);\n  var pt = pointInLine(p1, p2, t);\n  var xCoordinateSizes = {\n    size: size.w,\n    min: chartArea.left,\n    max: chartArea.right,\n    padding: xPadding\n  };\n  var yCoordinateSizes = {\n    size: size.h,\n    min: chartArea.top,\n    max: chartArea.bottom,\n    padding: yPadding\n  };\n  return {\n    x: adjustLabelCoordinate(pt.x, xCoordinateSizes) + xAdjust,\n    y: adjustLabelCoordinate(pt.y, yCoordinateSizes) + yAdjust,\n    width: width,\n    height: height,\n    rotation: rotation\n  };\n}\nfunction rotatedSize(width, height, rotation) {\n  var cos = Math.cos(rotation);\n  var sin = Math.sin(rotation);\n  return {\n    w: Math.abs(width * cos) + Math.abs(height * sin),\n    h: Math.abs(width * sin) + Math.abs(height * cos)\n  };\n}\nfunction calculateT(line, position, rotSize, chartArea) {\n  var t = 0.5;\n  var space = spaceAround(line, chartArea);\n  var label = line.options.label;\n  if (position === 'start') {\n    t = calculateTAdjust({\n      w: line.x2 - line.x,\n      h: line.y2 - line.y\n    }, rotSize, label, space);\n  } else if (position === 'end') {\n    t = 1 - calculateTAdjust({\n      w: line.x - line.x2,\n      h: line.y - line.y2\n    }, rotSize, label, space);\n  }\n  return t;\n}\nfunction calculateTAdjust(lineSize, labelSize, label, space) {\n  var xPadding = label.xPadding,\n    yPadding = label.yPadding;\n  var lineW = lineSize.w * space.dx;\n  var lineH = lineSize.h * space.dy;\n  var x = lineW > 0 && (labelSize.w / 2 + xPadding - space.x) / lineW;\n  var y = lineH > 0 && (labelSize.h / 2 + yPadding - space.y) / lineH;\n  return clamp(Math.max(x, y), 0, 0.25);\n}\nfunction spaceAround(line, chartArea) {\n  var x = line.x,\n    x2 = line.x2,\n    y = line.y,\n    y2 = line.y2;\n  var t = Math.min(y, y2) - chartArea.top;\n  var l = Math.min(x, x2) - chartArea.left;\n  var b = chartArea.bottom - Math.max(y, y2);\n  var r = chartArea.right - Math.max(x, x2);\n  return {\n    x: Math.min(l, r),\n    y: Math.min(t, b),\n    dx: l < r ? 1 : -1,\n    dy: t < b ? 1 : -1\n  };\n}\nfunction adjustLabelCoordinate(coordinate, labelSizes) {\n  var size = labelSizes.size,\n    min = labelSizes.min,\n    max = labelSizes.max,\n    padding = labelSizes.padding;\n  var halfSize = size / 2;\n  if (size > max - min) {\n    // if it does not fit, display as much as possible\n    return (max + min) / 2;\n  }\n  if (min >= coordinate - padding - halfSize) {\n    coordinate = min + padding + halfSize;\n  }\n  if (max <= coordinate + padding + halfSize) {\n    coordinate = max - padding - halfSize;\n  }\n  return coordinate;\n}\nvar EllipseAnnotation = /*#__PURE__*/function (_BoxAnnotation) {\n  _inherits(EllipseAnnotation, _BoxAnnotation);\n  var _super3 = _createSuper(EllipseAnnotation);\n  function EllipseAnnotation() {\n    _classCallCheck(this, EllipseAnnotation);\n    return _super3.apply(this, arguments);\n  }\n  _createClass(EllipseAnnotation, [{\n    key: \"inRange\",\n    value: function inRange(x, y) {\n      return pointInEllipse({\n        x: x,\n        y: y\n      }, this);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var width = this.width,\n        height = this.height,\n        options = this.options;\n      var center = this.getCenterPoint();\n      ctx.save();\n      ctx.translate(center.x, center.y);\n      if (options.rotation) {\n        ctx.rotate(toRadians(options.rotation));\n      }\n      ctx.beginPath();\n      ctx.lineWidth = options.borderWidth;\n      ctx.strokeStyle = options.borderColor;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.setLineDash(options.borderDash);\n      ctx.lineDashOffset = options.borderDashOffset;\n      ctx.ellipse(0, 0, height / 2, width / 2, Math.PI / 2, 0, 2 * Math.PI);\n      ctx.fill();\n      ctx.stroke();\n      ctx.restore();\n    }\n  }]);\n  return EllipseAnnotation;\n}(BoxAnnotation);\nEllipseAnnotation.id = 'ellipseAnnotation';\nEllipseAnnotation.defaults = {\n  display: true,\n  adjustScaleRange: true,\n  borderDash: [],\n  borderDashOffset: 0,\n  borderWidth: 1,\n  rotation: 0,\n  xScaleID: 'x',\n  xMin: undefined,\n  xMax: undefined,\n  yScaleID: 'y',\n  yMin: undefined,\n  yMax: undefined\n};\nEllipseAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\nfunction pointInEllipse(p, ellipse) {\n  var width = ellipse.width,\n    height = ellipse.height;\n  var center = ellipse.getCenterPoint(true);\n  var xRadius = width / 2;\n  var yRadius = height / 2;\n  if (xRadius <= 0 || yRadius <= 0) {\n    return false;\n  }\n  return Math.pow(p.x - center.x, 2) / Math.pow(xRadius, 2) + Math.pow(p.y - center.y, 2) / Math.pow(yRadius, 2) <= 1.0;\n}\nvar PointAnnotation = /*#__PURE__*/function (_Element3) {\n  _inherits(PointAnnotation, _Element3);\n  var _super4 = _createSuper(PointAnnotation);\n  function PointAnnotation() {\n    _classCallCheck(this, PointAnnotation);\n    return _super4.apply(this, arguments);\n  }\n  _createClass(PointAnnotation, [{\n    key: \"inRange\",\n    value: function inRange(x, y) {\n      var width = this.width,\n        options = this.options;\n      var center = this.getCenterPoint(true);\n      var radius = width / 2 + options.borderWidth;\n      if (radius <= 0) {\n        return false;\n      }\n      return Math.pow(x - center.x, 2) + Math.pow(y - center.y, 2) <= Math.pow(radius, 2);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps3 = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps3.x,\n        y = _this$getProps3.y;\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var x = this.x,\n        y = this.y,\n        width = this.width,\n        options = this.options;\n      ctx.save();\n      ctx.lineWidth = options.borderWidth;\n      ctx.strokeStyle = options.borderColor;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.setLineDash(options.borderDash);\n      ctx.lineDashOffset = options.borderDashOffset;\n      ctx.beginPath();\n      ctx.arc(x, y, width / 2, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.stroke();\n      ctx.restore();\n    }\n  }, {\n    key: \"resolveElementProperties\",\n    value: function resolveElementProperties(chart, options) {\n      var chartArea = chart.chartArea,\n        scales = chart.scales;\n      var xScale = scales[options.xScaleID];\n      var yScale = scales[options.yScaleID];\n      var x = chartArea.width / 2;\n      var y = chartArea.height / 2;\n      if (xScale) {\n        x = scaleValue(xScale, options.xValue, x);\n      }\n      if (yScale) {\n        y = scaleValue(yScale, options.yValue, y);\n      }\n      return {\n        x: x,\n        y: y,\n        width: options.radius * 2,\n        height: options.radius * 2\n      };\n    }\n  }]);\n  return PointAnnotation;\n}(Element);\nPointAnnotation.id = 'pointAnnotation';\nPointAnnotation.defaults = {\n  display: true,\n  adjustScaleRange: true,\n  borderDash: [],\n  borderDashOffset: 0,\n  borderWidth: 1,\n  radius: 10,\n  xScaleID: 'x',\n  xValue: undefined,\n  yScaleID: 'y',\n  yValue: undefined\n};\nPointAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\nvar version = \"1.1.0\";\nvar chartStates = new Map();\nvar annotationTypes = {\n  box: BoxAnnotation,\n  line: LineAnnotation,\n  ellipse: EllipseAnnotation,\n  point: PointAnnotation\n};\nObject.keys(annotationTypes).forEach(function (key) {\n  defaults.describe(\"elements.\".concat(annotationTypes[key].id), {\n    _fallback: 'plugins.annotation'\n  });\n});\nvar annotation = {\n  id: 'annotation',\n  version: version,\n  afterRegister: function afterRegister() {\n    Chart.register(annotationTypes);\n  },\n  afterUnregister: function afterUnregister() {\n    Chart.unregister(annotationTypes);\n  },\n  beforeInit: function beforeInit(chart) {\n    chartStates.set(chart, {\n      annotations: [],\n      elements: [],\n      listeners: {},\n      listened: false,\n      moveListened: false\n    });\n  },\n  beforeUpdate: function beforeUpdate(chart, args, options) {\n    var state = chartStates.get(chart);\n    var annotations = state.annotations = [];\n    var annotationOptions = options.annotations;\n    if (isObject(annotationOptions)) {\n      Object.keys(annotationOptions).forEach(function (key) {\n        var value = annotationOptions[key];\n        if (isObject(value)) {\n          value.id = key;\n          annotations.push(value);\n        }\n      });\n    } else if (isArray(annotationOptions)) {\n      annotations.push.apply(annotations, _toConsumableArray(annotationOptions));\n    }\n  },\n  afterDataLimits: function afterDataLimits(chart, args) {\n    var state = chartStates.get(chart);\n    adjustScaleRange(chart, args.scale, state.annotations.filter(function (a) {\n      return a.display && a.adjustScaleRange;\n    }));\n  },\n  afterUpdate: function afterUpdate(chart, args, options) {\n    var state = chartStates.get(chart);\n    updateListeners(chart, state, options);\n    updateElements(chart, state, options, args.mode);\n  },\n  beforeDatasetsDraw: function beforeDatasetsDraw(chart) {\n    draw(chart, 'beforeDatasetsDraw');\n  },\n  afterDatasetsDraw: function afterDatasetsDraw(chart) {\n    draw(chart, 'afterDatasetsDraw');\n  },\n  beforeDraw: function beforeDraw(chart) {\n    draw(chart, 'beforeDraw');\n  },\n  afterDraw: function afterDraw(chart) {\n    draw(chart, 'afterDraw');\n  },\n  beforeEvent: function beforeEvent(chart, args, options) {\n    var state = chartStates.get(chart);\n    handleEvent(chart, state, args.event, options);\n  },\n  destroy: function destroy(chart) {\n    chartStates.delete(chart);\n  },\n  _getState: function _getState(chart) {\n    return chartStates.get(chart);\n  },\n  defaults: {\n    drawTime: 'afterDatasetsDraw',\n    dblClickSpeed: 350,\n    // ms\n    animations: {\n      numbers: {\n        properties: ['x', 'y', 'x2', 'y2', 'width', 'height'],\n        type: 'number'\n      }\n    },\n    label: {\n      drawTime: null\n    }\n  },\n  descriptors: {\n    _indexable: false,\n    _scriptable: function _scriptable(prop) {\n      return !hooks.includes(prop);\n    },\n    annotations: {\n      _allKeys: false,\n      _fallback: function _fallback(prop, opts) {\n        return \"elements.\".concat(annotationTypes[opts.type || 'line'].id);\n      }\n    }\n  },\n  additionalOptionScopes: ['']\n};\nvar directUpdater = {\n  update: Object.assign\n};\nfunction resolveAnimations(chart, animOpts, mode) {\n  if (mode === 'reset' || mode === 'none' || mode === 'resize') {\n    return directUpdater;\n  }\n  return new Animations(chart, animOpts);\n}\nfunction updateElements(chart, state, options, mode) {\n  var animations = resolveAnimations(chart, options.animations, mode);\n  var annotations = state.annotations;\n  var elements = resyncElements(state.elements, annotations);\n  for (var i = 0; i < annotations.length; i++) {\n    var _annotation = annotations[i];\n    var el = elements[i];\n    var elType = annotationTypes[_annotation.type] || annotationTypes.line;\n    if (!el || !(el instanceof elType)) {\n      el = elements[i] = new elType();\n    }\n    var opts = resolveAnnotationOptions(_annotation.setContext(getContext(chart, el, _annotation)));\n    var properties = el.resolveElementProperties(chart, opts);\n    properties.skip = isNaN(properties.x) || isNaN(properties.y);\n    properties.options = opts;\n    animations.update(el, properties);\n  }\n}\nfunction resolveAnnotationOptions(resolver) {\n  var elType = annotationTypes[resolver.type] || annotationTypes.line;\n  var result = {};\n  result.id = resolver.id;\n  result.type = resolver.type;\n  result.drawTime = resolver.drawTime;\n  Object.assign(result, resolveObj(resolver, elType.defaults), resolveObj(resolver, elType.defaultRoutes));\n  var _iterator = _createForOfIteratorHelper(hooks),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var hook = _step.value;\n      result[hook] = resolver[hook];\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return result;\n}\nfunction resolveObj(resolver, defs) {\n  var result = {};\n  for (var _i2 = 0, _Object$keys2 = Object.keys(defs); _i2 < _Object$keys2.length; _i2++) {\n    var name = _Object$keys2[_i2];\n    var optDefs = defs[name];\n    var value = resolver[name];\n    result[name] = isObject(optDefs) ? resolveObj(value, optDefs) : value;\n  }\n  return result;\n}\nfunction getContext(chart, element, annotation) {\n  return element.$context || (element.$context = Object.assign(Object.create(chart.getContext()), {\n    element: element,\n    id: annotation.id,\n    type: 'annotation'\n  }));\n}\nfunction resyncElements(elements, annotations) {\n  var count = annotations.length;\n  var start = elements.length;\n  if (start < count) {\n    var add = count - start;\n    elements.splice.apply(elements, [start, 0].concat(_toConsumableArray(new Array(add))));\n  } else if (start > count) {\n    elements.splice(count, start - count);\n  }\n  return elements;\n}\nfunction draw(chart, caller) {\n  var ctx = chart.ctx,\n    chartArea = chart.chartArea;\n  var state = chartStates.get(chart);\n  var elements = state.elements.filter(function (el) {\n    return !el.skip && el.options.display;\n  });\n  clipArea(ctx, chartArea);\n  elements.forEach(function (el) {\n    if (el.options.drawTime === caller) {\n      el.draw(ctx);\n    }\n  });\n  unclipArea(ctx);\n  elements.forEach(function (el) {\n    if ('drawLabel' in el && el.options.label && (el.options.label.drawTime || el.options.drawTime) === caller) {\n      el.drawLabel(ctx, chartArea);\n    }\n  });\n}\nfunction adjustScaleRange(chart, scale, annotations) {\n  var range = getScaleLimits(scale, annotations);\n  var changed = false;\n  if (isFinite(range.min) && typeof scale.options.min === 'undefined' && typeof scale.options.suggestedMin === 'undefined') {\n    changed = scale.min !== range.min;\n    scale.min = range.min;\n  }\n  if (isFinite(range.max) && typeof scale.options.max === 'undefined' && typeof scale.options.suggestedMax === 'undefined') {\n    changed = scale.max !== range.max;\n    scale.max = range.max;\n  }\n  if (changed && typeof scale.handleTickRangeOptions === 'function') {\n    scale.handleTickRangeOptions();\n  }\n}\nfunction getScaleLimits(scale, annotations) {\n  var axis = scale.axis;\n  var scaleID = scale.id;\n  var scaleIDOption = axis + 'ScaleID';\n  var min = valueOrDefault(scale.min, Number.NEGATIVE_INFINITY);\n  var max = valueOrDefault(scale.max, Number.POSITIVE_INFINITY);\n  var _iterator2 = _createForOfIteratorHelper(annotations),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var _annotation2 = _step2.value;\n      if (_annotation2.scaleID === scaleID) {\n        for (var _i3 = 0, _arr = ['value', 'endValue']; _i3 < _arr.length; _i3++) {\n          var prop = _arr[_i3];\n          var raw = _annotation2[prop];\n          if (raw) {\n            var value = scale.parse(raw);\n            min = Math.min(min, value);\n            max = Math.max(max, value);\n          }\n        }\n      } else if (_annotation2[scaleIDOption] === scaleID) {\n        for (var _i4 = 0, _arr2 = [axis + 'Min', axis + 'Max', axis + 'Value']; _i4 < _arr2.length; _i4++) {\n          var _prop = _arr2[_i4];\n          var _raw = _annotation2[_prop];\n          if (_raw) {\n            var _value = scale.parse(_raw);\n            min = Math.min(min, _value);\n            max = Math.max(max, _value);\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return {\n    min: min,\n    max: max\n  };\n}\nexport { annotation as default };","map":{"version":3,"names":["Element","defaults","Chart","Animations","distanceBetweenPoints","callback","isFinite","addRoundedRectPath","toTRBLCorners","valueOrDefault","toFont","isArray","toRadians","isObject","clipArea","unclipArea","clickHooks","moveHooks","hooks","concat","updateListeners","chart","state","options","annotations","listened","moveListened","forEach","hook","listeners","scope","handleEvent","event","type","handleMoveEvents","handleClickEvents","element","getNearestItem","elements","previous","hovered","dispatchMoveEvents","dispatchEvent","leave","enter","elOpts","dblclick","click","clickTimeout","clearTimeout","setTimeout","dblClickSpeed","handler","position","minDistance","Number","POSITIVE_INFINITY","filter","display","inRange","x","y","reduce","nearestItems","center","getCenterPoint","distance","push","sort","a","b","_index","slice","clamp","from","to","Math","min","max","clampAll","obj","_i","_Object$keys","Object","keys","length","key","scaleValue","scale","value","fallback","parse","getPixelForValue","rotated","point","angle","cos","sin","cx","cy","BoxAnnotation","_Element","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","mouseX","mouseY","useFinalPosition","_this$getProps","getProps","width","height","_this$getProps2","draw","ctx","save","lineWidth","borderWidth","strokeStyle","borderColor","fillStyle","backgroundColor","setLineDash","borderDash","lineDashOffset","borderDashOffset","beginPath","w","h","radius","cornerRadius","borderRadius","closePath","fill","stroke","restore","resolveElementProperties","xScale","scales","xScaleID","yScale","yScaleID","_chart$chartArea","chartArea","top","left","y2","bottom","x2","right","xMin","xMax","yMin","yMax","id","adjustScaleRange","undefined","defaultRoutes","PI","pointInLine","p1","p2","t","interpolateX","abs","interpolateY","toPercent","s","endsWith","parseFloat","isLineInArea","_ref","_ref2","limitPointToArea","_ref3","_ref4","limitLineToArea","area","_limitPointToArea","_limitPointToArea2","LineAnnotation","_Element2","_super2","intersects","epsilon","sqr","v","x1","y1","dx","dy","lenSq","xx","yy","labelIsVisible","label","inside","enabled","content","isOnLabel","labelRect","_rotated","rotation","w2","h2","moveTo","lineTo","drawLabel","scaleID","_chart$chartArea2","NaN","endValue","isHorizontal","borderCapStyle","borderJoinStyle","drawTime","font","family","lineHeight","size","style","weight","color","xPadding","yPadding","xAdjust","yAdjust","textAlign","calculateAutoRotation","line","atan2","string","_measureLabel","measureLabel","rect","calculateLabelPosition","translate","rotate","setBorderStyle","Image","drawImage","labels","calculateLabelXAlignment","textBaseline","l","i","fillText","lineCap","lineJoin","getImageSize","widthCache","Map","lines","count","text","has","set","measureText","get","rotatedSize","calculateT","pt","xCoordinateSizes","padding","yCoordinateSizes","adjustLabelCoordinate","rotSize","space","spaceAround","calculateTAdjust","lineSize","labelSize","lineW","lineH","r","coordinate","labelSizes","halfSize","EllipseAnnotation","_BoxAnnotation","_super3","pointInEllipse","ellipse","p","xRadius","yRadius","pow","PointAnnotation","_Element3","_super4","_this$getProps3","arc","xValue","yValue","version","chartStates","annotationTypes","box","describe","_fallback","annotation","afterRegister","register","afterUnregister","unregister","beforeInit","beforeUpdate","args","annotationOptions","_toConsumableArray","afterDataLimits","afterUpdate","updateElements","mode","beforeDatasetsDraw","afterDatasetsDraw","beforeDraw","afterDraw","beforeEvent","destroy","delete","_getState","animations","numbers","properties","descriptors","_indexable","_scriptable","prop","includes","_allKeys","opts","additionalOptionScopes","directUpdater","update","assign","resolveAnimations","animOpts","resyncElements","el","elType","resolveAnnotationOptions","setContext","getContext","skip","isNaN","resolver","result","resolveObj","_iterator","_createForOfIteratorHelper","_step","n","done","err","e","f","defs","_i2","_Object$keys2","name","optDefs","$context","create","start","add","splice","Array","caller","range","getScaleLimits","changed","suggestedMin","suggestedMax","handleTickRangeOptions","axis","scaleIDOption","NEGATIVE_INFINITY","_iterator2","_step2","_i3","_arr","raw","_i4","_arr2","default"],"sources":["/Users/jasonramirez/Desktop/fitness-app/frontend/node_modules/chartjs-plugin-annotation/dist/chartjs-plugin-annotation.esm.js"],"sourcesContent":["/*!\n* chartjs-plugin-annotation v1.1.0\n* https://www.chartjs.org/chartjs-plugin-annotation/index\n * (c) 2021 chartjs-plugin-annotation Contributors\n * Released under the MIT License\n */\nimport { Element, defaults, Chart, Animations } from 'chart.js';\nimport { distanceBetweenPoints, callback, isFinite, addRoundedRectPath, toTRBLCorners, valueOrDefault, toFont, isArray, toRadians, isObject, clipArea, unclipArea } from 'chart.js/helpers';\n\nconst clickHooks = ['click', 'dblclick'];\nconst moveHooks = ['enter', 'leave'];\nconst hooks = clickHooks.concat(moveHooks);\n\nfunction updateListeners(chart, state, options) {\n  const annotations = state.annotations || [];\n  state.listened = false;\n  state.moveListened = false;\n\n  hooks.forEach(hook => {\n    if (typeof options[hook] === 'function') {\n      state.listened = true;\n      state.listeners[hook] = options[hook];\n    }\n  });\n  moveHooks.forEach(hook => {\n    if (typeof options[hook] === 'function') {\n      state.moveListened = true;\n    }\n  });\n\n  if (!state.listened || !state.moveListened) {\n    annotations.forEach(scope => {\n      if (!state.listened) {\n        clickHooks.forEach(hook => {\n          if (typeof scope[hook] === 'function') {\n            state.listened = true;\n          }\n        });\n      }\n      if (!state.moveListened) {\n        moveHooks.forEach(hook => {\n          if (typeof scope[hook] === 'function') {\n            state.listened = true;\n            state.moveListened = true;\n          }\n        });\n      }\n    });\n  }\n}\n\nfunction handleEvent(chart, state, event, options) {\n  if (state.listened) {\n    switch (event.type) {\n    case 'mousemove':\n    case 'mouseout':\n      handleMoveEvents(chart, state, event);\n      break;\n    case 'click':\n      handleClickEvents(chart, state, event, options);\n      break;\n    }\n  }\n}\n\nfunction handleMoveEvents(chart, state, event) {\n  if (!state.moveListened) {\n    return;\n  }\n\n  let element;\n\n  if (event.type === 'mousemove') {\n    element = getNearestItem(state.elements, event);\n  }\n\n  const previous = state.hovered;\n  state.hovered = element;\n\n  dispatchMoveEvents(chart, state, {previous, element}, event);\n}\n\nfunction dispatchMoveEvents(chart, state, elements, event) {\n  const {previous, element} = elements;\n  if (previous && previous !== element) {\n    dispatchEvent(chart, previous.options.leave || state.listeners.leave, previous, event);\n  }\n  if (element && element !== previous) {\n    dispatchEvent(chart, element.options.enter || state.listeners.enter, element, event);\n  }\n}\n\nfunction handleClickEvents(chart, state, event, options) {\n  const listeners = state.listeners;\n  const element = getNearestItem(state.elements, event);\n  if (element) {\n    const elOpts = element.options;\n    const dblclick = elOpts.dblclick || listeners.dblclick;\n    const click = elOpts.click || listeners.click;\n    if (element.clickTimeout) {\n      // 2nd click before timeout, so its a double click\n      clearTimeout(element.clickTimeout);\n      delete element.clickTimeout;\n      dispatchEvent(chart, dblclick, element, event);\n    } else if (dblclick) {\n      // if there is a dblclick handler, wait for dblClickSpeed ms before deciding its a click\n      element.clickTimeout = setTimeout(() => {\n        delete element.clickTimeout;\n        dispatchEvent(chart, click, element, event);\n      }, options.dblClickSpeed);\n    } else {\n      // no double click handler, just call the click handler directly\n      dispatchEvent(chart, click, element, event);\n    }\n  }\n}\n\nfunction dispatchEvent(chart, handler, element, event) {\n  callback(handler, [{chart, element}, event]);\n}\n\nfunction getNearestItem(elements, position) {\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  return elements\n    .filter((element) => element.options.display && element.inRange(position.x, position.y))\n    .reduce((nearestItems, element) => {\n      const center = element.getCenterPoint();\n      const distance = distanceBetweenPoints(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n\n      return nearestItems;\n    }, [])\n    .sort((a, b) => a._index - b._index)\n    .slice(0, 1)[0]; // return only the top item\n}\n\nconst clamp = (x, from, to) => Math.min(to, Math.max(from, x));\n\nfunction clampAll(obj, from, to) {\n  for (const key of Object.keys(obj)) {\n    obj[key] = clamp(obj[key], from, to);\n  }\n  return obj;\n}\n\nfunction scaleValue(scale, value, fallback) {\n  value = typeof value === 'number' ? value : scale.parse(value);\n  return isFinite(value) ? scale.getPixelForValue(value) : fallback;\n}\n\n/**\n * Rotate a `point` relative to `center` point by `angle`\n * @param {{x: number, y: number}} point - the point to rotate\n * @param {{x: number, y: number}} center - center point for rotation\n * @param {number} angle - angle for rotation, in radians\n * @returns {{x: number, y: number}} rotated point\n */\nfunction rotated(point, center, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var cx = center.x;\n  var cy = center.y;\n\n  return {\n    x: cx + cos * (point.x - cx) - sin * (point.y - cy),\n    y: cy + sin * (point.x - cx) + cos * (point.y - cy)\n  };\n}\n\nclass BoxAnnotation extends Element {\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const {x, y, width, height} = this.getProps(['x', 'y', 'width', 'height'], useFinalPosition);\n\n    return mouseX >= x &&\n\t\t\tmouseX <= x + width &&\n\t\t\tmouseY >= y &&\n\t\t\tmouseY <= y + height;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, width, height} = this.getProps(['x', 'y', 'width', 'height'], useFinalPosition);\n    return {\n      x: x + width / 2,\n      y: y + height / 2\n    };\n  }\n\n  draw(ctx) {\n    const {x, y, width, height, options} = this;\n\n    ctx.save();\n\n    ctx.lineWidth = options.borderWidth;\n    ctx.strokeStyle = options.borderColor;\n    ctx.fillStyle = options.backgroundColor;\n\n    ctx.setLineDash(options.borderDash);\n    ctx.lineDashOffset = options.borderDashOffset;\n\n    ctx.beginPath();\n    addRoundedRectPath(ctx, {\n      x, y, w: width, h: height,\n      // TODO: v2 remove support for cornerRadius\n      radius: clampAll(toTRBLCorners(valueOrDefault(options.cornerRadius, options.borderRadius)), 0, Math.min(width, height) / 2)\n    });\n    ctx.closePath();\n    ctx.fill();\n\n    // If no border, don't draw it\n    if (options.borderWidth) {\n      ctx.stroke();\n    }\n\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    const xScale = chart.scales[options.xScaleID];\n    const yScale = chart.scales[options.yScaleID];\n    let {top: y, left: x, bottom: y2, right: x2} = chart.chartArea;\n    let min, max;\n\n    if (!xScale && !yScale) {\n      return {options: {}};\n    }\n\n    if (xScale) {\n      min = scaleValue(xScale, options.xMin, x);\n      max = scaleValue(xScale, options.xMax, x2);\n      x = Math.min(min, max);\n      x2 = Math.max(min, max);\n    }\n\n    if (yScale) {\n      min = scaleValue(yScale, options.yMin, y2);\n      max = scaleValue(yScale, options.yMax, y);\n      y = Math.min(min, max);\n      y2 = Math.max(min, max);\n    }\n\n    return {\n      x,\n      y,\n      x2,\n      y2,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n\nBoxAnnotation.id = 'boxAnnotation';\n\nBoxAnnotation.defaults = {\n  display: true,\n  adjustScaleRange: true,\n  borderDash: [],\n  borderDashOffset: 0,\n  borderWidth: 1,\n  borderRadius: 0,\n  xScaleID: 'x',\n  xMin: undefined,\n  xMax: undefined,\n  yScaleID: 'y',\n  yMin: undefined,\n  yMax: undefined\n};\n\nBoxAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nconst PI = Math.PI;\nconst pointInLine = (p1, p2, t) => ({x: p1.x + t * (p2.x - p1.x), y: p1.y + t * (p2.y - p1.y)});\nconst interpolateX = (y, p1, p2) => pointInLine(p1, p2, Math.abs((y - p1.y) / (p2.y - p1.y))).x;\nconst interpolateY = (x, p1, p2) => pointInLine(p1, p2, Math.abs((x - p1.x) / (p2.x - p1.x))).y;\nconst toPercent = (s) => typeof s === 'string' && s.endsWith('%') && parseFloat(s) / 100;\n\nfunction isLineInArea({x, y, x2, y2}, {top, right, bottom, left}) {\n  return !(\n    (x < left && x2 < left) ||\n    (x > right && x2 > right) ||\n    (y < top && y2 < top) ||\n    (y > bottom && y2 > bottom)\n  );\n}\n\nfunction limitPointToArea({x, y}, p2, {top, right, bottom, left}) {\n  if (x < left) {\n    y = interpolateY(left, {x, y}, p2);\n    x = left;\n  }\n  if (x > right) {\n    y = interpolateY(right, {x, y}, p2);\n    x = right;\n  }\n  if (y < top) {\n    x = interpolateX(top, {x, y}, p2);\n    y = top;\n  }\n  if (y > bottom) {\n    x = interpolateX(bottom, {x, y}, p2);\n    y = bottom;\n  }\n  return {x, y};\n}\n\nfunction limitLineToArea(p1, p2, area) {\n  const {x, y} = limitPointToArea(p1, p2, area);\n  const {x: x2, y: y2} = limitPointToArea(p2, p1, area);\n  return {x, y, x2, y2, width: Math.abs(x2 - x), height: Math.abs(y2 - y)};\n}\n\nclass LineAnnotation extends Element {\n  intersects(x, y, epsilon = 0.001) {\n    // Adapted from https://stackoverflow.com/a/6853926/25507\n    const sqr = v => v * v;\n    const {x: x1, y: y1, x2, y2} = this;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    const lenSq = sqr(dx) + sqr(dy);\n    const t = lenSq === 0 ? -1 : ((x - x1) * dx + (y - y1) * dy) / lenSq;\n    let xx, yy;\n    if (t < 0) {\n      xx = x1;\n      yy = y1;\n    } else if (t > 1) {\n      xx = x2;\n      yy = y2;\n    } else {\n      xx = x1 + t * dx;\n      yy = y1 + t * dy;\n    }\n    return (sqr(x - xx) + sqr(y - yy)) < epsilon;\n  }\n\n  labelIsVisible(chartArea) {\n    const label = this.options.label;\n\n    const inside = !chartArea || isLineInArea(this, chartArea);\n    return inside && label && label.enabled && label.content;\n  }\n\n  isOnLabel(mouseX, mouseY) {\n    const {labelRect} = this;\n    if (!labelRect || !this.labelIsVisible()) {\n      return false;\n    }\n\n    const {x, y} = rotated({x: mouseX, y: mouseY}, labelRect, -labelRect.rotation);\n    const w2 = labelRect.width / 2;\n    const h2 = labelRect.height / 2;\n    return x >= labelRect.x - w2 && x <= labelRect.x + w2 &&\n      y >= labelRect.y - h2 && y <= labelRect.y + h2;\n  }\n\n  inRange(x, y) {\n    const epsilon = this.options.borderWidth || 1;\n    return this.intersects(x, y, epsilon) || this.isOnLabel(x, y);\n  }\n\n  getCenterPoint() {\n    return {\n      x: (this.x2 + this.x) / 2,\n      y: (this.y2 + this.y) / 2\n    };\n  }\n\n  draw(ctx) {\n    const {x, y, x2, y2, options} = this;\n    ctx.save();\n\n    ctx.lineWidth = options.borderWidth;\n    ctx.strokeStyle = options.borderColor;\n    ctx.setLineDash(options.borderDash);\n    ctx.lineDashOffset = options.borderDashOffset;\n\n    // Draw\n    ctx.beginPath();\n    ctx.moveTo(x, y);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  drawLabel(ctx, chartArea) {\n    if (this.labelIsVisible(chartArea)) {\n      ctx.save();\n      drawLabel(ctx, this, chartArea);\n      ctx.restore();\n    }\n  }\n\n  resolveElementProperties(chart, options) {\n    const scale = chart.scales[options.scaleID];\n    let {top: y, left: x, bottom: y2, right: x2} = chart.chartArea;\n    let min, max;\n\n    if (scale) {\n      min = scaleValue(scale, options.value, NaN);\n      max = scaleValue(scale, options.endValue, min);\n      if (scale.isHorizontal()) {\n        x = min;\n        x2 = max;\n      } else {\n        y = min;\n        y2 = max;\n      }\n    } else {\n      const xScale = chart.scales[options.xScaleID];\n      const yScale = chart.scales[options.yScaleID];\n\n      if (xScale) {\n        x = scaleValue(xScale, options.xMin, x);\n        x2 = scaleValue(xScale, options.xMax, x2);\n      }\n\n      if (yScale) {\n        y = scaleValue(yScale, options.yMin, y);\n        y2 = scaleValue(yScale, options.yMax, y2);\n      }\n    }\n    const inside = isLineInArea({x, y, x2, y2}, chart.chartArea);\n    return inside\n      ? limitLineToArea({x, y}, {x: x2, y: y2}, chart.chartArea)\n      : {x, y, x2, y2, width: Math.abs(x2 - x), height: Math.abs(y2 - y)};\n  }\n}\n\nLineAnnotation.id = 'lineAnnotation';\nLineAnnotation.defaults = {\n  display: true,\n  adjustScaleRange: true,\n  borderWidth: 2,\n  borderDash: [],\n  borderDashOffset: 0,\n  label: {\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    borderCapStyle: 'butt',\n    borderColor: 'black',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderRadius: 6,\n    borderWidth: 0,\n    drawTime: undefined,\n    font: {\n      family: undefined,\n      lineHeight: undefined,\n      size: undefined,\n      style: undefined,\n      weight: 'bold'\n    },\n    color: '#fff',\n    xPadding: 6,\n    yPadding: 6,\n    rotation: 0,\n    position: 'center',\n    xAdjust: 0,\n    yAdjust: 0,\n    textAlign: 'center',\n    width: undefined,\n    height: undefined,\n    enabled: false,\n    content: null\n  },\n  value: undefined,\n  endValue: undefined,\n  scaleID: undefined,\n  xScaleID: 'x',\n  xMin: undefined,\n  xMax: undefined,\n  yScaleID: 'y',\n  yMin: undefined,\n  yMax: undefined\n};\n\nLineAnnotation.defaultRoutes = {\n  borderColor: 'color'\n};\n\nfunction calculateAutoRotation(line) {\n  const {x, y, x2, y2} = line;\n  const rotation = Math.atan2(y2 - y, x2 - x);\n  // Flip the rotation if it goes > PI/2 or < -PI/2, so label stays upright\n  return rotation > PI / 2 ? rotation - PI : rotation < PI / -2 ? rotation + PI : rotation;\n}\n\nfunction drawLabel(ctx, line, chartArea) {\n  const label = line.options.label;\n  const {borderWidth, xPadding, yPadding, content} = label;\n  const font = toFont(label.font);\n  ctx.font = font.string;\n\n  const {width, height} = measureLabel(ctx, label, font);\n  const rect = line.labelRect = calculateLabelPosition(line, width, height, chartArea);\n\n  ctx.translate(rect.x, rect.y);\n  ctx.rotate(rect.rotation);\n\n  ctx.fillStyle = label.backgroundColor;\n  const stroke = setBorderStyle(ctx, label);\n\n  ctx.beginPath();\n  addRoundedRectPath(ctx, {\n    x: -(width / 2), y: -(height / 2), w: width, h: height,\n    // TODO: v2 remove support for cornerRadius\n    radius: clampAll(toTRBLCorners(valueOrDefault(label.cornerRadius, label.borderRadius)), 0, Math.min(width, height) / 2)\n  });\n  ctx.closePath();\n  ctx.fill();\n  if (stroke) {\n    ctx.stroke();\n  }\n\n  ctx.fillStyle = label.color;\n  if (content instanceof Image) {\n    const x = -(width / 2) + xPadding + borderWidth / 2;\n    const y = -(height / 2) + yPadding + borderWidth / 2;\n    ctx.drawImage(content, x, y, width - (2 * xPadding) - borderWidth, height - (2 * yPadding) - borderWidth);\n  } else {\n    const labels = isArray(content) ? content : [content];\n    const x = calculateLabelXAlignment(label, width);\n    const y = -(labels.length - 1) * font.lineHeight / 2;\n    ctx.textBaseline = 'middle';\n    ctx.textAlign = label.textAlign;\n    labels.forEach((l, i) => ctx.fillText(l, x, y + (i * font.lineHeight)));\n  }\n}\n\nfunction setBorderStyle(ctx, options) {\n  if (options.borderWidth) {\n    ctx.lineCap = options.borderCapStyle;\n    ctx.setLineDash(options.borderDash);\n    ctx.lineDashOffset = options.borderDashOffset;\n    ctx.lineJoin = options.borderJoinStyle;\n    ctx.lineWidth = options.borderWidth;\n    ctx.strokeStyle = options.borderColor;\n    return true;\n  }\n}\n\nfunction calculateLabelXAlignment(label, width) {\n  const {textAlign, xPadding, borderWidth} = label;\n  if (textAlign === 'start') {\n    return -(width / 2) + xPadding + borderWidth / 2;\n  } else if (textAlign === 'end') {\n    return +(width / 2) - xPadding - borderWidth / 2;\n  }\n  return 0;\n}\n\nfunction getImageSize(size, value) {\n  if (typeof value === 'number') {\n    return value;\n  } else if (typeof value === 'string') {\n    return toPercent(value) * size;\n  }\n  return size;\n}\n\nconst widthCache = new Map();\nfunction measureLabel(ctx, label, font) {\n  const content = label.content;\n  const borderWidth = label.borderWidth;\n\n  if (content instanceof Image) {\n    return {\n      width: getImageSize(content.width, label.width) + 2 * label.xPadding + borderWidth,\n      height: getImageSize(content.height, label.height) + 2 * label.yPadding + borderWidth\n    };\n  }\n  const lines = isArray(content) ? content : [content];\n  const count = lines.length;\n  let width = 0;\n  for (let i = 0; i < count; i++) {\n    const text = lines[i];\n    const key = font.string + '-' + text;\n    if (!widthCache.has(key)) {\n      widthCache.set(key, ctx.measureText(text).width);\n    }\n    width = Math.max(width, widthCache.get(key));\n  }\n  width += 2 * label.xPadding + borderWidth;\n\n  return {\n    width,\n    height: count * font.lineHeight + label.yPadding * 2 + borderWidth\n  };\n}\n\nfunction calculateLabelPosition(line, width, height, chartArea) {\n  const label = line.options.label;\n  const {xAdjust, yAdjust, xPadding, yPadding, position} = label;\n  const p1 = {x: line.x, y: line.y};\n  const p2 = {x: line.x2, y: line.y2};\n  const rotation = label.rotation === 'auto' ? calculateAutoRotation(line) : toRadians(label.rotation);\n  const size = rotatedSize(width, height, rotation);\n  const t = calculateT(line, position, size, chartArea);\n  const pt = pointInLine(p1, p2, t);\n  const xCoordinateSizes = {size: size.w, min: chartArea.left, max: chartArea.right, padding: xPadding};\n  const yCoordinateSizes = {size: size.h, min: chartArea.top, max: chartArea.bottom, padding: yPadding};\n\n  return {\n    x: adjustLabelCoordinate(pt.x, xCoordinateSizes) + xAdjust,\n    y: adjustLabelCoordinate(pt.y, yCoordinateSizes) + yAdjust,\n    width,\n    height,\n    rotation\n  };\n}\n\nfunction rotatedSize(width, height, rotation) {\n  const cos = Math.cos(rotation);\n  const sin = Math.sin(rotation);\n  return {\n    w: Math.abs(width * cos) + Math.abs(height * sin),\n    h: Math.abs(width * sin) + Math.abs(height * cos)\n  };\n}\n\nfunction calculateT(line, position, rotSize, chartArea) {\n  let t = 0.5;\n  const space = spaceAround(line, chartArea);\n  const label = line.options.label;\n  if (position === 'start') {\n    t = calculateTAdjust({w: line.x2 - line.x, h: line.y2 - line.y}, rotSize, label, space);\n  } else if (position === 'end') {\n    t = 1 - calculateTAdjust({w: line.x - line.x2, h: line.y - line.y2}, rotSize, label, space);\n  }\n  return t;\n}\n\nfunction calculateTAdjust(lineSize, labelSize, label, space) {\n  const {xPadding, yPadding} = label;\n  const lineW = lineSize.w * space.dx;\n  const lineH = lineSize.h * space.dy;\n  const x = (lineW > 0) && ((labelSize.w / 2 + xPadding - space.x) / lineW);\n  const y = (lineH > 0) && ((labelSize.h / 2 + yPadding - space.y) / lineH);\n  return clamp(Math.max(x, y), 0, 0.25);\n}\n\nfunction spaceAround(line, chartArea) {\n  const {x, x2, y, y2} = line;\n  const t = Math.min(y, y2) - chartArea.top;\n  const l = Math.min(x, x2) - chartArea.left;\n  const b = chartArea.bottom - Math.max(y, y2);\n  const r = chartArea.right - Math.max(x, x2);\n  return {\n    x: Math.min(l, r),\n    y: Math.min(t, b),\n    dx: l < r ? 1 : -1,\n    dy: t < b ? 1 : -1\n  };\n}\n\nfunction adjustLabelCoordinate(coordinate, labelSizes) {\n  const {size, min, max, padding} = labelSizes;\n  const halfSize = size / 2;\n\n  if (size > max - min) {\n    // if it does not fit, display as much as possible\n    return (max + min) / 2;\n  }\n\n  if (min >= (coordinate - padding - halfSize)) {\n    coordinate = min + padding + halfSize;\n  }\n\n  if (max <= (coordinate + padding + halfSize)) {\n    coordinate = max - padding - halfSize;\n  }\n\n  return coordinate;\n}\n\nclass EllipseAnnotation extends BoxAnnotation {\n\n  inRange(x, y) {\n    return pointInEllipse({x, y}, this);\n  }\n\n  draw(ctx) {\n    const {width, height, options} = this;\n    const center = this.getCenterPoint();\n\n    ctx.save();\n\n    ctx.translate(center.x, center.y);\n    if (options.rotation) {\n      ctx.rotate(toRadians(options.rotation));\n    }\n\n    ctx.beginPath();\n\n    ctx.lineWidth = options.borderWidth;\n    ctx.strokeStyle = options.borderColor;\n    ctx.fillStyle = options.backgroundColor;\n\n    ctx.setLineDash(options.borderDash);\n    ctx.lineDashOffset = options.borderDashOffset;\n\n    ctx.ellipse(0, 0, height / 2, width / 2, Math.PI / 2, 0, 2 * Math.PI);\n\n    ctx.fill();\n    ctx.stroke();\n\n    ctx.restore();\n  }\n}\n\nEllipseAnnotation.id = 'ellipseAnnotation';\n\nEllipseAnnotation.defaults = {\n  display: true,\n  adjustScaleRange: true,\n  borderDash: [],\n  borderDashOffset: 0,\n  borderWidth: 1,\n  rotation: 0,\n  xScaleID: 'x',\n  xMin: undefined,\n  xMax: undefined,\n  yScaleID: 'y',\n  yMin: undefined,\n  yMax: undefined\n};\n\nEllipseAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nfunction pointInEllipse(p, ellipse) {\n  const {width, height} = ellipse;\n  const center = ellipse.getCenterPoint(true);\n  const xRadius = width / 2;\n  const yRadius = height / 2;\n\n  if (xRadius <= 0 || yRadius <= 0) {\n    return false;\n  }\n\n  return (Math.pow(p.x - center.x, 2) / Math.pow(xRadius, 2)) + (Math.pow(p.y - center.y, 2) / Math.pow(yRadius, 2)) <= 1.0;\n}\n\nclass PointAnnotation extends Element {\n\n  inRange(x, y) {\n    const {width, options} = this;\n    const center = this.getCenterPoint(true);\n    const radius = width / 2 + options.borderWidth;\n\n    if (radius <= 0) {\n      return false;\n    }\n\n    return (Math.pow(x - center.x, 2) + Math.pow(y - center.y, 2)) <= Math.pow(radius, 2);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  draw(ctx) {\n    const {x, y, width, options} = this;\n\n    ctx.save();\n\n    ctx.lineWidth = options.borderWidth;\n    ctx.strokeStyle = options.borderColor;\n    ctx.fillStyle = options.backgroundColor;\n\n    ctx.setLineDash(options.borderDash);\n    ctx.lineDashOffset = options.borderDashOffset;\n\n    ctx.beginPath();\n    ctx.arc(x, y, width / 2, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    const {chartArea, scales} = chart;\n    const xScale = scales[options.xScaleID];\n    const yScale = scales[options.yScaleID];\n    let x = chartArea.width / 2;\n    let y = chartArea.height / 2;\n\n    if (xScale) {\n      x = scaleValue(xScale, options.xValue, x);\n    }\n\n    if (yScale) {\n      y = scaleValue(yScale, options.yValue, y);\n    }\n\n    return {\n      x,\n      y,\n      width: options.radius * 2,\n      height: options.radius * 2\n    };\n  }\n}\n\nPointAnnotation.id = 'pointAnnotation';\n\nPointAnnotation.defaults = {\n  display: true,\n  adjustScaleRange: true,\n  borderDash: [],\n  borderDashOffset: 0,\n  borderWidth: 1,\n  radius: 10,\n  xScaleID: 'x',\n  xValue: undefined,\n  yScaleID: 'y',\n  yValue: undefined\n};\n\nPointAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nvar version = \"1.1.0\";\n\nconst chartStates = new Map();\n\nconst annotationTypes = {\n  box: BoxAnnotation,\n  line: LineAnnotation,\n  ellipse: EllipseAnnotation,\n  point: PointAnnotation\n};\n\nObject.keys(annotationTypes).forEach(key => {\n  defaults.describe(`elements.${annotationTypes[key].id}`, {\n    _fallback: 'plugins.annotation'\n  });\n});\n\nvar annotation = {\n  id: 'annotation',\n\n  version,\n\n  afterRegister() {\n    Chart.register(annotationTypes);\n  },\n\n  afterUnregister() {\n    Chart.unregister(annotationTypes);\n  },\n\n  beforeInit(chart) {\n    chartStates.set(chart, {\n      annotations: [],\n      elements: [],\n      listeners: {},\n      listened: false,\n      moveListened: false\n    });\n  },\n\n  beforeUpdate(chart, args, options) {\n    const state = chartStates.get(chart);\n    const annotations = state.annotations = [];\n\n    let annotationOptions = options.annotations;\n    if (isObject(annotationOptions)) {\n      Object.keys(annotationOptions).forEach(key => {\n        const value = annotationOptions[key];\n        if (isObject(value)) {\n          value.id = key;\n          annotations.push(value);\n        }\n      });\n    } else if (isArray(annotationOptions)) {\n      annotations.push(...annotationOptions);\n    }\n  },\n\n  afterDataLimits(chart, args) {\n    const state = chartStates.get(chart);\n    adjustScaleRange(chart, args.scale, state.annotations.filter(a => a.display && a.adjustScaleRange));\n  },\n\n  afterUpdate(chart, args, options) {\n    const state = chartStates.get(chart);\n    updateListeners(chart, state, options);\n    updateElements(chart, state, options, args.mode);\n  },\n\n  beforeDatasetsDraw(chart) {\n    draw(chart, 'beforeDatasetsDraw');\n  },\n\n  afterDatasetsDraw(chart) {\n    draw(chart, 'afterDatasetsDraw');\n  },\n\n  beforeDraw(chart) {\n    draw(chart, 'beforeDraw');\n  },\n\n  afterDraw(chart) {\n    draw(chart, 'afterDraw');\n  },\n\n  beforeEvent(chart, args, options) {\n    const state = chartStates.get(chart);\n    handleEvent(chart, state, args.event, options);\n  },\n\n  destroy(chart) {\n    chartStates.delete(chart);\n  },\n\n  _getState(chart) {\n    return chartStates.get(chart);\n  },\n\n  defaults: {\n    drawTime: 'afterDatasetsDraw',\n    dblClickSpeed: 350, // ms\n    animations: {\n      numbers: {\n        properties: ['x', 'y', 'x2', 'y2', 'width', 'height'],\n        type: 'number'\n      },\n    },\n    label: {\n      drawTime: null\n    }\n  },\n\n  descriptors: {\n    _indexable: false,\n    _scriptable: (prop) => !hooks.includes(prop),\n    annotations: {\n      _allKeys: false,\n      _fallback: (prop, opts) => `elements.${annotationTypes[opts.type || 'line'].id}`,\n    },\n  },\n\n  additionalOptionScopes: ['']\n};\n\nconst directUpdater = {\n  update: Object.assign\n};\n\nfunction resolveAnimations(chart, animOpts, mode) {\n  if (mode === 'reset' || mode === 'none' || mode === 'resize') {\n    return directUpdater;\n  }\n  return new Animations(chart, animOpts);\n}\n\nfunction updateElements(chart, state, options, mode) {\n  const animations = resolveAnimations(chart, options.animations, mode);\n\n  const annotations = state.annotations;\n  const elements = resyncElements(state.elements, annotations);\n\n  for (let i = 0; i < annotations.length; i++) {\n    const annotation = annotations[i];\n    let el = elements[i];\n    const elType = annotationTypes[annotation.type] || annotationTypes.line;\n    if (!el || !(el instanceof elType)) {\n      el = elements[i] = new elType();\n    }\n    const opts = resolveAnnotationOptions(annotation.setContext(getContext(chart, el, annotation)));\n    const properties = el.resolveElementProperties(chart, opts);\n    properties.skip = isNaN(properties.x) || isNaN(properties.y);\n    properties.options = opts;\n    animations.update(el, properties);\n  }\n}\n\nfunction resolveAnnotationOptions(resolver) {\n  const elType = annotationTypes[resolver.type] || annotationTypes.line;\n  const result = {};\n  result.id = resolver.id;\n  result.type = resolver.type;\n  result.drawTime = resolver.drawTime;\n  Object.assign(result, resolveObj(resolver, elType.defaults), resolveObj(resolver, elType.defaultRoutes));\n  for (const hook of hooks) {\n    result[hook] = resolver[hook];\n  }\n  return result;\n}\n\nfunction resolveObj(resolver, defs) {\n  const result = {};\n  for (const name of Object.keys(defs)) {\n    const optDefs = defs[name];\n    const value = resolver[name];\n    result[name] = isObject(optDefs) ? resolveObj(value, optDefs) : value;\n  }\n  return result;\n}\n\nfunction getContext(chart, element, annotation) {\n  return element.$context || (element.$context = Object.assign(Object.create(chart.getContext()), {\n    element,\n    id: annotation.id,\n    type: 'annotation'\n  }));\n}\n\nfunction resyncElements(elements, annotations) {\n  const count = annotations.length;\n  const start = elements.length;\n\n  if (start < count) {\n    const add = count - start;\n    elements.splice(start, 0, ...new Array(add));\n  } else if (start > count) {\n    elements.splice(count, start - count);\n  }\n  return elements;\n}\n\nfunction draw(chart, caller) {\n  const {ctx, chartArea} = chart;\n  const state = chartStates.get(chart);\n  const elements = state.elements.filter(el => !el.skip && el.options.display);\n\n  clipArea(ctx, chartArea);\n  elements.forEach(el => {\n    if (el.options.drawTime === caller) {\n      el.draw(ctx);\n    }\n  });\n  unclipArea(ctx);\n\n  elements.forEach(el => {\n    if ('drawLabel' in el && el.options.label && (el.options.label.drawTime || el.options.drawTime) === caller) {\n      el.drawLabel(ctx, chartArea);\n    }\n  });\n}\n\nfunction adjustScaleRange(chart, scale, annotations) {\n  const range = getScaleLimits(scale, annotations);\n  let changed = false;\n  if (isFinite(range.min) &&\n\t\ttypeof scale.options.min === 'undefined' &&\n\t\ttypeof scale.options.suggestedMin === 'undefined') {\n    changed = scale.min !== range.min;\n    scale.min = range.min;\n  }\n  if (isFinite(range.max) &&\n\t\ttypeof scale.options.max === 'undefined' &&\n\t\ttypeof scale.options.suggestedMax === 'undefined') {\n    changed = scale.max !== range.max;\n    scale.max = range.max;\n  }\n  if (changed && typeof scale.handleTickRangeOptions === 'function') {\n    scale.handleTickRangeOptions();\n  }\n}\n\nfunction getScaleLimits(scale, annotations) {\n  const axis = scale.axis;\n  const scaleID = scale.id;\n  const scaleIDOption = axis + 'ScaleID';\n  let min = valueOrDefault(scale.min, Number.NEGATIVE_INFINITY);\n  let max = valueOrDefault(scale.max, Number.POSITIVE_INFINITY);\n  for (const annotation of annotations) {\n    if (annotation.scaleID === scaleID) {\n      for (const prop of ['value', 'endValue']) {\n        const raw = annotation[prop];\n        if (raw) {\n          const value = scale.parse(raw);\n          min = Math.min(min, value);\n          max = Math.max(max, value);\n        }\n      }\n    } else if (annotation[scaleIDOption] === scaleID) {\n      for (const prop of [axis + 'Min', axis + 'Max', axis + 'Value']) {\n        const raw = annotation[prop];\n        if (raw) {\n          const value = scale.parse(raw);\n          min = Math.min(min, value);\n          max = Math.max(max, value);\n        }\n      }\n    }\n  }\n  return {min, max};\n}\n\nexport { annotation as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}