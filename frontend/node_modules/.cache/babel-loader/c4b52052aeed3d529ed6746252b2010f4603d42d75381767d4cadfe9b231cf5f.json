{"ast":null,"code":"var _jsxFileName = \"/Users/jasonramirez/Desktop/fitness-app/frontend/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { BrowserRouter as Router, Routes, Route, Link, Navigate } from 'react-router-dom';\nimport { useState, useEffect, useContext } from 'react';\nimport UserContext from './UserContext';\nimport exerciseServices from './services/exercises';\nimport workoutServices from './services/workouts';\nimport Home from './components/Home';\nimport RegistrationPage from './components/RegistrationPage';\nimport WorkoutHistoryPage from './components/WorkoutHistoryPage';\nimport Header from './components/Header';\nimport './index.css';\n\n// Defines page where an individual user can log their workout\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPage = () => {\n  _s();\n  console.log(`current user ${JSON.stringify(user)}`);\n  /* UserPage state variables and updater functions */\n  const [exercises, setExercises] = useState([]);\n  const [workout, setWorkout] = useState({});\n  const [currSets, setCurrSets] = useState(0);\n  const [currReps, setCurrReps] = useState(0);\n  const [openDropdown, setOpenDropdown] = useState(false);\n\n  /* Gets and sets all of the exercises from the backend */\n  useEffect(() => {\n    exerciseServices.getAll().then(exercises => {\n      setExercises(exercises);\n    });\n  }, []);\n  const handleSetChange = event => {\n    setCurrSets(event.target.value);\n  };\n  const handleRepChange = event => {\n    setCurrReps(event.target.value);\n  };\n  const addCluster = event => {\n    event.preventDefault();\n    const [exercise, sets, reps] = [event.target.elements.exercises.value, event.target.elements.sets.value, event.target.elements.reps.value];\n    const newCluster = {\n      'exercise': exercise,\n      'sets': sets,\n      'reps': reps\n    };\n\n    /* Creates new workout with this cluster if first cluster of the workout */\n    if (Object.keys(workout).length === 0) {\n      workoutServices.create(newCluster).then(createdWorkout => {\n        setWorkout({\n          ...createdWorkout\n        });\n        console.log(workout.clusters);\n      });\n    } else {\n      /* Adds cluster to previously existing workout */\n      const updatedWorkout = {\n        ...workout,\n        clusters: workout.clusters.concat(newCluster)\n      };\n      workoutServices.update(workout.id, updatedWorkout).then(updatedWorkout => {\n        setWorkout(updatedWorkout);\n      });\n    }\n  };\n  const ClusterList = () => {\n    console.log(`list clusters ${workout}`);\n    if (Object.keys(workout).length === 0) {\n      console.log('empty');\n      return /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"noClustersPrompt\",\n        children: \" Add your first exercise for this workout! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Exercise \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Sets \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Reps \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: workout.clusters.map(cluster => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", cluster.exercise.name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", cluster.sets, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", cluster.reps, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this);\n    }\n  };\n  const [filteredExercises, setFilteredExercises] = useState([]);\n  /*const [exercisesInput, setExerciseInput] = useState('')*/\n\n  const handleExerciseInputChange = event => {\n    const userInputValue = event.target.value.toLowerCase();\n    const filteredExercisesTemp = exercises.filter(exercise => exercise.name.toLowerCase().startsWith(userInputValue));\n    setFilteredExercises(filteredExercisesTemp);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-main\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-log\",\n      children: [/*#__PURE__*/_jsxDEV(Notification, {\n        message: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Current Workout  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addCluster,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"exercise\",\n            children: \" Exercise \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            list: \"exercise-list\",\n            id: \"exercises\",\n            placeholder: \"Type to search...\",\n            onChange: handleExerciseInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n            id: \"exercise-list\",\n            children: filteredExercises.map(exercise => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: exercise.name\n            }, exercise.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 5\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 4\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"sets\",\n            children: \" Sets \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"sets\",\n            type: \"text\",\n            value: currSets,\n            onChange: handleSetChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"reps\",\n            children: \" Reps \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"reps\",\n            type: \"text\",\n            value: currReps,\n            onChange: handleRepChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 4\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \" Add \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(ClusterList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 3\n  }, this);\n};\n_s(UserPage, \"Nr5ejU16Zsv8EayyPUbW/oCbQEg=\");\n_c = UserPage;\nconst App = () => {\n  _s2();\n  // App state variables and updater functions\n  const [errorMessage, setErrorMessage] = useState([]);\n  const [user, userDispatch] = useContext(UserContext);\n  console.log(`app current user ${JSON.stringify(user)}`);\n  // Gets logged-in user and token from localStorage if available */\n  useEffect(() => {\n    /* window.localStorage.clear() */\n    const loggedUserJSON = window.localStorage.getItem('loggedFitnessAppUser');\n    if (loggedUserJSON) {\n      const currentUser = JSON.parse(loggedUserJSON);\n      userDispatch({\n        type: \"LOG IN\",\n        user: currentUser\n      });\n      workoutServices.setToken(currentUser.token);\n    }\n  }, []);\n\n  // Error notification \n  const Notification = _ref => {\n    let {\n      message\n    } = _ref;\n    return message === null ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\" \", message, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 36\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: user ? /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 16\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            replace: true,\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user\",\n          element: user ? /*#__PURE__*/_jsxDEV(UserPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 16\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            replace: true,\n            to: \"/workout-history\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: user ? /*#__PURE__*/_jsxDEV(RegistrationPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 16\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            replace: true,\n            to: \"/user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/workout-history\",\n          element: user ? /*#__PURE__*/_jsxDEV(WorkoutHistoryPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 16\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            replace: true,\n            to: \"/workout-history\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 3\n  }, this);\n};\n_s2(App, \"Lw+IO3dAy61QYrYiMqJFd4KbQV0=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"UserPage\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","Link","Navigate","useState","useEffect","useContext","UserContext","exerciseServices","workoutServices","Home","RegistrationPage","WorkoutHistoryPage","Header","jsxDEV","_jsxDEV","UserPage","_s","console","log","JSON","stringify","user","exercises","setExercises","workout","setWorkout","currSets","setCurrSets","currReps","setCurrReps","openDropdown","setOpenDropdown","getAll","then","handleSetChange","event","target","value","handleRepChange","addCluster","preventDefault","exercise","sets","reps","elements","newCluster","Object","keys","length","create","createdWorkout","clusters","updatedWorkout","concat","update","id","ClusterList","htmlFor","children","fileName","_jsxFileName","lineNumber","columnNumber","map","cluster","name","filteredExercises","setFilteredExercises","handleExerciseInputChange","userInputValue","toLowerCase","filteredExercisesTemp","filter","startsWith","className","Notification","message","errorMessage","onSubmit","list","placeholder","onChange","type","_c","App","_s2","setErrorMessage","userDispatch","loggedUserJSON","window","localStorage","getItem","currentUser","parse","setToken","token","_ref","exact","path","element","replace","to","_c2","$RefreshReg$"],"sources":["/Users/jasonramirez/Desktop/fitness-app/frontend/src/App.js"],"sourcesContent":["import {\n    BrowserRouter as Router,\n    Routes, Route, Link, Navigate\n} from 'react-router-dom'\nimport { useState, useEffect, useContext } from 'react'\nimport UserContext from './UserContext'\n\nimport exerciseServices from './services/exercises'\nimport workoutServices from './services/workouts'\n\nimport Home from './components/Home'\nimport RegistrationPage from './components/RegistrationPage'\nimport WorkoutHistoryPage from './components/WorkoutHistoryPage'\nimport Header from './components/Header'\n\nimport './index.css'\n\n// Defines page where an individual user can log their workout\nconst UserPage = () => {\t\n\tconsole.log(`current user ${JSON.stringify(user)}`)\n\t/* UserPage state variables and updater functions */\n\tconst [exercises, setExercises] = useState([])\n\tconst [workout, setWorkout] = useState({})\n\tconst [currSets, setCurrSets] = useState(0)\n\tconst [currReps, setCurrReps] = useState(0)\n\tconst [openDropdown, setOpenDropdown] = useState(false)\n\n\t/* Gets and sets all of the exercises from the backend */\n\tuseEffect(() => {\n\t\texerciseServices\n\t\t\t.getAll()\n\t\t\t.then(exercises => {\n\t\t\t\tsetExercises(exercises)\n\t\t\t})\n\t}, [])\n\n\tconst handleSetChange = (event) => {\t\n\t\tsetCurrSets(event.target.value)\n\t}\n\n\tconst handleRepChange = (event) => {\n\t\tsetCurrReps(event.target.value)\n\t}\n\n\tconst addCluster = (event) => {\n\t\tevent.preventDefault()\t    \n\t\tconst [exercise, sets, reps] = [\n\t\tevent.target.elements.exercises.value,\n\t\tevent.target.elements.sets.value,\n\t\tevent.target.elements.reps.value\n\t\t]\n\t\tconst newCluster = {'exercise': exercise, 'sets': sets, 'reps': reps}\n\n\t\t/* Creates new workout with this cluster if first cluster of the workout */ \n\t\tif (Object.keys(workout).length === 0) {\n\t\t\tworkoutServices\n\t\t\t\t.create(newCluster)\n\t\t\t\t.then(createdWorkout => {\t\t\t\n\t\t\t\t\tsetWorkout({...createdWorkout})\n\t\t\t\t\tconsole.log(workout.clusters)\n\t\t\t\t})\t    \n\t\t} else {\n\t\t\t/* Adds cluster to previously existing workout */\t\t\n\t\t\tconst updatedWorkout = {...workout, clusters: workout.clusters.concat(newCluster)}\n\t\t\tworkoutServices\n\t\t\t\t.update(workout.id, updatedWorkout)\n\t\t\t\t.then(updatedWorkout => {\t\t\t\n\t\t\t\t\tsetWorkout(updatedWorkout)\n\t\t\t\t})\n\t\t}\n\t}\n\n\tconst ClusterList = () => {\n\t\tconsole.log(`list clusters ${workout}`)\t    \n\t\tif (Object.keys(workout).length === 0) {\n\t\t\tconsole.log('empty')\n\t\t\treturn <label htmlFor=\"noClustersPrompt\"> Add your first exercise for this workout! </label>\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<table>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th> Exercise </th>\n\t\t\t\t\t\t<th> Sets </th>\n\t\t\t\t\t\t<th> Reps </th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{workout.clusters.map(cluster =>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td> {cluster.exercise.name} </td>\n\t\t\t\t\t\t\t\t<td> {cluster.sets} </td>\n\t\t\t\t\t\t\t\t<td> {cluster.reps} </td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t)\n\t\t}\n\t}\n\n\t  const [filteredExercises, setFilteredExercises] = useState([])\n\t  /*const [exercisesInput, setExerciseInput] = useState('')*/\n  \n\t  const handleExerciseInputChange = (event) => {\n\t\tconst userInputValue = event.target.value.toLowerCase()\n\t\tconst filteredExercisesTemp = exercises.filter( exercise =>\n\t\t\texercise.name.toLowerCase().startsWith(userInputValue)\n\t\t)\n\t\tsetFilteredExercises(filteredExercisesTemp)\n\t  }\n  \n\treturn (\n\t\t<div className=\"user-main\">\n\t\t\t<Header />\t\t\t\t\t\n\t\t\t<div className=\"user-log\">\n\t\t\t\t<Notification message={errorMessage}/>\n\t\t\t\t<div>\n\t\t\t\t<h2> Current Workout  </h2>\t\n\t\t\t\t\n\t\t\t\t</div>\n\t\t\t<form onSubmit={addCluster}>\t\t\n\t\t\t<div>\n\t\t\t\t\t\t<label htmlFor=\"exercise\"> Exercise </label>\n\t\t\t<input list=\"exercise-list\" id=\"exercises\"  placeholder=\"Type to search...\" onChange={handleExerciseInputChange}/>\n\t\t\t<datalist id=\"exercise-list\">\n\t\t\t{filteredExercises.map( exercise => (\n\t\t\t\t<option key={exercise.id} value={exercise.name} />\n\t\t\t))}\n\t\t\t</datalist>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t\t<label htmlFor=\"sets\"> Sets </label>\n\t\t\t\t\t<input id=\"sets\" type=\"text\" value={currSets} onChange={handleSetChange}/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t\t<label htmlFor=\"reps\"> Reps </label>\n\t\t\t<input id=\"reps\" type=\"text\" value={currReps} onChange={handleRepChange} />\n\t\t\t</div>\n\t\t\t\t\t<button type=\"submit\"> Add </button>\n\t\t\t</form>\n\t\t\t<ClusterList />\n\t\t\t</div>\t       \n\t\t</div>\n\t)\t\n}\n\nconst App = () => {\n    // App state variables and updater functions\n    const [errorMessage, setErrorMessage] = useState([])    \n    const [user, userDispatch] = useContext(UserContext)\n    console.log(`app current user ${JSON.stringify(user)}`)\n\t// Gets logged-in user and token from localStorage if available */\n  \tuseEffect(() => {\n\t\t/* window.localStorage.clear() */\n\t\tconst loggedUserJSON = window.localStorage.getItem('loggedFitnessAppUser')\n\t\tif (loggedUserJSON) {\n\t\t\tconst currentUser = JSON.parse(loggedUserJSON)\n\t\t\tuserDispatch( {type: \"LOG IN\", user: currentUser } )\n\t\t\tworkoutServices.setToken(currentUser.token)\n\t\t}\n    }, [])\n    \n    // Error notification \n    const Notification = ({ message }) => {\n\t\treturn message === null ? null : <div className='error'> {message} </div>\n    }\n    \n    return (\n\t\t<div>\n\t\t\t<Router>\t        \n\t\t\t\t<Routes>\n\t\t\t\t\t<Route exact path=\"/\" element={\n\t\t\t\t\t\tuser ? ( <Home /> ) : ( <Navigate replace to={\"/\"} /> )\n\t\t\t\t\t}\n\t\t\t\t\t/> \n\t\t\t\t\t<Route path=\"/user\" element={\n\t\t\t\t\t\tuser ? ( <UserPage /> ) : ( <Navigate replace to={\"/workout-history\"} /> )\n\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route path=\"/register\" element={\n\t\t\t\t\t\tuser ? ( <RegistrationPage /> ) : (<Navigate replace to={\"/user\"} /> )\n\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route path=\"/workout-history\" element={\n\t\t\t\t\t\tuser ? ( <WorkoutHistoryPage /> ) : ( <Navigate replace to={\"/workout-history\"} /> )\n\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</Routes>\n\t\t\t</Router>\n\t\t</div>\n    )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}