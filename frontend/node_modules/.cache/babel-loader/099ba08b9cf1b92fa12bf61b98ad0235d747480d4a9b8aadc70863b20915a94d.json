{"ast":null,"code":"var _jsxFileName = \"/Users/jasonramirez/Desktop/fitness-app/frontend/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { BrowserRouter as Router, Routes, Route, Link, Navigate } from 'react-router-dom';\nimport { useState, useEffect, useContext } from 'react';\nimport UserContext from './UserContext';\nimport exerciseServices from './services/exercises';\nimport workoutServices from './services/workouts';\nimport Dashboard from './components/Dashboard';\nimport Home from './components/Home';\nimport RegistrationPage from './components/RegistrationPage';\nimport WorkoutHistoryPage from './components/WorkoutHistoryPage';\nimport Header from './components/Header';\nimport './index.css';\n\n// Error notification \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notification = _ref => {\n  let {\n    message\n  } = _ref;\n  return message === null ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: [\" \", message, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 35\n  }, this);\n};\n\n// Defines page where a user can log their workout\n_c = Notification;\nconst UserPage = () => {\n  _s();\n  const [user, userDispatch] = useContext(UserContext);\n  const [errorMessage, setErrorMessage] = useState([]);\n  /* UserPage state variables and updater functions */\n  const [exercises, setExercises] = useState([]);\n  const [workout, setWorkout] = useState({});\n  const [currSets, setCurrSets] = useState(0);\n  const [currReps, setCurrReps] = useState(0);\n  const [filteredExercises, setFilteredExercises] = useState([]);\n\n  /* Gets and sets all of the exercises from the backend */\n  useEffect(() => {\n    exerciseServices.getAll().then(exercises => {\n      setExercises(exercises);\n    });\n  }, []);\n  const handleSetChange = event => {\n    setCurrSets(event.target.value);\n  };\n  const handleRepChange = event => {\n    setCurrReps(event.target.value);\n  };\n  const addCluster = event => {\n    event.preventDefault();\n    const [exercise, sets, reps] = [event.target.elements.exercises.value, event.target.elements.sets.value, event.target.elements.reps.value];\n    if (!exercises.includes(exercise)) {\n      setErrorMessage('Exercise entered not valid. Please choose an exercise from the provided list.');\n      return;\n    }\n    const newCluster = {\n      'exercise': exercise,\n      'sets': sets,\n      'reps': reps\n    };\n\n    /* Creates new workout with this cluster if first cluster of the workout */\n    if (Object.keys(workout).length === 0) {\n      workoutServices.create(newCluster).then(createdWorkout => {\n        setWorkout({\n          ...createdWorkout\n        });\n        console.log(workout.clusters);\n      });\n    } else {\n      /* Adds cluster to previously existing workout */\n      const updatedWorkout = {\n        ...workout,\n        clusters: workout.clusters.concat(newCluster)\n      };\n      workoutServices.update(workout.id, updatedWorkout).then(updatedWorkout => {\n        setWorkout(updatedWorkout);\n      });\n    }\n  };\n  const ClusterList = () => {\n    if (Object.keys(workout).length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"noClustersPrompt\",\n        children: \" Add your first exercise for this workout! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Exercise \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Sets \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Reps \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: workout.clusters.map(cluster => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", cluster.exercise.name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", cluster.sets, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", cluster.reps, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this);\n    }\n  };\n  const handleExerciseInputChange = event => {\n    event.preventDefault();\n    const userInputValue = event.target.value.toLowerCase();\n    const filteredExercisesTemp = exercises.filter(exercise => exercise.name.toLowerCase().startsWith(userInputValue));\n    setFilteredExercises(filteredExercisesTemp);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-main\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-log\",\n      children: [/*#__PURE__*/_jsxDEV(Notification, {\n        message: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Current Workout  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addCluster,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"exercise\",\n            children: \"Exercise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            list: \"exercise-list\",\n            id: \"exercises\",\n            placeholder: \"Type to search...\",\n            onChange: handleExerciseInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n            id: \"exercise-list\",\n            children: filteredExercises.map(exercise => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: exercise.name\n            }, exercise.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 9\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sets-reps\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sets\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"sets\",\n              children: \"Sets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"sets\",\n              value: currSets,\n              onChange: handleSetChange,\n              children: [...Array(20).keys()].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: num + 1,\n                children: num + 1\n              }, num + 1, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 10\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reps\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"reps\",\n              children: \"Reps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"reps\",\n              value: currReps,\n              onChange: handleRepChange,\n              children: [...Array(50).keys()].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: num + 1,\n                children: num + 1\n              }, num + 1, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 10\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \" Add \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ClusterList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 3\n  }, this);\n};\n_s(UserPage, \"V1M9b2zo8AOUHFqQV2uk2rPTrHk=\");\n_c2 = UserPage;\nconst App = () => {\n  _s2();\n  // App state variables and updater functions\n  let [user, userDispatch] = useContext(UserContext);\n  // Gets logged-in user and token from localStorage if available */\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedFitnessAppUser');\n    if (loggedUserJSON) {\n      console.log('logged in user found');\n      const currentUser = JSON.parse(loggedUserJSON);\n      userDispatch({\n        type: 'LOG IN',\n        user: currentUser\n      });\n      workoutServices.setToken(currentUser.token);\n    }\n  }, [userDispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard\",\n          element: user ? /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 16\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            replace: true,\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user\",\n          element: user ? /*#__PURE__*/_jsxDEV(UserPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 16\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            replace: true,\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: user ? /*#__PURE__*/_jsxDEV(Navigate, {\n            replace: true,\n            to: \"/dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 16\n          }, this) : /*#__PURE__*/_jsxDEV(RegistrationPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/workout-history\",\n          element: user ? /*#__PURE__*/_jsxDEV(WorkoutHistoryPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 16\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            replace: true,\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: !user ? /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            replace: true,\n            to: \"/dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 3\n  }, this);\n};\n_s2(App, \"2JQMB+prMwUmRXWq4taG74NZnXU=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Notification\");\n$RefreshReg$(_c2, \"UserPage\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","Link","Navigate","useState","useEffect","useContext","UserContext","exerciseServices","workoutServices","Dashboard","Home","RegistrationPage","WorkoutHistoryPage","Header","jsxDEV","_jsxDEV","Notification","_ref","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","UserPage","_s","user","userDispatch","errorMessage","setErrorMessage","exercises","setExercises","workout","setWorkout","currSets","setCurrSets","currReps","setCurrReps","filteredExercises","setFilteredExercises","getAll","then","handleSetChange","event","target","value","handleRepChange","addCluster","preventDefault","exercise","sets","reps","elements","includes","newCluster","Object","keys","length","create","createdWorkout","console","log","clusters","updatedWorkout","concat","update","id","ClusterList","htmlFor","map","cluster","name","handleExerciseInputChange","userInputValue","toLowerCase","filteredExercisesTemp","filter","startsWith","onSubmit","list","placeholder","onChange","Array","num","type","_c2","App","_s2","loggedUserJSON","window","localStorage","getItem","currentUser","JSON","parse","setToken","token","path","element","replace","to","exact","_c3","$RefreshReg$"],"sources":["/Users/jasonramirez/Desktop/fitness-app/frontend/src/App.js"],"sourcesContent":["import {\n    BrowserRouter as Router,\n    Routes, Route, Link, Navigate\n} from 'react-router-dom'\nimport { useState, useEffect, useContext } from 'react'\nimport UserContext from './UserContext'\n\nimport exerciseServices from './services/exercises'\nimport workoutServices from './services/workouts'\n\nimport Dashboard from './components/Dashboard'\nimport Home from './components/Home'\nimport RegistrationPage from './components/RegistrationPage'\nimport WorkoutHistoryPage from './components/WorkoutHistoryPage'\nimport Header from './components/Header'\n\nimport './index.css'\n\n // Error notification \n const Notification = ({ message }) => {\n\treturn message === null ? null : <div className='error'> {message} </div>\n}\n\n// Defines page where a user can log their workout\nconst UserPage = () => {\n\tconst [user, userDispatch] = useContext(UserContext)\n\tconst [errorMessage, setErrorMessage] = useState([])    \t\n\t/* UserPage state variables and updater functions */\n\tconst [exercises, setExercises] = useState([])\n\tconst [workout, setWorkout] = useState({})\n\tconst [currSets, setCurrSets] = useState(0)\n\tconst [currReps, setCurrReps] = useState(0)\n\tconst [filteredExercises, setFilteredExercises] = useState([])\n\n\t/* Gets and sets all of the exercises from the backend */\n\tuseEffect(() => {\n\t\texerciseServices\n\t\t\t.getAll()\n\t\t\t.then(exercises => {\n\t\t\t\tsetExercises(exercises)\n\t\t\t})\n\t}, [])\n\n\tconst handleSetChange = (event) => {\t\n\t\tsetCurrSets(event.target.value)\n\t}\n\n\tconst handleRepChange = (event) => {\n\t\tsetCurrReps(event.target.value)\n\t}\n\n\tconst addCluster = (event) => {\n\t\tevent.preventDefault()\t    \n\t\tconst [exercise, sets, reps] = [\n\t\t\tevent.target.elements.exercises.value,\n\t\t\tevent.target.elements.sets.value,\n\t\t\tevent.target.elements.reps.value\n\t\t]\n\n\t\tif (!exercises.includes(exercise)) {\n\t\t\tsetErrorMessage('Exercise entered not valid. Please choose an exercise from the provided list.')\n\t\t\treturn\n\t\t}\n\n\t\tconst newCluster = {'exercise': exercise, 'sets': sets, 'reps': reps}\n\n\t\t/* Creates new workout with this cluster if first cluster of the workout */ \n\t\tif (Object.keys(workout).length === 0) {\n\t\t\tworkoutServices\n\t\t\t\t.create(newCluster)\n\t\t\t\t.then(createdWorkout => {\t\t\t\n\t\t\t\t\tsetWorkout({...createdWorkout})\n\t\t\t\t\tconsole.log(workout.clusters)\n\t\t\t\t})\t    \n\t\t} else {\n\t\t\t/* Adds cluster to previously existing workout */\t\t\n\t\t\tconst updatedWorkout = {...workout, clusters: workout.clusters.concat(newCluster)}\n\t\t\tworkoutServices\n\t\t\t\t.update(workout.id, updatedWorkout)\n\t\t\t\t.then(updatedWorkout => {\t\t\t\n\t\t\t\t\tsetWorkout(updatedWorkout)\n\t\t\t\t})\n\t\t}\n\t}\n\n\tconst ClusterList = () => {  \n\t\tif (Object.keys(workout).length === 0) {\n\t\t\treturn <label htmlFor=\"noClustersPrompt\"> Add your first exercise for this workout! </label>\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<table>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th> Exercise </th>\n\t\t\t\t\t\t<th> Sets </th>\n\t\t\t\t\t\t<th> Reps </th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{workout.clusters.map(cluster =>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td> {cluster.exercise.name} </td>\n\t\t\t\t\t\t\t\t<td> {cluster.sets} </td>\n\t\t\t\t\t\t\t\t<td> {cluster.reps} </td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t)\n\t\t}\n\t}\n  \n\t  const handleExerciseInputChange = (event) => {\n\t\tevent.preventDefault()\n\t\tconst userInputValue = event.target.value.toLowerCase()\n\t\tconst filteredExercisesTemp = exercises.filter( exercise =>\n\t\t\texercise.name.toLowerCase().startsWith(userInputValue)\n\t\t)\n\t\tsetFilteredExercises(filteredExercisesTemp)\n\t  }\n  \n\treturn (\n\t\t<div className=\"user-main\">\n\t\t\t<Header />\t\t\t\t\t\n\t\t\t<div className=\"user-log\">\n\t\t\t\t<Notification message={errorMessage}/>\n\t\t\t\t<div>\n\t\t\t\t\t<h2> Current Workout  </h2>\t\n\t\t\t\t</div>\n\t\t\t\t<form onSubmit={addCluster}>\t\t\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label htmlFor=\"exercise\">Exercise</label>\n\t\t\t\t\t\t<input list=\"exercise-list\" id=\"exercises\" \n\t\t\t\t\t\t\tplaceholder=\"Type to search...\" onChange={handleExerciseInputChange}/>\n\t\t\t\t\t\t<datalist id=\"exercise-list\">\n\t\t\t\t\t\t\t{filteredExercises.map( exercise => (\n\t\t\t\t\t\t\t\t<option key={exercise.id} value={exercise.name} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</datalist>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"sets-reps\">\n\t\t\t\t\t\t<div className=\"sets\">\n\t\t\t\t\t\t\t<label htmlFor=\"sets\">Sets</label>\n\t\t\t\t\t\t\t<select id=\"sets\" value={currSets} onChange={handleSetChange}>\n\t\t\t\t\t\t\t\t{[...Array(20).keys()].map((num) => (\n\t\t\t\t\t\t\t\t\t<option key={num+1} value={num+1}>\n\t\t\t\t\t\t\t\t\t\t{num + 1}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"reps\">\n\t\t\t\t\t\t\t<label htmlFor=\"reps\">Reps</label>\n\t\t\t\t\t\t\t<select id=\"reps\" value={currReps} onChange={handleRepChange}>\n\t\t\t\t\t\t\t\t{[...Array(50).keys()].map((num) => (\n\t\t\t\t\t\t\t\t\t<option key={num+1} value={num+1}>\n\t\t\t\t\t\t\t\t\t\t{num + 1}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button type=\"submit\"> Add </button>\n\t\t\t\t</form>\n\t\t\t\t<ClusterList />\n\t\t\t</div>\t       \n\t\t</div>\n\t)\t\n}\n\nconst App = () => {\n    // App state variables and updater functions\n    let [user, userDispatch] = useContext(UserContext)\n\t// Gets logged-in user and token from localStorage if available */\n\tuseEffect(() => {\n\t\tconst loggedUserJSON = window.localStorage.getItem('loggedFitnessAppUser');\n\t\tif (loggedUserJSON) {\n\t\t\tconsole.log('logged in user found')\n\t\t\tconst currentUser = JSON.parse(loggedUserJSON);\n\t\t\tuserDispatch({ type: 'LOG IN', user: currentUser });\n\t\t\tworkoutServices.setToken(currentUser.token);\n\t\t}\n\t  }, [userDispatch])\n\n    return (\n\t\t<div>\n\t\t\t<Router>\t        \n\t\t\t\t<Routes>\n\t\t\t\t\t<Route path=\"/dashboard\" element ={\n\t\t\t\t\t\tuser ? ( <Dashboard /> ) : ( <Navigate replace to={\"/\"} /> )\n\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route path=\"/user\" element={\n\t\t\t\t\t\tuser ? ( <UserPage /> ) : ( <Navigate replace to={\"/\"} /> )\n\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route path=\"/register\" element={\n\t\t\t\t\t\tuser ? ( <Navigate replace to={\"/dashboard\"} /> ) : ( <RegistrationPage /> )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route path=\"/workout-history\" element={\n\t\t\t\t\t\tuser ? ( <WorkoutHistoryPage /> ) : ( <Navigate replace to={\"/\"} /> )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route exact path=\"/\" element={\n\t\t\t\t\t\t!user ? ( <Home /> ) : ( <Navigate replace to={\"/dashboard\"} /> )\n\t\t\t\t\t}\n\t\t\t\t\t/> \n\t\t\t\t</Routes>\n\t\t\t</Router>\n\t\t</div>\n    )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}