{"ast":null,"code":"var _jsxFileName = \"/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/ExercisePopularityTable.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport exerciseServices from '../services/exercises';\nimport Table from 'react-bootstrap/Table';\nimport './ExercisePopularityTable.css';\n\n//Creates a table that displays the 10 most popular exercises based on muscle groups or generally\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExercisePopularityTable = _ref => {\n  _s();\n  let {\n    targetMuscles\n  } = _ref;\n  const [exercises, setExercises] = useState([]);\n  const [mostPopularExercises, setMostPopularExercises] = useState([]);\n  const [filteredTargetMuscles, setFilteredTargetMuscles] = useState([]);\n  const [selectedTargetMuscle, setSelectedTargetMuscle] = useState('');\n  useEffect(() => {\n    // Sets exercises state variable\n    const fetchExercises = async () => {\n      try {\n        const exercisesTemp = await exerciseServices.getAll();\n        setExercises(exercisesTemp);\n      } catch (error) {\n        console.log('Error fetching exercises', error);\n      }\n    };\n\n    //Sets mostPopularExercises state variable\n    const fetchMostPopularExercises = async () => {\n      try {\n        const currentMostPopularExercises = await exerciseServices.getMostPopular();\n        setMostPopularExercises(currentMostPopularExercises);\n      } catch (error) {\n        console.log('Error fetching most popular exercises', error);\n      }\n    };\n    fetchExercises();\n    fetchMostPopularExercises();\n  }, []);\n  useEffect(() => {\n    setFilteredTargetMuscles(targetMuscles);\n    const initializeTargetMuscleList = async () => {\n      try {\n        const mostPopularExercisesMG = await exerciseServices.getMostPopular(targetMuscles[0]);\n        setMostPopularExercises(mostPopularExercisesMG);\n        setSelectedTargetMuscle(targetMuscles[0]);\n      } catch (error) {\n        console.log(`Error getting most popular exercises for ${targetMuscles[0]}`);\n      }\n    };\n    initializeTargetMuscleList();\n  }, [targetMuscles]);\n  const handleTargetMuscleInputChange = async event => {\n    event.preventDefault();\n    const userInputValue = event.target.value.toLowerCase();\n    const filteredTargetMusclesTemp = targetMuscles.filter(targetMuscle => targetMuscle.toLowerCase().startsWith(userInputValue));\n    setFilteredTargetMuscles(filteredTargetMusclesTemp);\n    if (targetMuscles.includes(userInputValue)) {\n      try {\n        const mostPopularExercisesMG = await exerciseServices.getMostPopular(userInputValue);\n        setMostPopularExercises(mostPopularExercisesMG);\n        setSelectedTargetMuscle(userInputValue);\n      } catch (error) {\n        console.log(`Error getting most popular exercises for ${userInputValue}`);\n      }\n    }\n    elif(userInputValue === 'general');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exercise-popularity-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"target-muscle\",\n        children: \"Target Muscle: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        list: \"target-muscles-list\",\n        id: \"target-muscles\",\n        placeholder: \"Choose a target muscle or type 'general'\",\n        onChange: handleTargetMuscleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"target-muscles-list\",\n        children: filteredTargetMuscles.map((targetMuscle, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: targetMuscle\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [`Selected Target Muscle: ${selectedTargetMuscle}`, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: 3,\n            children: \"Most Popular Exercises\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Exercise Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: mostPopularExercises.map((exercise, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", index + 1, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", exercise, \" \"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(ExercisePopularityTable, \"VLaqKdcQpKY5gVLX/Qn/MXw2oUg=\");\n_c = ExercisePopularityTable;\nexport default ExercisePopularityTable;\nvar _c;\n$RefreshReg$(_c, \"ExercisePopularityTable\");","map":{"version":3,"names":["useState","useEffect","exerciseServices","Table","jsxDEV","_jsxDEV","ExercisePopularityTable","_ref","_s","targetMuscles","exercises","setExercises","mostPopularExercises","setMostPopularExercises","filteredTargetMuscles","setFilteredTargetMuscles","selectedTargetMuscle","setSelectedTargetMuscle","fetchExercises","exercisesTemp","getAll","error","console","log","fetchMostPopularExercises","currentMostPopularExercises","getMostPopular","initializeTargetMuscleList","mostPopularExercisesMG","handleTargetMuscleInputChange","event","preventDefault","userInputValue","target","value","toLowerCase","filteredTargetMusclesTemp","filter","targetMuscle","startsWith","includes","elif","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","list","id","placeholder","onChange","map","index","striped","colSpan","exercise","_c","$RefreshReg$"],"sources":["/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/ExercisePopularityTable.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport exerciseServices from '../services/exercises'\nimport Table from 'react-bootstrap/Table'\nimport './ExercisePopularityTable.css'\n\n//Creates a table that displays the 10 most popular exercises based on muscle groups or generally\nconst ExercisePopularityTable = ({ targetMuscles }) => {\n    const [exercises, setExercises] = useState([])\n    const [mostPopularExercises, setMostPopularExercises] = useState([])\n    const [filteredTargetMuscles, setFilteredTargetMuscles] = useState([])\n    const [selectedTargetMuscle, setSelectedTargetMuscle] = useState('')\n    \n    useEffect(() => {\n        // Sets exercises state variable\n        const fetchExercises = async () => {\n            try {\n                const exercisesTemp = await exerciseServices.getAll()\n                setExercises(exercisesTemp)\n            } catch (error) {\n                console.log('Error fetching exercises', error)\n            }\n        }\n       \n        //Sets mostPopularExercises state variable\n        const fetchMostPopularExercises = async () => {\n            try {\n                const currentMostPopularExercises = await exerciseServices.getMostPopular()\n                setMostPopularExercises(currentMostPopularExercises) \n            } catch (error) {\n                console.log('Error fetching most popular exercises', error)\n            }\n        }\n\n        fetchExercises()\n        fetchMostPopularExercises()\n    }, [])\n\n    useEffect(() => {\n        setFilteredTargetMuscles(targetMuscles)\n        const initializeTargetMuscleList = async () => {\n            try {\n                const mostPopularExercisesMG = await exerciseServices.getMostPopular(targetMuscles[0])\n                setMostPopularExercises(mostPopularExercisesMG)\n                setSelectedTargetMuscle(targetMuscles[0])\n            } catch (error) {\n                console.log(`Error getting most popular exercises for ${targetMuscles[0]}`)\n            }\n        }\n\n        initializeTargetMuscleList()\n    }, [targetMuscles])\n\n    const handleTargetMuscleInputChange = async (event) => {\n        event.preventDefault()\n        const userInputValue = event.target.value.toLowerCase()\n        const filteredTargetMusclesTemp = targetMuscles.filter(targetMuscle =>\n            targetMuscle.toLowerCase().startsWith(userInputValue)\n        )\n        setFilteredTargetMuscles(filteredTargetMusclesTemp)\n\n        if (targetMuscles.includes(userInputValue)) {\n            try {\n                const mostPopularExercisesMG = await exerciseServices.getMostPopular(userInputValue)\n                setMostPopularExercises(mostPopularExercisesMG)\n                setSelectedTargetMuscle(userInputValue)  \n            } catch (error) {\n                console.log(`Error getting most popular exercises for ${userInputValue}`)\n            }\n        } elif (userInputValue === 'general')\n    }\n\n    return (\n        <div className=\"exercise-popularity-table\">\n            <div>\n                <label htmlFor='target-muscle'>Target Muscle: </label>\n                <input list=\"target-muscles-list\" \n                        id=\"target-muscles\" \n                        placeholder=\"Choose a target muscle or type 'general'\" \n                        onChange={handleTargetMuscleInputChange}\n                />\n                <datalist id=\"target-muscles-list\">\n                    {filteredTargetMuscles.map( (targetMuscle, index) => (\n                        <option key={index} value={targetMuscle}/>\n                    ))}\n                </datalist>\n                <label>{`Selected Target Muscle: ${selectedTargetMuscle}`} </label>\n            </div>\n            <Table striped>\n                <thead>\n                    <tr>\n                        <th colSpan={3}>\n                            Most Popular Exercises\n                        </th>\n                    </tr>\n                    <tr>\n                        <th>Rank</th>\n                        <th>Exercise Name</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {mostPopularExercises.map((exercise, index) => {\n                        return (\n                            <tr key={index}> \n                                <td> {index+ 1} </td> \n                                <td key={index}> {exercise} </td> \n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </Table>\n        </div>\n    )\n}\n\nexport default ExercisePopularityTable"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}