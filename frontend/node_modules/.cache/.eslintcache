[{"/Users/jasonramirez/Desktop/fitness-app/frontend/src/index.js":"1","/Users/jasonramirez/Desktop/fitness-app/frontend/src/App.js":"2","/Users/jasonramirez/Desktop/fitness-app/frontend/src/reportWebVitals.js":"3","/Users/jasonramirez/Desktop/fitness-app/frontend/src/services/exercises.js":"4","/Users/jasonramirez/Desktop/fitness-app/frontend/src/services/workouts.js":"5","/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/LoginForm.js":"6","/Users/jasonramirez/Desktop/fitness-app/frontend/src/services/login.js":"7","/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/RegistrationPage.js":"8","/Users/jasonramirez/Desktop/fitness-app/frontend/src/services/register.js":"9","/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/Home.js":"10","/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/UserSidebar.js":"11","/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/WorkoutHistoryPage.js":"12","/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/Header.js":"13","/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/targetMusclePoints.js":"14","/Users/jasonramirez/Desktop/fitness-app/frontend/src/UserContext.js":"15","/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/Dashboard.js":"16","/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/ExercisePopularityTable.js":"17","/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/UserRankingsTable.js":"18","/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/UserProgressChart.js":"19","/Users/jasonramirez/Desktop/fitness-app/frontend/src/ErrorMessageContext.js":"20","/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/Notification.js":"21","/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/WorkoutLogPage.js":"22"},{"size":428,"mtime":1684806030486,"results":"23","hashOfConfig":"24"},{"size":1817,"mtime":1684692495834,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1682652513746,"results":"26","hashOfConfig":"24"},{"size":648,"mtime":1684539632736,"results":"27","hashOfConfig":"24"},{"size":1390,"mtime":1684649959921,"results":"28","hashOfConfig":"24"},{"size":2004,"mtime":1684634721041,"results":"29","hashOfConfig":"24"},{"size":207,"mtime":1683204021070,"results":"30","hashOfConfig":"24"},{"size":2677,"mtime":1684634383513,"results":"31","hashOfConfig":"24"},{"size":207,"mtime":1683673911231,"results":"32","hashOfConfig":"24"},{"size":783,"mtime":1684633806760,"results":"33","hashOfConfig":"24"},{"size":1366,"mtime":1683689230183,"results":"34","hashOfConfig":"24"},{"size":5543,"mtime":1684701592596,"results":"35","hashOfConfig":"24"},{"size":1648,"mtime":1684650331053,"results":"36","hashOfConfig":"24"},{"size":12553,"mtime":1684701334510,"results":"37","hashOfConfig":"24"},{"size":980,"mtime":1684445750119,"results":"38","hashOfConfig":"24"},{"size":1572,"mtime":1684647854476,"results":"39","hashOfConfig":"24"},{"size":4747,"mtime":1684697418524,"results":"40","hashOfConfig":"24"},{"size":123,"mtime":1684471742744,"results":"41","hashOfConfig":"24"},{"size":4712,"mtime":1684648074284,"results":"42","hashOfConfig":"24"},{"size":1088,"mtime":1684631876131,"results":"43","hashOfConfig":"24"},{"size":482,"mtime":1684691588528,"results":"44","hashOfConfig":"24"},{"size":5220,"mtime":1684692647047,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ox4kf0",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jasonramirez/Desktop/fitness-app/frontend/src/index.js",[],[],"/Users/jasonramirez/Desktop/fitness-app/frontend/src/App.js",[],[],"/Users/jasonramirez/Desktop/fitness-app/frontend/src/reportWebVitals.js",[],[],"/Users/jasonramirez/Desktop/fitness-app/frontend/src/services/exercises.js",["123"],[],"import axios from 'axios'\nconst baseUrl = '/api/exercises'\n\nconst getAll  = ()  => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst getMostPopular = async (muscleGroup = '') => {\n    const replacedMuscleGroup = muscleGroup.replace(/ /g, '-')\n    const url = `${baseUrl}/popular${muscleGroup.length ? `/${replacedMuscleGroup}` : ''}`\n    const response = await axios.get(url)\n    return response.data\n}\n\nconst getTargetMuscles = async () => {\n    const response = await axios.get(`${baseUrl}/target-muscles`)\n    return response.data\n}\n\nexport default { getAll, getMostPopular, getTargetMuscles }\n","/Users/jasonramirez/Desktop/fitness-app/frontend/src/services/workouts.js",["124"],[],"import axios from 'axios'\nconst baseUrl = '/api/workouts'\n\nlet token = null\n\nconst setToken = newToken => {\n    token = `Bearer ${newToken}`\n}\n\nconst removeToken = () => {\n    token = null\n}\n\nconst create = async newCluster => {\n    const config = {\n\t    headers: { Authorization: token},\n    }   \n    const response = await axios.post(baseUrl, newCluster, config)\n    return response.data\n}\n\nconst update = async (id, newWorkout) => {\n    const config = {\n\t    headers: { Authorization: token},\n    }\n    const response = await axios.put(`${baseUrl}/${id}`, newWorkout, config)\n    return response.data\n}\n\nconst get = async ()  => {    \n    const config = {\n\t    headers: { Authorization: token},\n    }\n    const response = await axios.get(baseUrl, config)\n    return response.data\n}\n\nconst getUserWorkoutExercises = async () => {\n    const config = {\n        headers: { Authorization: token},\n    }\n    const response = await axios.get(`${baseUrl}/exercises`, config)\n    return response.data\n}\n\nconst getUserClusters = async (exercise) => {\n    const replacedExercise = exercise.replace(/ /g, '_')\n    const config = {\n        headers: { Authorization: token},\n    }\n    const response = await axios.get(`${baseUrl}/clusters/${replacedExercise}`, config)\n    return response.data\n}\n\nexport default { create, update, setToken, get, removeToken, getUserWorkoutExercises, getUserClusters }\n","/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/LoginForm.js",[],[],"/Users/jasonramirez/Desktop/fitness-app/frontend/src/services/login.js",["125"],[],"import axios from 'axios'\n\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n    const response = await axios.post(baseUrl, credentials)\n    return response.data\n}\n\nexport default { login }\n",[],"/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/RegistrationPage.js",["126","127"],[],"import { useState, useContext } from 'react'\nimport ErrorMessageContext from '../ErrorMessageContext'\nimport registrationServices from '../services/register'\nimport Header from './Header'\nimport Notification from './Notification'\nimport './RegistrationPage.css'\n\nconst RegistrationPage = () => {\n    const [name, setName] = useState('')\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [errorMessage, errorMessageDispatch] = useContext(ErrorMessageContext)\n    \n    const handleRegistration = async (event) => {\n      event.preventDefault()\n\n      //Checks that all fields are entered\n      if (username.trim().length === 0 || name.trim().length === 0 || password.trim().length === 0) {\n        errorMessageDispatch( {type: \"SET_ERROR\", message: \"all fields are required\"} )\n        return\n      }\n      else {\n        try {\n          const user = await registrationServices.register({ username, name, password })\n          console.log('user registered successfully')\n        } catch (exception) {\n          errorMessageDispatch( {type: \"SET_ERROR\", message: \"username already in use\"} )\n          console.log('error registering user')   \n        }\n      }\n    }\n\n    return (\n      <div className=\"registration-page\">\n        <Header />\n        <div className=\"page-container\">\n          <h1 className=\"header-title\">Start Swologging</h1>\n          <div className=\"registration-form-container\">\n            <form onSubmit={handleRegistration}>\n              <div className=\"form-group\">\n                <label htmlFor=\"name\">Name</label>\n                <input\n                  type=\"text\"\n                  value={name}\n                  name=\"name\"\n                  onChange={({ target }) => setName(target.value)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <input\n                  type=\"text\"\n                  value={username}\n                  name=\"username\"\n                  onChange={({ target }) => setUsername(target.value)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  type=\"text\"\n                  value={password}\n                  name=\"password\"\n                  onChange={({ target }) => setPassword(target.value)}\n                />\n              </div>\n              <button type=\"submit\">Register</button>\n            </form>\n          </div>\n          <Notification />\n        </div>\n\t    </div>\n  )\n}\nexport default RegistrationPage\n    \n","/Users/jasonramirez/Desktop/fitness-app/frontend/src/services/register.js",["128"],[],"import axios from 'axios'\n\nconst baseUrl = '/api/users'\n\nconst register = async userInfo => {\n    const response = await axios.post(baseUrl, userInfo)\n    return response.data\n}\n\nexport default { register }\n","/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/Home.js",["129","130"],[],"import { useState, useContext } from 'react'\nimport { useErrorMessageValue } from '../ErrorMessageContext'\nimport LoginForm from './LoginForm'\nimport Header from './Header'\nimport Notification from './Notification'\nimport './Home.css'\n\nconst Home = () => {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    return (\n      <div className=\"home\">\n          <Header />\n          <div className=\"login-container\">\n            <h1 className=\"sign-in\"> Sign In </h1>\n            <LoginForm\n              username={username}\n              setUsername={setUsername}\n              password={password}\n              setPassword={setPassword}\n            />\n            <Notification />\n          </div>\n    </div>\n  )\n}\n\nexport default Home\n","/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/UserSidebar.js",["131"],[],"import {Sidebar, Menu, MenuItem, useProSidebar} from 'react-pro-sidebar'\n\nimport { FiHome, FiLogOut, FiArrowLeftCircle, FiArrowRightCircle } from \"react-icons/fi\"\n\nimport { Link } from 'react-router-dom'\n\nimport './UserSidebar.css'\n\nconst UserSidebar = ({setLoggedIn}) => {\n    const { collapseSidebar, collapsed } = useProSidebar()\n    return (\n\t    <>\n\t    <div id=\"us\">\n\t    <Sidebar id=\"sidebar\">\n\t    <div className=\"close-sb\" onClick={() => collapseSidebar()}>\n\t    {!collapsed ? (<FiArrowLeftCircle />) : (<FiArrowRightCircle />)}\n\t    </div>\n\t    <Menu id=\"menu\">\n\t    {/*Home icon should take user to a personalized user home screen, log out button should take user to log in regular home page*/}\n\t    <div className=\"menu-container\">\n\t    <MenuItem className=\"menu-item\" component={<Link to=\"/register\" />}> Home </MenuItem>\n\t    <MenuItem className=\"menu-item\" component={<Link to=\"/workout-history\" />}> Workout History </MenuItem>\n\t    <MenuItem className=\"menu-item\"> Fitness Progress </MenuItem>\n\t    </div>\n\t    </Menu>\n\t    <div className=\"logout-button\" onClick={() => {\n\t\tsetLoggedIn(false)\n\t    }}>\n\t    <div className=\"logout-icon\">\n\t    <Link to=\"/\">\n\t    <FiLogOut />\n\t    </Link>\n\t    </div>\n\t    <div className=\"logout-text\">\n\t    Logout\n\t    </div>\n\t    </div>\n\t    </Sidebar>\n\t    \n\t    </div>\n\t    </>\n    )\n}\n\nexport default UserSidebar\n","/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/WorkoutHistoryPage.js",["132"],[],"import { useState } from 'react'\nimport workoutServices from '../services/workouts'\nimport './WorkoutHistoryPage.css'\nimport Header from './Header'\nimport maleHumanBodyImage from '../maleHumanBodyImage.png'\nimport maleHumanBodyBackImage from '../maleHumanBodyBackImage.png'\n\nimport { targetFrontMusclePoints, targetBackMusclePoints } from './targetMusclePoints'\n\n//Displays front and back human body images and highlights specified muscle groups using <polygon> elements\nconst HumanBody = ({ targetMusclesUsed }) => {\n\treturn (\n\t\t<div className=\"image-container\">\n\t\t\t<div className=\"image-wrapper\">\n\t\t\t\t<img src={maleHumanBodyImage} alt=\"Male Human Body\"/>\n\t\t\t\t\n\t\t\t</div>\n\t\t\t<div className=\"back-image-wrapper\">\n\t\t\t\t<img src={maleHumanBodyBackImage} alt=\"Male Human Body Back\"/>\n\t\t\t</div>\n\n\t\t\t<svg className=\"highlight\" viewBox=\"0 0 430 750\"\n\t\t\t\tstyle={{top: '48px', left: '0px', width: '372px', height: '650px'}}\n\t\t\t>\n\t\t\t\t{Object.entries(targetMusclesUsed).map(([key, value]) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<polygon\n\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\tpoints={targetFrontMusclePoints[key]}\n\t\t\t\t\t\t\tfill=\"red\"\n\t\t\t\t\t\t\tstroke=\"rgb(0,0,225)\"\n\t\t\t\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</svg>\n\t\t\t<svg className=\"highlight\" viewBox=\"0 0 430 750\"\n\t\t\t\t\tstyle={{ top: '49px', left: '399px', width: '372px', height: '650px' }}\n\t\t\t\t>\n\t\t\t\t{Object.entries(targetMusclesUsed).map(([key, value]) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<polygon\n\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\tpoints={targetBackMusclePoints[key]}\n\t\t\t\t\t\t\tfill=\"red\"\n\t\t\t\t\t\t\tstroke=\"rgb(0,0,225)\"\n\t\t\t\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t        </svg>\n\t    </div>\n\t)\n}\n\n/* Allows user to select a workout and displays a list of selectable exercises for the selected workout,\nalong with human body images that highlight the muscle groups used for a selected exercise */\nconst WorkoutHistoryPage = () => {\n\t//Defines state variables and updater functions\n    const [openDropdown, setOpenDropdown] = useState(false)\n    const [prevWorkouts, setPrevWorkouts] = useState([])\n    const [selectedWorkout, setSelectedWorkout] = useState(null)\n    const [targetMusclesUsed, setTargetMusclesUsed] = useState({})\n\tconst [selectedRow, setSelectedRow] = useState(-1)\n    \n\t//Shows or hides 'dropdown' list of user's workouts (if any)\n    const handleDropdownClick = async () => {\n\t\tsetOpenDropdown(!openDropdown)\n\t\tconst userWorkouts = await workoutServices.get()\n\t\tif (userWorkouts.length !== 0) {\n\t\t\tsetPrevWorkouts(userWorkouts)\n\t\t\tsetSelectedWorkout(userWorkouts[0])\n\t\t}    \n    }\n\n\t//Selects the workout from the Dropdown list\n    const handleSelectedWorkoutChange = (event) => {\n\t\tconst newSelectedWorkout = prevWorkouts.find((workout) => workout.id === event.target.value)\n\t\tsetSelectedWorkout(newSelectedWorkout)\n    }\n    \n\t// 'dropdown' list that displays a list of saved user workouts\n    const Dropdown = ({open, trigger}) => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{trigger}\n\t\t\t\t{open ? (\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<select name=\"previous-workouts\" id=\"previous-workouts\" value={selectedWorkout ? selectedWorkout.id : ''} onChange={handleSelectedWorkoutChange}>\n\t\t\t\t\t\t\t{prevWorkouts.map((workout, index) =>\n\t\t\t\t\t\t\t\t<option key={workout.id} value={workout.id}> \n\t\t\t\t\t\t\t\t\t{workout.createdAt} \n\t\t\t\t\t\t\t\t</option>)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</ul>\n\t\t\t\t) : null}\n\t\t\t</>\n\t\t)\n    }\n\n\t/* When user selects an exercise from the workout, this function handler sets the exercise 'targetMuscles' in the setTargetMusclesUsed hashmap to 'true' \n\tAlso selects the corresponding row of the exercise using the index */\n    const handleExerciseSelection = (exercise, index) => {\n\t\tconst newTargetMusclesUsed = {}\n\t\texercise.targetMuscles.map( targetMuscle => {\n\t\t\tif (targetMuscle === 'left forearm' || targetMuscle === 'right forearm') {\n\t\t\t\tnewTargetMusclesUsed[targetMuscle.concat(' back')] = true\n\t\t\t} else if(targetMuscle === 'upper traps') {\n\t\t\t\tnewTargetMusclesUsed[targetMuscle.concat(' front right')] = true\n\t\t\t\tnewTargetMusclesUsed[targetMuscle.concat(' front left')] = true\n\t\t\t} else if(targetMuscle === 'right calf' || targetMuscle === 'left calf') {\n\t\t\t\tnewTargetMusclesUsed[targetMuscle.concat(' front right')] = true\n\t\t\t\tnewTargetMusclesUsed[targetMuscle.concat(' front left')] = true\n\t\t\t}\n\t\t\tnewTargetMusclesUsed[targetMuscle] = true\n\t\t})\n\t\tsetTargetMusclesUsed(newTargetMusclesUsed)\n\t\tsetSelectedRow(index)\n    }\n    \n    return (\n     \t <div className=\"wh-main\">\n\t\t\t<Header />\n\t\t\t<div className=\"workout-display\">\n\t\t\t\t<div className=\"prev-workouts\">\n\t\t\t\t\t<Dropdown\n\t\t\t\t\t\topen={openDropdown}\n\t\t\t\t\t\ttrigger={<button onClick={handleDropdownClick}> Previous Workouts </button>}\n\t\t\t\t\t/>\n\t\t\t\t\t{selectedWorkout === null ? <label> Choose a workout  </label> :\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Exercise</th>\n\t\t\t\t\t\t\t\t\t<th>Weight</th>\n\t\t\t\t\t\t\t\t\t<th>Sets</th>\n\t\t\t\t\t\t\t\t\t<th>Reps</th>\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{selectedWorkout.clusters.map( (cluster, index) => (\n\t\t\t\t\t\t\t\t\t<tr key={cluster.id} className={selectedRow === index ? 'table-row-highlighted' : ''}  onClick={() => handleExerciseSelection(cluster.exercise, index)}>\n\t\t\t\t\t\t\t\t\t\t<td className=\"label\">{cluster.exercise.name}</td>\n\t\t\t\t\t\t\t\t\t\t<td className=\"label\">{cluster.weight}</td>\n\t\t\t\t\t\t\t\t\t\t<td className=\"label\">{cluster.sets}</td>\n\t\t\t\t\t\t\t\t\t\t<td className=\"label\">{cluster.reps}</td>\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\t\t\t\t\t\t     \t\n\t\t\t\t\t}\t    \n\t\t\t\t</div>\n\t\t\t\t<div className=\"human-body\">\n\t\t\t\t\t<HumanBody targetMusclesUsed={targetMusclesUsed}/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default WorkoutHistoryPage\n","/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/Header.js",[],[],"/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/targetMusclePoints.js",[],[],"/Users/jasonramirez/Desktop/fitness-app/frontend/src/UserContext.js",[],[],"/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/Dashboard.js",["133"],[],"import Header from './Header'\nimport { useState, useEffect } from 'react'\nimport { useUserValue } from '../UserContext'\nimport ExercisePopularityTable from './ExercisePopularityTable'\nimport UserRankingsTable from './UserRankingsTable'\nimport UserProgressChart from './UserProgressChart'\nimport exerciseServices from '../services/exercises'\nimport './Dashboard.css'\n\nconst Dashboard = () => {\n    // Gets 'user' state variable from UserContext\n    const user = useUserValue()\n\n    /* Declares and initalizes 'targetMuscles' state variable\n    that stores a list of target muscle strings */\n    const [targetMuscles, setTargetMuscles] = useState([])\n\n     // Fetches target muscles from backend and \n     // sets targetMuscles state variable    \n     useEffect(() => {\n        const fetchTargetMuscles = async () => {\n            try {\n                // Fetches target muscle from backend\n                const targetMusclesTemp = await exerciseServices.getTargetMuscles()\n                setTargetMuscles(targetMusclesTemp)\n            } catch (error) {\n                console.log('Error fetching target muscles', error)\n            }\n        }\n        fetchTargetMuscles()\n    }, [])\n\n    return (\n        <div className=\"dashboard\">\n            <Header />\n            <h1 className=\"welcome-header\"> {`Welcome, ${user.username}!`}</h1>\n            <div className=\"exercise-tables\">\n                <ExercisePopularityTable targetMuscles={targetMuscles} />\n                <UserProgressChart />\n            </div>        \n       </div>\n    )\n}\n\nexport default Dashboard","/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/ExercisePopularityTable.js",["134"],[],"import { useState, useEffect } from 'react'\nimport exerciseServices from '../services/exercises'\nimport Table from 'react-bootstrap/Table'\nimport './ExercisePopularityTable.css'\n\n//Creates a table that displays the 10 most popular exercises based on muscle groups or generally\nconst ExercisePopularityTable = ({ targetMuscles }) => {\n    const [exercises, setExercises] = useState([])\n    const [mostPopularExercises, setMostPopularExercises] = useState([])\n    const [filteredTargetMuscles, setFilteredTargetMuscles] = useState([])\n    const [selectedTargetMuscle, setSelectedTargetMuscle] = useState('')\n    \n    useEffect(() => {\n        // Sets exercises state variable\n        const fetchExercises = async () => {\n            try {\n                const exercisesTemp = await exerciseServices.getAll()\n                setExercises(exercisesTemp)\n            } catch (error) {\n                console.log('Error fetching exercises', error)\n            }\n        }\n       \n        //Sets mostPopularExercises state variable\n        const fetchMostPopularExercises = async () => {\n            try {\n                const currentMostPopularExercises = await exerciseServices.getMostPopular()\n                setMostPopularExercises(currentMostPopularExercises) \n            } catch (error) {\n                console.log('Error fetching most popular exercises', error)\n            }\n        }\n\n        fetchExercises()\n        fetchMostPopularExercises()\n    }, [])\n\n    useEffect(() => {\n        setFilteredTargetMuscles(targetMuscles)\n        const initializeTargetMuscleList = async () => {\n            try {\n                const mostPopularExercisesMG = await exerciseServices.getMostPopular(targetMuscles[0])\n                setMostPopularExercises(mostPopularExercisesMG)\n                setSelectedTargetMuscle(targetMuscles[0])\n            } catch (error) {\n                console.log(`Error getting most popular exercises for ${targetMuscles[0]}`)\n            }\n        }\n\n        initializeTargetMuscleList()\n    }, [targetMuscles])\n\n    const handleTargetMuscleInputChange = async (event) => {\n        event.preventDefault()\n        const userInputValue = event.target.value.toLowerCase()\n        const filteredTargetMusclesTemp = targetMuscles.filter(targetMuscle =>\n            targetMuscle.toLowerCase().startsWith(userInputValue)\n        )\n        setFilteredTargetMuscles(filteredTargetMusclesTemp)\n\n        if (targetMuscles.includes(userInputValue)) {\n            try {\n                const mostPopularExercisesMG = await exerciseServices.getMostPopular(userInputValue)\n                setMostPopularExercises(mostPopularExercisesMG)\n                setSelectedTargetMuscle(userInputValue)  \n            } catch (error) {\n                console.log(`Error getting most popular exercises for ${userInputValue}`)\n            }\n        } else if (userInputValue === 'general') {\n            const mostPopularExercises = await exerciseServices.getMostPopular()\n            setMostPopularExercises(mostPopularExercises)\n            setSelectedTargetMuscle('')  \n        }\n    }\n\n    return (\n        <div className=\"exercise-popularity-table\">\n            <div className='top'>\n                <label htmlFor='target-muscle'>Target Muscle: </label>\n                <input list=\"target-muscles-list\" \n                        id=\"target-muscles\" \n                        placeholder=\"Choose a target muscle or type 'general'\" \n                        onChange={handleTargetMuscleInputChange}\n                />\n                <datalist id=\"target-muscles-list\">\n                    {filteredTargetMuscles.map( (targetMuscle, index) => (\n                        <option key={index} value={targetMuscle}/>\n                    ))}\n                </datalist>\n                <label>{`Selected Target Muscle: ${selectedTargetMuscle}`} </label>\n            </div>\n            <Table striped>\n                <thead>\n                    <tr>\n                        <th colSpan={3}>\n                            Most Popular Exercises\n                        </th>\n                    </tr>\n                    <tr>\n                        <th>Rank</th>\n                        <th>Exercise Name</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {mostPopularExercises.map((exercise, index) => {\n                        return (\n                            <tr key={index}> \n                                <td> {index+ 1} </td> \n                                <td key={index}> {exercise} </td> \n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </Table>\n        </div>\n    )\n}\n\nexport default ExercisePopularityTable","/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/UserRankingsTable.js",[],[],"/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/UserProgressChart.js",[],[],"/Users/jasonramirez/Desktop/fitness-app/frontend/src/ErrorMessageContext.js",[],[],"/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/Notification.js",[],[],"/Users/jasonramirez/Desktop/fitness-app/frontend/src/components/WorkoutLogPage.js",[],[],{"ruleId":"135","severity":1,"message":"136","line":21,"column":1,"nodeType":"137","endLine":21,"endColumn":60},{"ruleId":"135","severity":1,"message":"136","line":55,"column":1,"nodeType":"137","endLine":55,"endColumn":104},{"ruleId":"135","severity":1,"message":"136","line":10,"column":1,"nodeType":"137","endLine":10,"endColumn":25},{"ruleId":"138","severity":1,"message":"139","line":12,"column":12,"nodeType":"140","messageId":"141","endLine":12,"endColumn":24},{"ruleId":"138","severity":1,"message":"142","line":24,"column":17,"nodeType":"140","messageId":"141","endLine":24,"endColumn":21},{"ruleId":"135","severity":1,"message":"136","line":10,"column":1,"nodeType":"137","endLine":10,"endColumn":28},{"ruleId":"138","severity":1,"message":"143","line":1,"column":20,"nodeType":"140","messageId":"141","endLine":1,"endColumn":30},{"ruleId":"138","severity":1,"message":"144","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":30},{"ruleId":"138","severity":1,"message":"145","line":3,"column":10,"nodeType":"140","messageId":"141","endLine":3,"endColumn":16},{"ruleId":"146","severity":1,"message":"147","line":106,"column":44,"nodeType":"148","messageId":"149","endLine":106,"endColumn":46},{"ruleId":"138","severity":1,"message":"150","line":5,"column":8,"nodeType":"140","messageId":"141","endLine":5,"endColumn":25},{"ruleId":"138","severity":1,"message":"151","line":8,"column":12,"nodeType":"140","messageId":"141","endLine":8,"endColumn":21},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'errorMessage' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'useContext' is defined but never used.","'useErrorMessageValue' is defined but never used.","'FiHome' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'UserRankingsTable' is defined but never used.","'exercises' is assigned a value but never used."]